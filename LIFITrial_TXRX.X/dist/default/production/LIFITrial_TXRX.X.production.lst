

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Sep 01 20:44:41 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000D                     	;# 
    36  000E                     	;# 
    37  000E                     	;# 
    38  000F                     	;# 
    39  0010                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0014                     	;# 
    44  0015                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  001D                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  0081                     	;# 
    58  0085                     	;# 
    59  0086                     	;# 
    60  0087                     	;# 
    61  0089                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  008E                     	;# 
    65  008F                     	;# 
    66  0090                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0093                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  0105                     	;# 
    85  0107                     	;# 
    86  0108                     	;# 
    87  0109                     	;# 
    88  010C                     	;# 
    89  010C                     	;# 
    90  010D                     	;# 
    91  010E                     	;# 
    92  010F                     	;# 
    93  0185                     	;# 
    94  0187                     	;# 
    95  0188                     	;# 
    96  0189                     	;# 
    97  018C                     	;# 
    98  018D                     	;# 
    99  000B                     _INTCON	set	11
   100  000C                     _PIR1bits	set	12
   101  001A                     _RCREG	set	26
   102  0019                     _TXREG	set	25
   103  00C4                     _CREN	set	196
   104  0030                     _RB0	set	48
   105  003B                     _RC3	set	59
   106  0065                     _RCIF	set	101
   107  00C7                     _SPEN	set	199
   108  0064                     _TXIF	set	100
   109  008F                     _OSCCONbits	set	143
   110  0099                     _SPBRG	set	153
   111  0091                     _SSPCON2	set	145
   112  0094                     _SSPSTATbits	set	148
   113  0086                     _TRISB	set	134
   114  04C2                     _BRGH	set	1218
   115  04C4                     _SYNC	set	1220
   116  04C1                     _TRMT	set	1217
   117  04C5                     _TXEN	set	1221
   118                           
   119                           	psect	strings
   120  0003                     __pstrings:	
   121  0003                     stringtab:	
   122  0003                     __stringtab:	
   123                           
   124                           ;	String table - string pointers are 1 byte each
   125  0003  1BFF               	btfsc	btemp+1,7
   126  0004  280D               	ljmp	stringcode
   127  0005  1383               	bcf	3,7
   128  0006  187F               	btfsc	btemp+1,0
   129  0007  1783               	bsf	3,7
   130  0008  0800               	movf	0,w
   131  0009  0A84               	incf	4,f
   132  000A  1903               	skipnz
   133  000B  0AFF               	incf	btemp+1,f
   134  000C  0008               	return
   135  000D                     stringcode:	
   136  000D                     stringdir:	
   137  000D  3000               	movlw	high stringdir
   138  000E  008A               	movwf	10
   139  000F  0804               	movf	4,w
   140  0010  0A84               	incf	4,f
   141  0011  0782               	addwf	2,f
   142  0012                     __stringbase:	
   143  0012  3400               	retlw	0
   144  0013                     __end_of__stringtab:	
   145  0013                     STR_11:	
   146  0013  3454               	retlw	84	;'T'
   147  0014  3478               	retlw	120	;'x'
   148  0015  3420               	retlw	32	;' '
   149  0016  3463               	retlw	99	;'c'
   150  0017  346F               	retlw	111	;'o'
   151  0018  346D               	retlw	109	;'m'
   152  0019  3470               	retlw	112	;'p'
   153  001A  346C               	retlw	108	;'l'
   154  001B  3465               	retlw	101	;'e'
   155  001C  3474               	retlw	116	;'t'
   156  001D  3465               	retlw	101	;'e'
   157  001E  3464               	retlw	100	;'d'
   158  001F  3420               	retlw	32	;' '
   159  0020  3461               	retlw	97	;'a'
   160  0021  346C               	retlw	108	;'l'
   161  0022  346C               	retlw	108	;'l'
   162  0023  3420               	retlw	32	;' '
   163  0024  3462               	retlw	98	;'b'
   164  0025  3479               	retlw	121	;'y'
   165  0026  3474               	retlw	116	;'t'
   166  0027  3465               	retlw	101	;'e'
   167  0028  3473               	retlw	115	;'s'
   168  0029  340D               	retlw	13
   169  002A  340A               	retlw	10
   170  002B  3400               	retlw	0
   171  002C                     STR_2:	
   172  002C  340D               	retlw	13
   173  002D  340A               	retlw	10
   174  002E  3474               	retlw	116	;'t'
   175  002F  3461               	retlw	97	;'a'
   176  0030  346B               	retlw	107	;'k'
   177  0031  3469               	retlw	105	;'i'
   178  0032  346E               	retlw	110	;'n'
   179  0033  3467               	retlw	103	;'g'
   180  0034  3420               	retlw	32	;' '
   181  0035  3469               	retlw	105	;'i'
   182  0036  346E               	retlw	110	;'n'
   183  0037  3420               	retlw	32	;' '
   184  0038  3474               	retlw	116	;'t'
   185  0039  3468               	retlw	104	;'h'
   186  003A  3465               	retlw	101	;'e'
   187  003B  3420               	retlw	32	;' '
   188  003C  3474               	retlw	116	;'t'
   189  003D  3465               	retlw	101	;'e'
   190  003E  3478               	retlw	120	;'x'
   191  003F  3474               	retlw	116	;'t'
   192  0040  3420               	retlw	32	;' '
   193  0041  340D               	retlw	13
   194  0042  340A               	retlw	10
   195  0043  3400               	retlw	0
   196  0044                     STR_10:	
   197  0044  3454               	retlw	84	;'T'
   198  0045  3478               	retlw	120	;'x'
   199  0046  3420               	retlw	32	;' '
   200  0047  346F               	retlw	111	;'o'
   201  0048  3466               	retlw	102	;'f'
   202  0049  3420               	retlw	32	;' '
   203  004A  3431               	retlw	49	;'1'
   204  004B  3420               	retlw	32	;' '
   205  004C  3462               	retlw	98	;'b'
   206  004D  3479               	retlw	121	;'y'
   207  004E  3474               	retlw	116	;'t'
   208  004F  3465               	retlw	101	;'e'
   209  0050  3420               	retlw	32	;' '
   210  0051  3463               	retlw	99	;'c'
   211  0052  346F               	retlw	111	;'o'
   212  0053  346D               	retlw	109	;'m'
   213  0054  3470               	retlw	112	;'p'
   214  0055  346C               	retlw	108	;'l'
   215  0056  3465               	retlw	101	;'e'
   216  0057  3474               	retlw	116	;'t'
   217  0058  3465               	retlw	101	;'e'
   218  0059  340D               	retlw	13
   219  005A  340A               	retlw	10
   220  005B  3400               	retlw	0
   221  005C                     STR_4:	
   222  005C  3459               	retlw	89	;'Y'
   223  005D  346F               	retlw	111	;'o'
   224  005E  3475               	retlw	117	;'u'
   225  005F  3420               	retlw	32	;' '
   226  0060  3468               	retlw	104	;'h'
   227  0061  3461               	retlw	97	;'a'
   228  0062  3476               	retlw	118	;'v'
   229  0063  3465               	retlw	101	;'e'
   230  0064  3420               	retlw	32	;' '
   231  0065  3465               	retlw	101	;'e'
   232  0066  346E               	retlw	110	;'n'
   233  0067  3474               	retlw	116	;'t'
   234  0068  3465               	retlw	101	;'e'
   235  0069  3472               	retlw	114	;'r'
   236  006A  3465               	retlw	101	;'e'
   237  006B  3464               	retlw	100	;'d'
   238  006C  343A               	retlw	58	;':'
   239  006D  340D               	retlw	13
   240  006E  340A               	retlw	10
   241  006F  3400               	retlw	0
   242  0070                     STR_1:	
   243  0070  3455               	retlw	85	;'U'
   244  0071  3441               	retlw	65	;'A'
   245  0072  3452               	retlw	82	;'R'
   246  0073  3454               	retlw	84	;'T'
   247  0074  3420               	retlw	32	;' '
   248  0075  3449               	retlw	73	;'I'
   249  0076  346E               	retlw	110	;'n'
   250  0077  3469               	retlw	105	;'i'
   251  0078  3474               	retlw	116	;'t'
   252  0079  3469               	retlw	105	;'i'
   253  007A  3461               	retlw	97	;'a'
   254  007B  346C               	retlw	108	;'l'
   255  007C  3469               	retlw	105	;'i'
   256  007D  3473               	retlw	115	;'s'
   257  007E  3465               	retlw	101	;'e'
   258  007F  3464               	retlw	100	;'d'
   259  0080  340D               	retlw	13
   260  0081  340A               	retlw	10
   261  0082  3400               	retlw	0
   262  0083                     STR_6:	
   263  0083  3453               	retlw	83	;'S'
   264  0084  3465               	retlw	101	;'e'
   265  0085  346E               	retlw	110	;'n'
   266  0086  3464               	retlw	100	;'d'
   267  0087  3469               	retlw	105	;'i'
   268  0088  346E               	retlw	110	;'n'
   269  0089  3467               	retlw	103	;'g'
   270  008A  3420               	retlw	32	;' '
   271  008B  3454               	retlw	84	;'T'
   272  008C  344F               	retlw	79	;'O'
   273  008D  3420               	retlw	32	;' '
   274  008E  344C               	retlw	76	;'L'
   275  008F  3465               	retlw	101	;'e'
   276  0090  3464               	retlw	100	;'d'
   277  0091  340D               	retlw	13
   278  0092  340A               	retlw	10
   279  0093  3400               	retlw	0
   280  0094                     STR_3:	
   281  0094  340D               	retlw	13
   282  0095  340A               	retlw	10
   283  0096  3441               	retlw	65	;'A'
   284  0097  3463               	retlw	99	;'c'
   285  0098  346B               	retlw	107	;'k'
   286  0099  346E               	retlw	110	;'n'
   287  009A  346F               	retlw	111	;'o'
   288  009B  3477               	retlw	119	;'w'
   289  009C  346C               	retlw	108	;'l'
   290  009D  3465               	retlw	101	;'e'
   291  009E  3464               	retlw	100	;'d'
   292  009F  3467               	retlw	103	;'g'
   293  00A0  3465               	retlw	101	;'e'
   294  00A1  3464               	retlw	100	;'d'
   295  00A2  340D               	retlw	13
   296  00A3  340A               	retlw	10
   297  00A4  3400               	retlw	0
   298  00A5                     STR_12:	
   299  00A5  344B               	retlw	75	;'K'
   300  00A6  3465               	retlw	101	;'e'
   301  00A7  3479               	retlw	121	;'y'
   302  00A8  3465               	retlw	101	;'e'
   303  00A9  3464               	retlw	100	;'d'
   304  00AA  3420               	retlw	32	;' '
   305  00AB  3469               	retlw	105	;'i'
   306  00AC  346E               	retlw	110	;'n'
   307  00AD  3420               	retlw	32	;' '
   308  00AE  340D               	retlw	13
   309  00AF  340A               	retlw	10
   310  00B0  3400               	retlw	0
   311  00B1                     STR_8:	
   312  00B1  3452               	retlw	82	;'R'
   313  00B2  3478               	retlw	120	;'x'
   314  00B3  3430               	retlw	48	;'0'
   315  00B4  3420               	retlw	32	;' '
   316  00B5  340D               	retlw	13
   317  00B6  340A               	retlw	10
   318  00B7  3400               	retlw	0
   319  00B8                     STR_7:	
   320  00B8  3452               	retlw	82	;'R'
   321  00B9  3478               	retlw	120	;'x'
   322  00BA  3431               	retlw	49	;'1'
   323  00BB  3420               	retlw	32	;' '
   324  00BC  340D               	retlw	13
   325  00BD  340A               	retlw	10
   326  00BE  3400               	retlw	0
   327  00B5                     
   328                           ; #config settings
   329  0000                     
   330                           	psect	cinit
   331  07F4                     start_initialization:	
   332  07F4                     __initialization:	
   333                           
   334                           ; Clear objects allocated to BITBANK0
   335  07F4  01D2               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   336                           
   337                           ; Clear objects allocated to BANK0
   338  07F5  1383               	bcf	3,7	;select IRP bank0
   339  07F6  303D               	movlw	low __pbssBANK0
   340  07F7  0084               	movwf	4
   341  07F8  3052               	movlw	low (__pbssBANK0+21)
   342  07F9  120A  118A  2497   	fcall	clear_ram0
   343  07FC                     end_of_initialization:	
   344                           ;End of C runtime variable initialization code
   345                           
   346  07FC                     __end_of__initialization:	
   347  07FC  0183               	clrf	3
   348  07FD  120A  118A  2EBE   	ljmp	_main	;jump to C main() function
   349                           
   350                           	psect	bitbssBANK0
   351  0290                     __pbitbssBANK0:	
   352  0290                     _IC2_ack:	
   353  0290                     	ds	1
   354                           
   355                           	psect	bssBANK0
   356  003D                     __pbssBANK0:	
   357  003D                     _is:	
   358  003D                     	ds	1
   359  003E                     UART_Read_Text@string:	
   360  003E                     	ds	20
   361                           
   362                           	psect	clrtext
   363  0497                     clear_ram0:	
   364                           ;	Called with FSR containing the base address, and
   365                           ;	W with the last address+1
   366                           
   367  0497  0064               	clrwdt	;clear the watchdog before getting into this loop
   368  0498                     clrloop0:	
   369  0498  0180               	clrf	0	;clear RAM location pointed to by FSR
   370  0499  0A84               	incf	4,f	;increment pointer
   371  049A  0604               	xorwf	4,w	;XOR with final address
   372  049B  1903               	btfsc	3,2	;have we reached the end yet?
   373  049C  3400               	retlw	0	;all done for this memory range, return
   374  049D  0604               	xorwf	4,w	;XOR again to restore value
   375  049E  2C98               	goto	clrloop0	;do the next byte
   376                           
   377                           	psect	cstackBANK3
   378  0190                     __pcstackBANK3:	
   379  0190                     main@recieved:	
   380                           
   381                           ; 96 bytes @ 0x0
   382  0190                     	ds	96
   383                           
   384                           	psect	cstackCOMMON
   385  0070                     __pcstackCOMMON:	
   386  0070                     ?_delay_us:	
   387  0070                     ?_UART_Write:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0070                     ??_UART_Write:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0070                     ?_delay1ms:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0070                     ??_delay1ms:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0070                     ?_main:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0070                     ??_UART_Read:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0070                     ?_UART_Read_Text:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0070                     ?_UART_Read:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?___aldiv:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     UART_Write@data:	
   415                           ; 4 bytes @ 0x0
   416                           
   417  0070                     delay_us@i:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     delay1ms@j:	
   421                           ; 2 bytes @ 0x0
   422                           
   423  0070                     ___aldiv@divisor:	
   424                           ; 2 bytes @ 0x0
   425                           
   426                           
   427                           ; 4 bytes @ 0x0
   428  0070                     	ds	1
   429  0071                     ?_UART_Write_Text:	
   430  0071                     UART_Write_Text@text:	
   431                           ; 0 bytes @ 0x1
   432                           
   433                           
   434                           ; 2 bytes @ 0x1
   435  0071                     	ds	1
   436  0072                     ?_delay_ms:	
   437  0072                     ??_delay_us:	
   438                           ; 0 bytes @ 0x2
   439                           
   440  0072                     delay_ms@i:	
   441                           ; 0 bytes @ 0x2
   442                           
   443                           
   444                           ; 2 bytes @ 0x2
   445  0072                     	ds	1
   446  0073                     ??_UART_Write_Text:	
   447                           
   448                           ; 0 bytes @ 0x3
   449  0073                     	ds	1
   450  0074                     ??_delay_ms:	
   451  0074                     ___aldiv@dividend:	
   452                           ; 0 bytes @ 0x4
   453                           
   454                           
   455                           ; 4 bytes @ 0x4
   456  0074                     	ds	2
   457  0076                     UART_Write_Text@i:	
   458                           
   459                           ; 2 bytes @ 0x6
   460  0076                     	ds	2
   461  0078                     ??_UART_Read_Text:	
   462  0078                     ??___aldiv:	
   463                           ; 0 bytes @ 0x8
   464                           
   465                           
   466                           ; 0 bytes @ 0x8
   467  0078                     	ds	1
   468  0079                     UART_Read_Text@a:	
   469  0079                     UART_Init@x:	
   470                           ; 1 bytes @ 0x9
   471                           
   472                           
   473                           ; 2 bytes @ 0x9
   474  0079                     	ds	1
   475  007A                     UART_Read_Text@x:	
   476                           
   477                           ; 1 bytes @ 0xA
   478  007A                     	ds	1
   479  007B                     UART_Read_Text@i:	
   480                           
   481                           ; 1 bytes @ 0xB
   482  007B                     	ds	1
   483  007C                     ??_main:	
   484                           
   485                           ; 0 bytes @ 0xC
   486  007C                     	ds	2
   487                           
   488                           	psect	cstackBANK0
   489  0020                     __pcstackBANK0:	
   490  0020                     ___aldiv@counter:	
   491                           
   492                           ; 1 bytes @ 0x0
   493  0020                     	ds	1
   494  0021                     ___aldiv@sign:	
   495                           
   496                           ; 1 bytes @ 0x1
   497  0021                     	ds	1
   498  0022                     ___aldiv@quotient:	
   499                           
   500                           ; 4 bytes @ 0x2
   501  0022                     	ds	4
   502  0026                     ?_UART_Init:	
   503  0026                     UART_Init@baudrate:	
   504                           ; 1 bytes @ 0x6
   505                           
   506                           
   507                           ; 4 bytes @ 0x6
   508  0026                     	ds	4
   509  002A                     ??_UART_Init:	
   510                           
   511                           ; 0 bytes @ 0xA
   512  002A                     	ds	12
   513  0036                     main@LED_Output:	
   514                           
   515                           ; 1 bytes @ 0x16
   516  0036                     	ds	1
   517  0037                     main@LED_Input:	
   518                           
   519                           ; 1 bytes @ 0x17
   520  0037                     	ds	1
   521  0038                     main@no_of_bytes:	
   522                           
   523                           ; 2 bytes @ 0x18
   524  0038                     	ds	2
   525  003A                     main@j:	
   526                           
   527                           ; 2 bytes @ 0x1A
   528  003A                     	ds	2
   529  003C                     main@rx_ch:	
   530                           
   531                           ; 1 bytes @ 0x1C
   532  003C                     	ds	1
   533                           
   534                           	psect	maintext
   535  06BE                     __pmaintext:	
   536 ;;
   537 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   538 ;;
   539 ;; *************** function _main *****************
   540 ;; Defined at:
   541 ;;		line 76 in file "LIFITXRX.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  recieved       96    0[BANK3 ] unsigned char [96]
   546 ;;  j               2   26[BANK0 ] unsigned int 
   547 ;;  no_of_bytes     2   24[BANK0 ] unsigned int 
   548 ;;  rx_ch           1   28[BANK0 ] unsigned char 
   549 ;;  LED_Input       1   23[BANK0 ] unsigned char 
   550 ;;  LED_Output      1   22[BANK0 ] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;		None               void
   553 ;; Registers used:
   554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : B00/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   560 ;;      Params:         0       0       0       0       0
   561 ;;      Locals:         0       7       0      96       0
   562 ;;      Temps:          2       0       0       0       0
   563 ;;      Totals:         2       7       0      96       0
   564 ;;Total ram usage:      105 bytes
   565 ;; Hardware stack levels required when called:    3
   566 ;; This function calls:
   567 ;;		_UART_Init
   568 ;;		_UART_Read_Text
   569 ;;		_UART_Write
   570 ;;		_UART_Write_Text
   571 ;;		_delay_ms
   572 ;;		_delay_us
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _main
   580  06BE                     _main:	
   581                           
   582                           ;LIFITXRX.c: 80: unsigned char recieved[96];
   583                           ;LIFITXRX.c: 82: unsigned int j,no_of_bytes=0;
   584                           
   585                           ;incstack = 0
   586                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   587  06BE  1283               	bcf	3,5	;RP0=0, select bank0
   588  06BF  1303               	bcf	3,6	;RP1=0, select bank0
   589  06C0  01B8               	clrf	main@no_of_bytes
   590  06C1  01B9               	clrf	main@no_of_bytes+1
   591                           
   592                           ;LIFITXRX.c: 84: unsigned char LED_Output,LED_Input,rx_ch;
   593                           ;LIFITXRX.c: 86: TRISB=0x00;
   594  06C2  1683               	bsf	3,5	;RP0=1, select bank1
   595  06C3  1303               	bcf	3,6	;RP1=0, select bank1
   596  06C4  0186               	clrf	6	;volatile
   597                           
   598                           ;LIFITXRX.c: 89: OSCCONbits.IRCF = 0x07;
   599  06C5  3070               	movlw	112
   600  06C6  048F               	iorwf	15,f	;volatile
   601  06C7                     l59:	
   602                           ;LIFITXRX.c: 91: while(!OSCCONbits.HTS);
   603                           
   604  06C7  1D0F               	btfss	15,2	;volatile
   605  06C8  2EC7               	goto	l59
   606                           
   607                           ;LIFITXRX.c: 93: INTCON=0;
   608  06C9  018B               	clrf	11	;volatile
   609                           
   610                           ;LIFITXRX.c: 95: UART_Init(9600);
   611  06CA  3000               	movlw	0
   612  06CB  1283               	bcf	3,5	;RP0=0, select bank0
   613  06CC  1303               	bcf	3,6	;RP1=0, select bank0
   614  06CD  00A9               	movwf	UART_Init@baudrate+3
   615  06CE  3000               	movlw	0
   616  06CF  00A8               	movwf	UART_Init@baudrate+2
   617  06D0  3025               	movlw	37
   618  06D1  00A7               	movwf	UART_Init@baudrate+1
   619  06D2  3080               	movlw	128
   620  06D3  00A6               	movwf	UART_Init@baudrate
   621  06D4  120A  118A  25D1  120A  118A  	fcall	_UART_Init
   622                           
   623                           ;LIFITXRX.c: 97: UART_Write_Text("UART Initialised\r\n");
   624  06D9  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   625  06DA  00F1               	movwf	UART_Write_Text@text
   626  06DB  3080               	movlw	128
   627  06DC  00F2               	movwf	UART_Write_Text@text+1
   628  06DD  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   629                           
   630                           ;LIFITXRX.c: 99: delay_ms(500);
   631  06E2  30F4               	movlw	244
   632  06E3  00F2               	movwf	delay_ms@i
   633  06E4  3001               	movlw	1
   634  06E5  00F3               	movwf	delay_ms@i+1
   635  06E6  120A  118A  24C7  120A  118A  	fcall	_delay_ms
   636  06EB                     l1001:	
   637                           ;LIFITXRX.c: 101: while(1)
   638                           
   639                           
   640                           ;LIFITXRX.c: 102: {
   641                           ;LIFITXRX.c: 104: RB0=0;
   642  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   643  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   644  06ED  1006               	bcf	6,0	;volatile
   645                           
   646                           ;LIFITXRX.c: 105: UART_Write_Text("\r\ntaking in the text \r\n");
   647  06EE  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   648  06EF  00F1               	movwf	UART_Write_Text@text
   649  06F0  3080               	movlw	128
   650  06F1  00F2               	movwf	UART_Write_Text@text+1
   651  06F2  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   652                           
   653                           ;LIFITXRX.c: 107: is=UART_Read_Text();
   654  06F7  120A  118A  24D7  120A  118A  	fcall	_UART_Read_Text
   655  06FC  00FC               	movwf	??_main
   656  06FD  087C               	movf	??_main,w
   657  06FE  1283               	bcf	3,5	;RP0=0, select bank0
   658  06FF  1303               	bcf	3,6	;RP1=0, select bank0
   659  0700  00BD               	movwf	_is
   660                           
   661                           ;LIFITXRX.c: 109: UART_Write_Text("\r\nAcknowledged\r\n");
   662  0701  3082               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   663  0702  00F1               	movwf	UART_Write_Text@text
   664  0703  3080               	movlw	128
   665  0704  00F2               	movwf	UART_Write_Text@text+1
   666  0705  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   667                           
   668                           ;LIFITXRX.c: 111: UART_Write_Text("You have entered:\r\n");
   669  070A  304A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   670  070B  00F1               	movwf	UART_Write_Text@text
   671  070C  3080               	movlw	128
   672  070D  00F2               	movwf	UART_Write_Text@text+1
   673  070E  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   674                           
   675                           ;LIFITXRX.c: 113: UART_Write_Text(is);
   676  0713  1283               	bcf	3,5	;RP0=0, select bank0
   677  0714  1303               	bcf	3,6	;RP1=0, select bank0
   678  0715  083D               	movf	_is,w
   679  0716  00F1               	movwf	UART_Write_Text@text
   680  0717  3000               	movlw	0
   681  0718  00F2               	movwf	UART_Write_Text@text+1
   682  0719  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   683                           
   684                           ;LIFITXRX.c: 114: UART_Write_Text("\r\n");
   685  071E  30A3               	movlw	(low (((STR_8+4)-__stringbase)| (0+32768)))& (0+255)
   686  071F  00F1               	movwf	UART_Write_Text@text
   687  0720  3080               	movlw	128
   688  0721  00F2               	movwf	UART_Write_Text@text+1
   689  0722  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   690                           
   691                           ;LIFITXRX.c: 116: UART_Write_Text("Sending TO Led\r\n");
   692  0727  3071               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   693  0728  00F1               	movwf	UART_Write_Text@text
   694  0729  3080               	movlw	128
   695  072A  00F2               	movwf	UART_Write_Text@text+1
   696  072B  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   697  0730                     l1059:	
   698                           ;LIFITXRX.c: 118: while(*is)
   699                           
   700  0730  1283               	bcf	3,5	;RP0=0, select bank0
   701  0731  1303               	bcf	3,6	;RP1=0, select bank0
   702  0732  083D               	movf	_is,w
   703  0733  0084               	movwf	4
   704  0734  1383               	bcf	3,7	;select IRP bank0
   705  0735  0800               	movf	0,w
   706  0736  1903               	btfsc	3,2
   707  0737  2FD8               	goto	l1061
   708                           
   709                           ;LIFITXRX.c: 119: {
   710                           ;LIFITXRX.c: 120: rx_ch=0x00;
   711  0738  1283               	bcf	3,5	;RP0=0, select bank0
   712  0739  1303               	bcf	3,6	;RP1=0, select bank0
   713  073A  01BC               	clrf	main@rx_ch
   714                           
   715                           ;LIFITXRX.c: 121: for(j=0;j<=7;j++)
   716  073B  01BA               	clrf	main@j
   717  073C  01BB               	clrf	main@j+1
   718  073D  3000               	movlw	0
   719  073E  023B               	subwf	main@j+1,w
   720  073F  3008               	movlw	8
   721  0740  1903               	skipnz
   722  0741  023A               	subwf	main@j,w
   723  0742  1803               	btfsc	3,0
   724  0743  2FA9               	goto	l1047
   725  0744                     l1023:	
   726                           
   727                           ;LIFITXRX.c: 122: {
   728                           ;LIFITXRX.c: 123: LED_Output= (*is&0x01)==1?1:0;
   729  0744  083D               	movf	_is,w
   730  0745  0084               	movwf	4
   731  0746  1383               	bcf	3,7	;select IRP bank0
   732  0747  1C00               	btfss	0,0
   733  0748  2F4B               	goto	u790
   734  0749  3001               	movlw	1
   735  074A  2F4C               	goto	u800
   736  074B                     u790:	
   737  074B  3000               	movlw	0
   738  074C                     u800:	
   739  074C  00FC               	movwf	??_main
   740  074D  087C               	movf	??_main,w
   741  074E  00B6               	movwf	main@LED_Output
   742                           
   743                           ;LIFITXRX.c: 124: RB0=LED_Output;
   744  074F  1C36               	btfss	main@LED_Output,0
   745  0750  2F55               	goto	u810
   746  0751  1283               	bcf	3,5	;RP0=0, select bank0
   747  0752  1303               	bcf	3,6	;RP1=0, select bank0
   748  0753  1406               	bsf	6,0	;volatile
   749  0754  2F58               	goto	l1027
   750  0755                     u810:	
   751  0755  1283               	bcf	3,5	;RP0=0, select bank0
   752  0756  1303               	bcf	3,6	;RP1=0, select bank0
   753  0757  1006               	bcf	6,0	;volatile
   754  0758                     l1027:	
   755                           
   756                           ;LIFITXRX.c: 125: delay_us(5);
   757  0758  3005               	movlw	5
   758  0759  00F0               	movwf	delay_us@i
   759  075A  3000               	movlw	0
   760  075B  00F1               	movwf	delay_us@i+1
   761  075C  120A  118A  249F  120A  118A  	fcall	_delay_us
   762                           
   763                           ;LIFITXRX.c: 126: LED_Input=RC3;
   764  0761  3000               	movlw	0
   765  0762  1283               	bcf	3,5	;RP0=0, select bank0
   766  0763  1303               	bcf	3,6	;RP1=0, select bank0
   767  0764  1987               	btfsc	7,3	;volatile
   768  0765  3001               	movlw	1
   769  0766  00B7               	movwf	main@LED_Input
   770                           
   771                           ;LIFITXRX.c: 127: delay_us(5);
   772  0767  3005               	movlw	5
   773  0768  00F0               	movwf	delay_us@i
   774  0769  3000               	movlw	0
   775  076A  00F1               	movwf	delay_us@i+1
   776  076B  120A  118A  249F  120A  118A  	fcall	_delay_us
   777                           
   778                           ;LIFITXRX.c: 128: rx_ch=rx_ch|LED_Input<<j;
   779  0770  1283               	bcf	3,5	;RP0=0, select bank0
   780  0771  1303               	bcf	3,6	;RP1=0, select bank0
   781  0772  0837               	movf	main@LED_Input,w
   782  0773  00FC               	movwf	??_main
   783  0774  0A3A               	incf	main@j,w
   784  0775  2F78               	goto	u834
   785  0776                     u835:	
   786  0776  1003               	clrc
   787  0777  0DFC               	rlf	??_main,f
   788  0778                     u834:	
   789  0778  3EFF               	addlw	-1
   790  0779  1D03               	skipz
   791  077A  2F76               	goto	u835
   792  077B  087C               	movf	??_main,w
   793  077C  043C               	iorwf	main@rx_ch,w
   794  077D  00FD               	movwf	??_main+1
   795  077E  087D               	movf	??_main+1,w
   796  077F  00BC               	movwf	main@rx_ch
   797                           
   798                           ;LIFITXRX.c: 129: if(LED_Input==1)
   799  0780  0337               	decf	main@LED_Input,w
   800  0781  1D03               	btfss	3,2
   801  0782  2F85               	goto	l1039
   802                           
   803                           ;LIFITXRX.c: 130: UART_Write_Text("Rx1 \r\n");
   804  0783  30A6               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   805  0784  2F86               	goto	L1
   806  0785                     l1039:	
   807                           
   808                           ;LIFITXRX.c: 131: else
   809                           ;LIFITXRX.c: 132: UART_Write_Text("Rx0 \r\n");
   810  0785  309F               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   811  0786                     L1:	
   812  0786  00F1               	movwf	UART_Write_Text@text
   813  0787  3080               	movlw	128
   814  0788  00F2               	movwf	UART_Write_Text@text+1
   815  0789  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   816                           
   817                           ;LIFITXRX.c: 134: *is=*is>>1;
   818  078E  1283               	bcf	3,5	;RP0=0, select bank0
   819  078F  1303               	bcf	3,6	;RP1=0, select bank0
   820  0790  083D               	movf	_is,w
   821  0791  0084               	movwf	4
   822  0792  1383               	bcf	3,7	;select IRP bank0
   823  0793  0800               	movf	0,w
   824  0794  00FC               	movwf	??_main
   825  0795  1003               	clrc
   826  0796  0C7C               	rrf	??_main,w
   827  0797  00FD               	movwf	??_main+1
   828  0798  083D               	movf	_is,w
   829  0799  0084               	movwf	4
   830  079A  087D               	movf	??_main+1,w
   831  079B  0080               	movwf	0
   832  079C  3001               	movlw	1
   833  079D  07BA               	addwf	main@j,f
   834  079E  1803               	skipnc
   835  079F  0ABB               	incf	main@j+1,f
   836  07A0  3000               	movlw	0
   837  07A1  07BB               	addwf	main@j+1,f
   838  07A2  3000               	movlw	0
   839  07A3  023B               	subwf	main@j+1,w
   840  07A4  3008               	movlw	8
   841  07A5  1903               	skipnz
   842  07A6  023A               	subwf	main@j,w
   843  07A7  1C03               	skipc
   844  07A8  2F44               	goto	l1023
   845  07A9                     l1047:	
   846                           
   847                           ;LIFITXRX.c: 135: }
   848                           ;LIFITXRX.c: 136: UART_Write(rx_ch);
   849  07A9  083C               	movf	main@rx_ch,w
   850  07AA  120A  118A  24AA  120A  118A  	fcall	_UART_Write
   851                           
   852                           ;LIFITXRX.c: 137: UART_Write_Text("\r\n");
   853  07AF  30A3               	movlw	(low (((STR_8+4)-__stringbase)| (0+32768)))& (0+255)
   854  07B0  00F1               	movwf	UART_Write_Text@text
   855  07B1  3080               	movlw	128
   856  07B2  00F2               	movwf	UART_Write_Text@text+1
   857  07B3  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   858                           
   859                           ;LIFITXRX.c: 138: is++;
   860  07B8  3001               	movlw	1
   861  07B9  00FC               	movwf	??_main
   862  07BA  087C               	movf	??_main,w
   863  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   864  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   865  07BD  07BD               	addwf	_is,f
   866                           
   867                           ;LIFITXRX.c: 139: UART_Write_Text("Tx of 1 byte complete\r\n");
   868  07BE  3032               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   869  07BF  00F1               	movwf	UART_Write_Text@text
   870  07C0  3080               	movlw	128
   871  07C1  00F2               	movwf	UART_Write_Text@text+1
   872  07C2  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   873                           
   874                           ;LIFITXRX.c: 140: recieved[no_of_bytes++]=rx_ch;
   875  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   876  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   877  07C9  083C               	movf	main@rx_ch,w
   878  07CA  00FC               	movwf	??_main
   879  07CB  0838               	movf	main@no_of_bytes,w
   880  07CC  3E90               	addlw	(low (main@recieved| (0+256)))& (0+255)
   881  07CD  0084               	movwf	4
   882  07CE  087C               	movf	??_main,w
   883  07CF  1783               	bsf	3,7	;select IRP bank3
   884  07D0  0080               	movwf	0
   885  07D1  3001               	movlw	1
   886  07D2  07B8               	addwf	main@no_of_bytes,f
   887  07D3  1803               	skipnc
   888  07D4  0AB9               	incf	main@no_of_bytes+1,f
   889  07D5  3000               	movlw	0
   890  07D6  07B9               	addwf	main@no_of_bytes+1,f
   891  07D7  2F30               	goto	l1059
   892  07D8                     l1061:	
   893                           
   894                           ;LIFITXRX.c: 141: }
   895                           ;LIFITXRX.c: 142: recieved[no_of_bytes]='\0';
   896  07D8  0838               	movf	main@no_of_bytes,w
   897  07D9  3E90               	addlw	(low (main@recieved| (0+256)))& (0+255)
   898  07DA  0084               	movwf	4
   899  07DB  1783               	bsf	3,7	;select IRP bank3
   900  07DC  0180               	clrf	0
   901                           
   902                           ;LIFITXRX.c: 143: UART_Write_Text("Tx completed all bytes\r\n");
   903  07DD  3001               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   904  07DE  00F1               	movwf	UART_Write_Text@text
   905  07DF  3080               	movlw	128
   906  07E0  00F2               	movwf	UART_Write_Text@text+1
   907  07E1  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   908                           
   909                           ;LIFITXRX.c: 144: UART_Write_Text(recieved);
   910  07E6  3090               	movlw	(low (main@recieved| (0+256)))& (0+255)
   911  07E7  00F1               	movwf	UART_Write_Text@text
   912  07E8  3001               	movlw	1
   913  07E9  00F2               	movwf	UART_Write_Text@text+1
   914  07EA  120A  118A  2505  120A  118A  	fcall	_UART_Write_Text
   915                           
   916                           ;LIFITXRX.c: 146: no_of_bytes=0;
   917  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   918  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   919  07F1  01B8               	clrf	main@no_of_bytes
   920  07F2  01B9               	clrf	main@no_of_bytes+1
   921  07F3  2EEB               	goto	l1001
   922  07F4                     __end_of_main:	
   923                           
   924                           	psect	text1
   925  049F                     __ptext1:	
   926 ;; *************** function _delay_us *****************
   927 ;; Defined at:
   928 ;;		line 159 in file "LIFITXRX.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  i               2    0[COMMON] unsigned int 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;		None               void
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   942 ;;      Params:         2       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0
   945 ;;      Totals:         2       0       0       0       0
   946 ;;Total ram usage:        2 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _delay_us
   957  049F                     _delay_us:	
   958                           
   959                           ;LIFITXRX.c: 161: for (;i!=0x00;i--);
   960                           
   961                           ;incstack = 0
   962                           ; Regs used in _delay_us: [wreg+status,2+status,0]
   963  049F  0870               	movf	delay_us@i,w
   964  04A0  0471               	iorwf	delay_us@i+1,w
   965  04A1  1903               	btfsc	3,2
   966  04A2  0008               	return
   967  04A3  3001               	movlw	1
   968  04A4  02F0               	subwf	delay_us@i,f
   969  04A5  3000               	movlw	0
   970  04A6  1C03               	skipc
   971  04A7  03F1               	decf	delay_us@i+1,f
   972  04A8  02F1               	subwf	delay_us@i+1,f
   973  04A9  2C9F               	goto	_delay_us
   974  04AA                     __end_of_delay_us:	
   975                           
   976                           	psect	text2
   977  04C7                     __ptext2:	
   978 ;; *************** function _delay_ms *****************
   979 ;; Defined at:
   980 ;;		line 164 in file "LIFITXRX.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  i               2    2[COMMON] unsigned int 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;		None               void
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         2       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0
   997 ;;      Totals:         2       0       0       0       0
   998 ;;Total ram usage:        2 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    1
  1001 ;; This function calls:
  1002 ;;		_delay1ms
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function _delay_ms
  1010  04C7                     _delay_ms:	
  1011                           
  1012                           ;LIFITXRX.c: 166: for(;i!=0x00;i--)
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  1016  04C7  0872               	movf	delay_ms@i,w
  1017  04C8  0473               	iorwf	delay_ms@i+1,w
  1018  04C9  1903               	btfsc	3,2
  1019  04CA  0008               	return
  1020                           
  1021                           ;LIFITXRX.c: 167: delay1ms();
  1022  04CB  120A  118A  24B8  120A  118A  	fcall	_delay1ms
  1023  04D0  3001               	movlw	1
  1024  04D1  02F2               	subwf	delay_ms@i,f
  1025  04D2  3000               	movlw	0
  1026  04D3  1C03               	skipc
  1027  04D4  03F3               	decf	delay_ms@i+1,f
  1028  04D5  02F3               	subwf	delay_ms@i+1,f
  1029  04D6  2CC7               	goto	_delay_ms
  1030  04D7                     __end_of_delay_ms:	
  1031                           
  1032                           	psect	text3
  1033  04B8                     __ptext3:	
  1034 ;; *************** function _delay1ms *****************
  1035 ;; Defined at:
  1036 ;;		line 170 in file "LIFITXRX.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  j               2    0[COMMON] unsigned int 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;		None               void
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         2       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0
  1053 ;;      Totals:         2       0       0       0       0
  1054 ;;Total ram usage:        2 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_delay_ms
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _delay1ms
  1065  04B8                     _delay1ms:	
  1066                           
  1067                           ;LIFITXRX.c: 172: unsigned int j = 130;
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _delay1ms: [wreg+status,2+status,0]
  1071  04B8  3082               	movlw	130
  1072  04B9  00F0               	movwf	delay1ms@j
  1073  04BA  3000               	movlw	0
  1074  04BB  00F1               	movwf	delay1ms@j+1
  1075  04BC                     L2:	
  1076                           
  1077                           ;LIFITXRX.c: 173: for (;j!=0x00;j--);
  1078  04BC  0870               	movf	delay1ms@j,w
  1079  04BD  0471               	iorwf	delay1ms@j+1,w
  1080  04BE  1903               	btfsc	3,2
  1081  04BF  0008               	return
  1082  04C0  3001               	movlw	1
  1083  04C1  02F0               	subwf	delay1ms@j,f
  1084  04C2  3000               	movlw	0
  1085  04C3  1C03               	skipc
  1086  04C4  03F1               	decf	delay1ms@j+1,f
  1087  04C5  02F1               	subwf	delay1ms@j+1,f
  1088  04C6  2CBC               	goto	L2
  1089  04C7                     __end_of_delay1ms:	
  1090                           
  1091                           	psect	text4
  1092  04D7                     __ptext4:	
  1093 ;; *************** function _UART_Read_Text *****************
  1094 ;; Defined at:
  1095 ;;		line 238 in file "LIFITXRX.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  i               1   11[COMMON] unsigned char 
  1100 ;;  x               1   10[COMMON] unsigned char 
  1101 ;;  a               1    9[COMMON] PTR const unsigned char 
  1102 ;;		 -> STR_12(12), 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      PTR unsigned char 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         3       0       0       0       0
  1114 ;;      Temps:          1       0       0       0       0
  1115 ;;      Totals:         4       0       0       0       0
  1116 ;;Total ram usage:        4 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    2
  1119 ;; This function calls:
  1120 ;;		_UART_Read
  1121 ;;		_UART_Write_Text
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _UART_Read_Text
  1129  04D7                     _UART_Read_Text:	
  1130                           
  1131                           ;LIFITXRX.c: 240: unsigned const char *a="Keyed in \r\n";
  1132                           
  1133                           ;incstack = 0
  1134                           ; Regs used in _UART_Read_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1135  04D7  3093               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1136  04D8  00F8               	movwf	??_UART_Read_Text
  1137  04D9  0878               	movf	??_UART_Read_Text,w
  1138  04DA  00F9               	movwf	UART_Read_Text@a
  1139                           
  1140                           ;LIFITXRX.c: 242: unsigned static char string[20];
  1141                           ;LIFITXRX.c: 244: unsigned char x, i = 0;
  1142  04DB  01FB               	clrf	UART_Read_Text@i
  1143  04DC                     l971:	
  1144                           ;LIFITXRX.c: 246: while((x = UART_Read()) != 13)
  1145                           
  1146  04DC  120A  118A  2491  120A  118A  	fcall	_UART_Read
  1147  04E1  00F8               	movwf	??_UART_Read_Text
  1148  04E2  0878               	movf	??_UART_Read_Text,w
  1149  04E3  00FA               	movwf	UART_Read_Text@x
  1150  04E4  300D               	movlw	13
  1151  04E5  067A               	xorwf	UART_Read_Text@x,w
  1152  04E6  1903               	btfsc	3,2
  1153  04E7  2CF5               	goto	l973
  1154                           
  1155                           ;LIFITXRX.c: 247: {
  1156                           ;LIFITXRX.c: 250: string[i++] = x;
  1157  04E8  087A               	movf	UART_Read_Text@x,w
  1158  04E9  00F8               	movwf	??_UART_Read_Text
  1159  04EA  087B               	movf	UART_Read_Text@i,w
  1160  04EB  3E3E               	addlw	(low (UART_Read_Text@string| 0))& (0+255)
  1161  04EC  0084               	movwf	4
  1162  04ED  0878               	movf	??_UART_Read_Text,w
  1163  04EE  1383               	bcf	3,7	;select IRP bank0
  1164  04EF  0080               	movwf	0
  1165  04F0  3001               	movlw	1
  1166  04F1  00F8               	movwf	??_UART_Read_Text
  1167  04F2  0878               	movf	??_UART_Read_Text,w
  1168  04F3  07FB               	addwf	UART_Read_Text@i,f
  1169  04F4  2CDC               	goto	l971
  1170  04F5                     l973:	
  1171                           
  1172                           ;LIFITXRX.c: 251: }
  1173                           ;LIFITXRX.c: 254: string[i] = '\0';
  1174  04F5  087B               	movf	UART_Read_Text@i,w
  1175  04F6  3E3E               	addlw	(low (UART_Read_Text@string| 0))& (0+255)
  1176  04F7  0084               	movwf	4
  1177  04F8  1383               	bcf	3,7	;select IRP bank0
  1178  04F9  0180               	clrf	0
  1179                           
  1180                           ;LIFITXRX.c: 255: UART_Write_Text(a);
  1181  04FA  0879               	movf	UART_Read_Text@a,w
  1182  04FB  00F1               	movwf	UART_Write_Text@text
  1183  04FC  3000               	movlw	0
  1184  04FD  1D03               	btfss	3,2
  1185  04FE  3080               	movlw	128
  1186  04FF  00F2               	movwf	UART_Write_Text@text+1
  1187  0500  120A  118A  2505   	fcall	_UART_Write_Text
  1188                           
  1189                           ;LIFITXRX.c: 258: return(string);
  1190  0503  303E               	movlw	(low (UART_Read_Text@string| 0))& (0+255)
  1191  0504  0008               	return
  1192  0505                     __end_of_UART_Read_Text:	
  1193                           
  1194                           	psect	text5
  1195  0505                     __ptext5:	
  1196 ;; *************** function _UART_Write_Text *****************
  1197 ;; Defined at:
  1198 ;;		line 216 in file "LIFITXRX.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  text            2    1[COMMON] PTR const unsigned char 
  1201 ;;		 -> NULL(0), UART_Read_Text@string(20), STR_12(12), STR_11(25), 
  1202 ;;		 -> main@recieved(96), STR_10(24), STR_9(3), STR_8(7), 
  1203 ;;		 -> STR_7(7), STR_6(17), STR_5(3), STR_4(20), 
  1204 ;;		 -> STR_3(17), STR_2(24), STR_1(19), 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  i               2    6[COMMON] int 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;		None               void
  1209 ;; Registers used:
  1210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         2       0       0       0       0
  1217 ;;      Locals:         2       0       0       0       0
  1218 ;;      Temps:          3       0       0       0       0
  1219 ;;      Totals:         7       0       0       0       0
  1220 ;;Total ram usage:        7 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    1
  1223 ;; This function calls:
  1224 ;;		_UART_Write
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;;		_UART_Read_Text
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function _UART_Write_Text
  1233  0505                     _UART_Write_Text:	
  1234                           
  1235                           ;LIFITXRX.c: 218: int i;
  1236                           ;LIFITXRX.c: 219: for(i=0;text[i]!='\0';i++)
  1237                           
  1238                           ;incstack = 0
  1239                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1240  0505  01F6               	clrf	UART_Write_Text@i
  1241  0506  01F7               	clrf	UART_Write_Text@i+1
  1242  0507                     l861:	
  1243  0507  0876               	movf	UART_Write_Text@i,w
  1244  0508  0771               	addwf	UART_Write_Text@text,w
  1245  0509  00F4               	movwf	??_UART_Write_Text+1
  1246  050A  0872               	movf	UART_Write_Text@text+1,w
  1247  050B  00F3               	movwf	??_UART_Write_Text
  1248  050C  1803               	skipnc
  1249  050D  0AF3               	incf	??_UART_Write_Text,f
  1250  050E  1BF6               	btfsc	UART_Write_Text@i,7
  1251  050F  03F3               	decf	??_UART_Write_Text,f
  1252  0510  0873               	movf	??_UART_Write_Text,w
  1253  0511  00F5               	movwf	??_UART_Write_Text+2
  1254  0512  0875               	movf	??_UART_Write_Text+2,w
  1255  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0515  00FF               	movwf	127
  1258  0516  0874               	movf	??_UART_Write_Text+1,w
  1259  0517  0084               	movwf	4
  1260  0518  120A  118A  2003  120A  118A  	fcall	stringtab
  1261  051D  3A00               	xorlw	0
  1262  051E  1903               	btfsc	3,2
  1263  051F  0008               	return
  1264                           
  1265                           ;LIFITXRX.c: 220: UART_Write(text[i]);
  1266  0520  0876               	movf	UART_Write_Text@i,w
  1267  0521  0771               	addwf	UART_Write_Text@text,w
  1268  0522  00F4               	movwf	??_UART_Write_Text+1
  1269  0523  0872               	movf	UART_Write_Text@text+1,w
  1270  0524  00F3               	movwf	??_UART_Write_Text
  1271  0525  1803               	skipnc
  1272  0526  0AF3               	incf	??_UART_Write_Text,f
  1273  0527  1BF6               	btfsc	UART_Write_Text@i,7
  1274  0528  03F3               	decf	??_UART_Write_Text,f
  1275  0529  0873               	movf	??_UART_Write_Text,w
  1276  052A  00F5               	movwf	??_UART_Write_Text+2
  1277  052B  0875               	movf	??_UART_Write_Text+2,w
  1278  052C  1283               	bcf	3,5	;RP0=0, select bank0
  1279  052D  1303               	bcf	3,6	;RP1=0, select bank0
  1280  052E  00FF               	movwf	127
  1281  052F  0874               	movf	??_UART_Write_Text+1,w
  1282  0530  0084               	movwf	4
  1283  0531  120A  118A  2003  120A  118A  	fcall	stringtab
  1284  0536  120A  118A  24AA  120A  118A  	fcall	_UART_Write
  1285  053B  3001               	movlw	1
  1286  053C  07F6               	addwf	UART_Write_Text@i,f
  1287  053D  1803               	skipnc
  1288  053E  0AF7               	incf	UART_Write_Text@i+1,f
  1289  053F  3000               	movlw	0
  1290  0540  07F7               	addwf	UART_Write_Text@i+1,f
  1291  0541  2D07               	goto	l861
  1292  0542                     __end_of_UART_Write_Text:	
  1293                           
  1294                           	psect	text6
  1295  04AA                     __ptext6:	
  1296 ;; *************** function _UART_Write *****************
  1297 ;; Defined at:
  1298 ;;		line 204 in file "LIFITXRX.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  data            1    wreg     unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  data            1    0[COMMON] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;		None               void
  1305 ;; Registers used:
  1306 ;;		wreg
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       0       0       0       0
  1313 ;;      Locals:         1       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0
  1315 ;;      Totals:         1       0       0       0       0
  1316 ;;Total ram usage:        1 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;;		_UART_Write_Text
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           
  1327                           ;psect for function _UART_Write
  1328  04AA                     _UART_Write:	
  1329                           
  1330                           ;incstack = 0
  1331                           ; Regs used in _UART_Write: [wreg]
  1332                           ;UART_Write@data stored from wreg
  1333  04AA  00F0               	movwf	UART_Write@data
  1334  04AB                     l95:	
  1335                           ;LIFITXRX.c: 206: while(!PIR1bits.TXIF);
  1336                           
  1337  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1338  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1339  04AD  1E0C               	btfss	12,4	;volatile
  1340  04AE  2CAB               	goto	l95
  1341  04AF                     l98:	
  1342                           ;LIFITXRX.c: 207: while(!TRMT);
  1343                           
  1344  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  1345  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  1346  04B1  1C98               	btfss	24,1	;volatile
  1347  04B2  2CAF               	goto	l98
  1348                           
  1349                           ;LIFITXRX.c: 208: TXREG = data;
  1350  04B3  0870               	movf	UART_Write@data,w
  1351  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1352  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1353  04B6  0099               	movwf	25	;volatile
  1354  04B7  0008               	return
  1355  04B8                     __end_of_UART_Write:	
  1356                           
  1357                           	psect	text7
  1358  0491                     __ptext7:	
  1359 ;; *************** function _UART_Read *****************
  1360 ;; Defined at:
  1361 ;;		line 232 in file "LIFITXRX.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      unsigned char 
  1368 ;; Registers used:
  1369 ;;		wreg
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_UART_Read_Text
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _UART_Read
  1390  0491                     _UART_Read:	
  1391  0491                     l116:	
  1392                           ;LIFITXRX.c: 234: while(!RCIF);
  1393                           
  1394                           ;incstack = 0
  1395                           ; Regs used in _UART_Read: [wreg]
  1396                           
  1397  0491  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0492  1303               	bcf	3,6	;RP1=0, select bank0
  1399  0493  1E8C               	btfss	12,5	;volatile
  1400  0494  2C91               	goto	l116
  1401                           
  1402                           ;LIFITXRX.c: 235: return RCREG;
  1403  0495  081A               	movf	26,w	;volatile
  1404  0496  0008               	return
  1405  0497                     __end_of_UART_Read:	
  1406                           
  1407                           	psect	text8
  1408  05D1                     __ptext8:	
  1409 ;; *************** function _UART_Init *****************
  1410 ;; Defined at:
  1411 ;;		line 176 in file "LIFITXRX.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  baudrate        4    6[BANK0 ] long 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  x               2    9[COMMON] unsigned int 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      unsigned char 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       4       0       0       0
  1426 ;;      Locals:         2       0       0       0       0
  1427 ;;      Temps:          0      12       0       0       0
  1428 ;;      Totals:         2      16       0       0       0
  1429 ;;Total ram usage:       18 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    1
  1432 ;; This function calls:
  1433 ;;		___aldiv
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _UART_Init
  1441  05D1                     _UART_Init:	
  1442                           
  1443                           ;LIFITXRX.c: 178: unsigned int x;
  1444                           ;LIFITXRX.c: 179: x = (8000000 - baudrate*64)/(baudrate*64);
  1445                           
  1446                           ;incstack = 0
  1447                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1448  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1449  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1450  05D3  0826               	movf	UART_Init@baudrate,w
  1451  05D4  00AA               	movwf	??_UART_Init
  1452  05D5  0827               	movf	UART_Init@baudrate+1,w
  1453  05D6  00AB               	movwf	??_UART_Init+1
  1454  05D7  0828               	movf	UART_Init@baudrate+2,w
  1455  05D8  00AC               	movwf	??_UART_Init+2
  1456  05D9  0829               	movf	UART_Init@baudrate+3,w
  1457  05DA  00AD               	movwf	??_UART_Init+3
  1458  05DB  3006               	movlw	6
  1459  05DC                     u645:	
  1460  05DC  1003               	clrc
  1461  05DD  0DAA               	rlf	??_UART_Init,f
  1462  05DE  0DAB               	rlf	??_UART_Init+1,f
  1463  05DF  0DAC               	rlf	??_UART_Init+2,f
  1464  05E0  0DAD               	rlf	??_UART_Init+3,f
  1465  05E1  3EFF               	addlw	-1
  1466  05E2  1D03               	skipz
  1467  05E3  2DDC               	goto	u645
  1468  05E4  082D               	movf	??_UART_Init+3,w
  1469  05E5  00F3               	movwf	___aldiv@divisor+3
  1470  05E6  082C               	movf	??_UART_Init+2,w
  1471  05E7  00F2               	movwf	___aldiv@divisor+2
  1472  05E8  082B               	movf	??_UART_Init+1,w
  1473  05E9  00F1               	movwf	___aldiv@divisor+1
  1474  05EA  082A               	movf	??_UART_Init,w
  1475  05EB  00F0               	movwf	___aldiv@divisor
  1476  05EC  3000               	movlw	0
  1477  05ED  00AE               	movwf	??_UART_Init+4
  1478  05EE  3012               	movlw	18
  1479  05EF  00AF               	movwf	??_UART_Init+5
  1480  05F0  307A               	movlw	122
  1481  05F1  00B0               	movwf	??_UART_Init+6
  1482  05F2  3000               	movlw	0
  1483  05F3  00B1               	movwf	??_UART_Init+7
  1484  05F4  0826               	movf	UART_Init@baudrate,w
  1485  05F5  00B2               	movwf	??_UART_Init+8
  1486  05F6  0827               	movf	UART_Init@baudrate+1,w
  1487  05F7  00B3               	movwf	??_UART_Init+9
  1488  05F8  0828               	movf	UART_Init@baudrate+2,w
  1489  05F9  00B4               	movwf	??_UART_Init+10
  1490  05FA  0829               	movf	UART_Init@baudrate+3,w
  1491  05FB  00B5               	movwf	??_UART_Init+11
  1492  05FC  3006               	movlw	6
  1493  05FD                     u655:	
  1494  05FD  1003               	clrc
  1495  05FE  0DB2               	rlf	??_UART_Init+8,f
  1496  05FF  0DB3               	rlf	??_UART_Init+9,f
  1497  0600  0DB4               	rlf	??_UART_Init+10,f
  1498  0601  0DB5               	rlf	??_UART_Init+11,f
  1499  0602  3EFF               	addlw	-1
  1500  0603  1D03               	skipz
  1501  0604  2DFD               	goto	u655
  1502  0605  09B2               	comf	??_UART_Init+8,f
  1503  0606  09B3               	comf	??_UART_Init+9,f
  1504  0607  09B4               	comf	??_UART_Init+10,f
  1505  0608  09B5               	comf	??_UART_Init+11,f
  1506  0609  0AB2               	incf	??_UART_Init+8,f
  1507  060A  1903               	skipnz
  1508  060B  0AB3               	incf	??_UART_Init+9,f
  1509  060C  1903               	skipnz
  1510  060D  0AB4               	incf	??_UART_Init+10,f
  1511  060E  1903               	skipnz
  1512  060F  0AB5               	incf	??_UART_Init+11,f
  1513  0610  0832               	movf	??_UART_Init+8,w
  1514  0611  07AE               	addwf	??_UART_Init+4,f
  1515  0612  0833               	movf	??_UART_Init+9,w
  1516  0613  1803               	skipnc
  1517  0614  0F33               	incfsz	??_UART_Init+9,w
  1518  0615  2E17               	goto	u660
  1519  0616  2E18               	goto	u661
  1520  0617                     u660:	
  1521  0617  07AF               	addwf	??_UART_Init+5,f
  1522  0618                     u661:	
  1523  0618  0834               	movf	??_UART_Init+10,w
  1524  0619  1803               	skipnc
  1525  061A  0F34               	incfsz	??_UART_Init+10,w
  1526  061B  2E1D               	goto	u662
  1527  061C  2E1E               	goto	u663
  1528  061D                     u662:	
  1529  061D  07B0               	addwf	??_UART_Init+6,f
  1530  061E                     u663:	
  1531  061E  0835               	movf	??_UART_Init+11,w
  1532  061F  1803               	skipnc
  1533  0620  0A35               	incf	??_UART_Init+11,w
  1534  0621  07B1               	addwf	??_UART_Init+7,f
  1535  0622  0831               	movf	??_UART_Init+7,w
  1536  0623  00F7               	movwf	___aldiv@dividend+3
  1537  0624  0830               	movf	??_UART_Init+6,w
  1538  0625  00F6               	movwf	___aldiv@dividend+2
  1539  0626  082F               	movf	??_UART_Init+5,w
  1540  0627  00F5               	movwf	___aldiv@dividend+1
  1541  0628  082E               	movf	??_UART_Init+4,w
  1542  0629  00F4               	movwf	___aldiv@dividend
  1543  062A  120A  118A  2542  120A  118A  	fcall	___aldiv
  1544  062F  0871               	movf	?___aldiv+1,w
  1545  0630  00FA               	movwf	UART_Init@x+1
  1546  0631  0870               	movf	?___aldiv,w
  1547  0632  00F9               	movwf	UART_Init@x
  1548                           
  1549                           ;LIFITXRX.c: 180: if(x>255)
  1550  0633  3001               	movlw	1
  1551  0634  027A               	subwf	UART_Init@x+1,w
  1552  0635  3000               	movlw	0
  1553  0636  1903               	skipnz
  1554  0637  0279               	subwf	UART_Init@x,w
  1555  0638  1C03               	skipc
  1556  0639  2EA9               	goto	l937
  1557                           
  1558                           ;LIFITXRX.c: 181: {
  1559                           ;LIFITXRX.c: 182: x = (8000000 - baudrate*16)/(baudrate*16);
  1560  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1561  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1562  063C  0826               	movf	UART_Init@baudrate,w
  1563  063D  00AA               	movwf	??_UART_Init
  1564  063E  0827               	movf	UART_Init@baudrate+1,w
  1565  063F  00AB               	movwf	??_UART_Init+1
  1566  0640  0828               	movf	UART_Init@baudrate+2,w
  1567  0641  00AC               	movwf	??_UART_Init+2
  1568  0642  0829               	movf	UART_Init@baudrate+3,w
  1569  0643  00AD               	movwf	??_UART_Init+3
  1570  0644  3004               	movlw	4
  1571  0645                     u685:	
  1572  0645  1003               	clrc
  1573  0646  0DAA               	rlf	??_UART_Init,f
  1574  0647  0DAB               	rlf	??_UART_Init+1,f
  1575  0648  0DAC               	rlf	??_UART_Init+2,f
  1576  0649  0DAD               	rlf	??_UART_Init+3,f
  1577  064A  3EFF               	addlw	-1
  1578  064B  1D03               	skipz
  1579  064C  2E45               	goto	u685
  1580  064D  082D               	movf	??_UART_Init+3,w
  1581  064E  00F3               	movwf	___aldiv@divisor+3
  1582  064F  082C               	movf	??_UART_Init+2,w
  1583  0650  00F2               	movwf	___aldiv@divisor+2
  1584  0651  082B               	movf	??_UART_Init+1,w
  1585  0652  00F1               	movwf	___aldiv@divisor+1
  1586  0653  082A               	movf	??_UART_Init,w
  1587  0654  00F0               	movwf	___aldiv@divisor
  1588  0655  3000               	movlw	0
  1589  0656  00AE               	movwf	??_UART_Init+4
  1590  0657  3012               	movlw	18
  1591  0658  00AF               	movwf	??_UART_Init+5
  1592  0659  307A               	movlw	122
  1593  065A  00B0               	movwf	??_UART_Init+6
  1594  065B  3000               	movlw	0
  1595  065C  00B1               	movwf	??_UART_Init+7
  1596  065D  0826               	movf	UART_Init@baudrate,w
  1597  065E  00B2               	movwf	??_UART_Init+8
  1598  065F  0827               	movf	UART_Init@baudrate+1,w
  1599  0660  00B3               	movwf	??_UART_Init+9
  1600  0661  0828               	movf	UART_Init@baudrate+2,w
  1601  0662  00B4               	movwf	??_UART_Init+10
  1602  0663  0829               	movf	UART_Init@baudrate+3,w
  1603  0664  00B5               	movwf	??_UART_Init+11
  1604  0665  3004               	movlw	4
  1605  0666                     u695:	
  1606  0666  1003               	clrc
  1607  0667  0DB2               	rlf	??_UART_Init+8,f
  1608  0668  0DB3               	rlf	??_UART_Init+9,f
  1609  0669  0DB4               	rlf	??_UART_Init+10,f
  1610  066A  0DB5               	rlf	??_UART_Init+11,f
  1611  066B  3EFF               	addlw	-1
  1612  066C  1D03               	skipz
  1613  066D  2E66               	goto	u695
  1614  066E  09B2               	comf	??_UART_Init+8,f
  1615  066F  09B3               	comf	??_UART_Init+9,f
  1616  0670  09B4               	comf	??_UART_Init+10,f
  1617  0671  09B5               	comf	??_UART_Init+11,f
  1618  0672  0AB2               	incf	??_UART_Init+8,f
  1619  0673  1903               	skipnz
  1620  0674  0AB3               	incf	??_UART_Init+9,f
  1621  0675  1903               	skipnz
  1622  0676  0AB4               	incf	??_UART_Init+10,f
  1623  0677  1903               	skipnz
  1624  0678  0AB5               	incf	??_UART_Init+11,f
  1625  0679  0832               	movf	??_UART_Init+8,w
  1626  067A  07AE               	addwf	??_UART_Init+4,f
  1627  067B  0833               	movf	??_UART_Init+9,w
  1628  067C  1803               	skipnc
  1629  067D  0F33               	incfsz	??_UART_Init+9,w
  1630  067E  2E80               	goto	u700
  1631  067F  2E81               	goto	u701
  1632  0680                     u700:	
  1633  0680  07AF               	addwf	??_UART_Init+5,f
  1634  0681                     u701:	
  1635  0681  0834               	movf	??_UART_Init+10,w
  1636  0682  1803               	skipnc
  1637  0683  0F34               	incfsz	??_UART_Init+10,w
  1638  0684  2E86               	goto	u702
  1639  0685  2E87               	goto	u703
  1640  0686                     u702:	
  1641  0686  07B0               	addwf	??_UART_Init+6,f
  1642  0687                     u703:	
  1643  0687  0835               	movf	??_UART_Init+11,w
  1644  0688  1803               	skipnc
  1645  0689  0A35               	incf	??_UART_Init+11,w
  1646  068A  07B1               	addwf	??_UART_Init+7,f
  1647  068B  0831               	movf	??_UART_Init+7,w
  1648  068C  00F7               	movwf	___aldiv@dividend+3
  1649  068D  0830               	movf	??_UART_Init+6,w
  1650  068E  00F6               	movwf	___aldiv@dividend+2
  1651  068F  082F               	movf	??_UART_Init+5,w
  1652  0690  00F5               	movwf	___aldiv@dividend+1
  1653  0691  082E               	movf	??_UART_Init+4,w
  1654  0692  00F4               	movwf	___aldiv@dividend
  1655  0693  120A  118A  2542  120A  118A  	fcall	___aldiv
  1656  0698  0871               	movf	?___aldiv+1,w
  1657  0699  00FA               	movwf	UART_Init@x+1
  1658  069A  0870               	movf	?___aldiv,w
  1659  069B  00F9               	movwf	UART_Init@x
  1660                           
  1661                           ;LIFITXRX.c: 184: BRGH = 1;
  1662  069C  1683               	bsf	3,5	;RP0=1, select bank1
  1663  069D  1303               	bcf	3,6	;RP1=0, select bank1
  1664  069E  1518               	bsf	24,2	;volatile
  1665                           
  1666                           ;LIFITXRX.c: 185: SPBRG = x;
  1667  069F  0879               	movf	UART_Init@x,w
  1668  06A0  0099               	movwf	25	;volatile
  1669                           
  1670                           ;LIFITXRX.c: 186: SYNC = 0;
  1671  06A1  1218               	bcf	24,4	;volatile
  1672                           
  1673                           ;LIFITXRX.c: 187: SPEN = 1;
  1674  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1675  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1676  06A4  1798               	bsf	24,7	;volatile
  1677                           
  1678                           ;LIFITXRX.c: 188: CREN = 1;
  1679  06A5  1618               	bsf	24,4	;volatile
  1680                           
  1681                           ;LIFITXRX.c: 189: TXEN = 1;
  1682  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  1683  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  1684  06A8  1698               	bsf	24,5	;volatile
  1685  06A9                     l937:	
  1686                           
  1687                           ;LIFITXRX.c: 190: }
  1688                           ;LIFITXRX.c: 191: if(x<256)
  1689  06A9  3001               	movlw	1
  1690  06AA  027A               	subwf	UART_Init@x+1,w
  1691  06AB  3000               	movlw	0
  1692  06AC  1903               	skipnz
  1693  06AD  0279               	subwf	UART_Init@x,w
  1694  06AE  1803               	skipnc
  1695  06AF  0008               	return
  1696                           
  1697                           ;LIFITXRX.c: 192: {
  1698                           ;LIFITXRX.c: 193: BRGH = 0;
  1699  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  1700  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  1701  06B2  1118               	bcf	24,2	;volatile
  1702                           
  1703                           ;LIFITXRX.c: 194: SPBRG = x;
  1704  06B3  0879               	movf	UART_Init@x,w
  1705  06B4  0099               	movwf	25	;volatile
  1706                           
  1707                           ;LIFITXRX.c: 195: SYNC = 0;
  1708  06B5  1218               	bcf	24,4	;volatile
  1709                           
  1710                           ;LIFITXRX.c: 196: SPEN = 1;
  1711  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1712  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1713  06B8  1798               	bsf	24,7	;volatile
  1714                           
  1715                           ;LIFITXRX.c: 197: CREN = 1;
  1716  06B9  1618               	bsf	24,4	;volatile
  1717                           
  1718                           ;LIFITXRX.c: 198: TXEN = 1;
  1719  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  1720  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  1721  06BC  1698               	bsf	24,5	;volatile
  1722                           
  1723                           ;LIFITXRX.c: 199: return 1;
  1724                           ;	Return value of _UART_Init is never used
  1725  06BD  0008               	return
  1726  06BE                     __end_of_UART_Init:	
  1727                           ;LIFITXRX.c: 200: }
  1728                           ;LIFITXRX.c: 201: return 0;
  1729                           ;	Return value of _UART_Init is never used
  1730                           
  1731                           
  1732                           	psect	text9
  1733  0542                     __ptext9:	
  1734 ;; *************** function ___aldiv *****************
  1735 ;; Defined at:
  1736 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  divisor         4    0[COMMON] long 
  1739 ;;  dividend        4    4[COMMON] long 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  quotient        4    2[BANK0 ] long 
  1742 ;;  sign            1    1[BANK0 ] unsigned char 
  1743 ;;  counter         1    0[BANK0 ] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  4    0[COMMON] long 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         8       0       0       0       0
  1754 ;;      Locals:         0       6       0       0       0
  1755 ;;      Temps:          1       0       0       0       0
  1756 ;;      Totals:         9       6       0       0       0
  1757 ;;Total ram usage:       15 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_UART_Init
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function ___aldiv
  1768  0542                     ___aldiv:	
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1772  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1774  0544  01A1               	clrf	___aldiv@sign
  1775  0545  1FF3               	btfss	___aldiv@divisor+3,7
  1776  0546  2D54               	goto	l290
  1777  0547  09F0               	comf	___aldiv@divisor,f
  1778  0548  09F1               	comf	___aldiv@divisor+1,f
  1779  0549  09F2               	comf	___aldiv@divisor+2,f
  1780  054A  09F3               	comf	___aldiv@divisor+3,f
  1781  054B  0AF0               	incf	___aldiv@divisor,f
  1782  054C  1903               	skipnz
  1783  054D  0AF1               	incf	___aldiv@divisor+1,f
  1784  054E  1903               	skipnz
  1785  054F  0AF2               	incf	___aldiv@divisor+2,f
  1786  0550  1903               	skipnz
  1787  0551  0AF3               	incf	___aldiv@divisor+3,f
  1788  0552  01A1               	clrf	___aldiv@sign
  1789  0553  0AA1               	incf	___aldiv@sign,f
  1790  0554                     l290:	
  1791  0554  1FF7               	btfss	___aldiv@dividend+3,7
  1792  0555  2D65               	goto	l889
  1793  0556  09F4               	comf	___aldiv@dividend,f
  1794  0557  09F5               	comf	___aldiv@dividend+1,f
  1795  0558  09F6               	comf	___aldiv@dividend+2,f
  1796  0559  09F7               	comf	___aldiv@dividend+3,f
  1797  055A  0AF4               	incf	___aldiv@dividend,f
  1798  055B  1903               	skipnz
  1799  055C  0AF5               	incf	___aldiv@dividend+1,f
  1800  055D  1903               	skipnz
  1801  055E  0AF6               	incf	___aldiv@dividend+2,f
  1802  055F  1903               	skipnz
  1803  0560  0AF7               	incf	___aldiv@dividend+3,f
  1804  0561  3001               	movlw	1
  1805  0562  00F8               	movwf	??___aldiv
  1806  0563  0878               	movf	??___aldiv,w
  1807  0564  06A1               	xorwf	___aldiv@sign,f
  1808  0565                     l889:	
  1809  0565  3000               	movlw	0
  1810  0566  00A5               	movwf	___aldiv@quotient+3
  1811  0567  3000               	movlw	0
  1812  0568  00A4               	movwf	___aldiv@quotient+2
  1813  0569  3000               	movlw	0
  1814  056A  00A3               	movwf	___aldiv@quotient+1
  1815  056B  3000               	movlw	0
  1816  056C  00A2               	movwf	___aldiv@quotient
  1817  056D  0873               	movf	___aldiv@divisor+3,w
  1818  056E  0472               	iorwf	___aldiv@divisor+2,w
  1819  056F  0471               	iorwf	___aldiv@divisor+1,w
  1820  0570  0470               	iorwf	___aldiv@divisor,w
  1821  0571  1903               	skipnz
  1822  0572  2DBA               	goto	l911
  1823  0573  01A0               	clrf	___aldiv@counter
  1824  0574  0AA0               	incf	___aldiv@counter,f
  1825  0575                     l897:	
  1826  0575  1BF3               	btfsc	___aldiv@divisor+3,7
  1827  0576  2D85               	goto	l899
  1828  0577  3001               	movlw	1
  1829  0578  00F8               	movwf	??___aldiv
  1830  0579                     u575:	
  1831  0579  1003               	clrc
  1832  057A  0DF0               	rlf	___aldiv@divisor,f
  1833  057B  0DF1               	rlf	___aldiv@divisor+1,f
  1834  057C  0DF2               	rlf	___aldiv@divisor+2,f
  1835  057D  0DF3               	rlf	___aldiv@divisor+3,f
  1836  057E  0BF8               	decfsz	??___aldiv,f
  1837  057F  2D79               	goto	u575
  1838  0580  3001               	movlw	1
  1839  0581  00F8               	movwf	??___aldiv
  1840  0582  0878               	movf	??___aldiv,w
  1841  0583  07A0               	addwf	___aldiv@counter,f
  1842  0584  2D75               	goto	l897
  1843  0585                     l899:	
  1844  0585  3001               	movlw	1
  1845  0586  00F8               	movwf	??___aldiv
  1846  0587                     u595:	
  1847  0587  1003               	clrc
  1848  0588  0DA2               	rlf	___aldiv@quotient,f
  1849  0589  0DA3               	rlf	___aldiv@quotient+1,f
  1850  058A  0DA4               	rlf	___aldiv@quotient+2,f
  1851  058B  0DA5               	rlf	___aldiv@quotient+3,f
  1852  058C  0BF8               	decfsz	??___aldiv,f
  1853  058D  2D87               	goto	u595
  1854  058E  0873               	movf	___aldiv@divisor+3,w
  1855  058F  0277               	subwf	___aldiv@dividend+3,w
  1856  0590  1D03               	skipz
  1857  0591  2D9C               	goto	u605
  1858  0592  0872               	movf	___aldiv@divisor+2,w
  1859  0593  0276               	subwf	___aldiv@dividend+2,w
  1860  0594  1D03               	skipz
  1861  0595  2D9C               	goto	u605
  1862  0596  0871               	movf	___aldiv@divisor+1,w
  1863  0597  0275               	subwf	___aldiv@dividend+1,w
  1864  0598  1D03               	skipz
  1865  0599  2D9C               	goto	u605
  1866  059A  0870               	movf	___aldiv@divisor,w
  1867  059B  0274               	subwf	___aldiv@dividend,w
  1868  059C                     u605:	
  1869  059C  1C03               	skipc
  1870  059D  2DAD               	goto	l907
  1871  059E  0870               	movf	___aldiv@divisor,w
  1872  059F  02F4               	subwf	___aldiv@dividend,f
  1873  05A0  0871               	movf	___aldiv@divisor+1,w
  1874  05A1  1C03               	skipc
  1875  05A2  0F71               	incfsz	___aldiv@divisor+1,w
  1876  05A3  02F5               	subwf	___aldiv@dividend+1,f
  1877  05A4  0872               	movf	___aldiv@divisor+2,w
  1878  05A5  1C03               	skipc
  1879  05A6  0F72               	incfsz	___aldiv@divisor+2,w
  1880  05A7  02F6               	subwf	___aldiv@dividend+2,f
  1881  05A8  0873               	movf	___aldiv@divisor+3,w
  1882  05A9  1C03               	skipc
  1883  05AA  0F73               	incfsz	___aldiv@divisor+3,w
  1884  05AB  02F7               	subwf	___aldiv@dividend+3,f
  1885  05AC  1422               	bsf	___aldiv@quotient,0
  1886  05AD                     l907:	
  1887  05AD  3001               	movlw	1
  1888  05AE                     u615:	
  1889  05AE  1003               	clrc
  1890  05AF  0CF3               	rrf	___aldiv@divisor+3,f
  1891  05B0  0CF2               	rrf	___aldiv@divisor+2,f
  1892  05B1  0CF1               	rrf	___aldiv@divisor+1,f
  1893  05B2  0CF0               	rrf	___aldiv@divisor,f
  1894  05B3  3EFF               	addlw	-1
  1895  05B4  1D03               	skipz
  1896  05B5  2DAE               	goto	u615
  1897  05B6  3001               	movlw	1
  1898  05B7  02A0               	subwf	___aldiv@counter,f
  1899  05B8  1D03               	btfss	3,2
  1900  05B9  2D85               	goto	l899
  1901  05BA                     l911:	
  1902  05BA  0821               	movf	___aldiv@sign,w
  1903  05BB  1903               	btfsc	3,2
  1904  05BC  2DC8               	goto	l915
  1905  05BD  09A2               	comf	___aldiv@quotient,f
  1906  05BE  09A3               	comf	___aldiv@quotient+1,f
  1907  05BF  09A4               	comf	___aldiv@quotient+2,f
  1908  05C0  09A5               	comf	___aldiv@quotient+3,f
  1909  05C1  0AA2               	incf	___aldiv@quotient,f
  1910  05C2  1903               	skipnz
  1911  05C3  0AA3               	incf	___aldiv@quotient+1,f
  1912  05C4  1903               	skipnz
  1913  05C5  0AA4               	incf	___aldiv@quotient+2,f
  1914  05C6  1903               	skipnz
  1915  05C7  0AA5               	incf	___aldiv@quotient+3,f
  1916  05C8                     l915:	
  1917  05C8  0825               	movf	___aldiv@quotient+3,w
  1918  05C9  00F3               	movwf	?___aldiv+3
  1919  05CA  0824               	movf	___aldiv@quotient+2,w
  1920  05CB  00F2               	movwf	?___aldiv+2
  1921  05CC  0823               	movf	___aldiv@quotient+1,w
  1922  05CD  00F1               	movwf	?___aldiv+1
  1923  05CE  0822               	movf	___aldiv@quotient,w
  1924  05CF  00F0               	movwf	?___aldiv
  1925  05D0  0008               	return
  1926  05D1                     __end_of___aldiv:	
  1927  007E                     btemp	set	126	;btemp
  1928  007E                     wtemp	set	126
  1929  007E                     wtemp0	set	126
  1930  0080                     wtemp1	set	128
  1931  0082                     wtemp2	set	130
  1932  0084                     wtemp3	set	132
  1933  0086                     wtemp4	set	134
  1934  0088                     wtemp5	set	136
  1935  007F                     wtemp6	set	127
  1936  007E                     ttemp	set	126
  1937  007E                     ttemp0	set	126
  1938  0081                     ttemp1	set	129
  1939  0084                     ttemp2	set	132
  1940  0087                     ttemp3	set	135
  1941  007F                     ttemp4	set	127
  1942  007E                     ltemp	set	126
  1943  007E                     ltemp0	set	126
  1944  0082                     ltemp1	set	130
  1945  0086                     ltemp2	set	134
  1946  0080                     ltemp3	set	128


Data Sizes:
    Strings     172
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      51
    BANK1            80      0       0
    BANK3            96     96      96
    BANK2            96      0       0

Pointer List with Targets:

    UART_Read_Text@a	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_12(CODE[12]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 96
		 -> NULL(NULL[0]), UART_Read_Text@string(BANK0[20]), STR_12(CODE[12]), STR_11(CODE[25]), 
		 -> main@recieved(BANK3[96]), STR_10(CODE[24]), STR_9(CODE[3]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[17]), STR_5(CODE[3]), STR_4(CODE[20]), 
		 -> STR_3(CODE[17]), STR_2(CODE[24]), STR_1(CODE[19]), 

    sp__UART_Read_Text	PTR unsigned char  size(1) Largest target is 20
		 -> UART_Read_Text@string(BANK0[20]), 

    is	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), UART_Read_Text@string(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_UART_Read_Text
    _delay_ms->_delay1ms
    _UART_Read_Text->_UART_Write_Text
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               105   105      0    3183
                                             12 COMMON     2     2      0
                                             22 BANK0      7     7      0
                                              0 BANK3     96    96      0
                          _UART_Init
                     _UART_Read_Text
                         _UART_Write
                    _UART_Write_Text
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _delay_us                                             2     0      2     151
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     144
                                              2 COMMON     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (2) _delay1ms                                             2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read_Text                                       4     4      0     946
                                              8 COMMON     4     4      0
                          _UART_Read
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     854
                                              1 COMMON     7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     743
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Read_Text
     _UART_Read
     _UART_Write_Text
       _UART_Write
   _UART_Write
   _UART_Write_Text
     _UART_Write
   _delay_ms
     _delay1ms
   _delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A1       3        0.0%
BITBANK0            50      0       1       4        1.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      33       5       63.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     60      60       9      100.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A1      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Sep 01 20:44:41 2016

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l59 06C7                        l95 04AB                        l98 04AF  
                      _is 003D                        fsr 0004                       l116 0491  
                     l290 0554                       l911 05BA                       l915 05C8  
                     l907 05AD                       l861 0507                       l937 06A9  
                     l971 04DC                       l973 04F5                       l897 0575  
                     l889 0565                       l899 0585                       _RB0 0030  
                     _RC3 003B              __CFG_CPD$OFF 0000                       u700 0680  
                     u605 059C                       u701 0681                       u702 0686  
                     u615 05AE                       u703 0687                       u800 074C  
                     u810 0755                       u660 0617                       u661 0618  
                     u645 05DC                       u662 061D                       u575 0579  
                     u663 061E                       u655 05FD                       u834 0778  
                     u595 0587                       u835 0776                       u685 0645  
                     u790 074B                       u695 0666                       fsr0 0004  
                     indf 0000              __CFG_LVP$OFF 0000                      l1001 06EB  
                    l1023 0744                      l1027 0758                      l1061 07D8  
                    l1039 0785                      l1047 07A9                      l1059 0730  
                    STR_1 0070                      STR_2 002C                      STR_3 0094  
                    STR_4 005C                      STR_5 00B5                      STR_6 0083  
                    STR_7 00B8                      STR_8 00B1                      STR_9 00B5  
                    _BRGH 04C2                      _CREN 00C4                      _RCIF 0065  
                    _SPEN 00C7                      _TRMT 04C1                      _TXEN 04C5  
                    _TXIF 0064                      _SYNC 04C4              __CFG_WRT$OFF 0000  
                    _main 06BE                      btemp 007E             __CFG_BOREN$ON 0000  
                    ltemp 007E                      start 0000                      ttemp 007E  
                    wtemp 007E             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
 __end_of_UART_Write_Text 0542           __end_of___aldiv 05D1                     ?_main 0070  
                   STR_10 0044                     STR_11 0013                     STR_12 00A5  
           __CFG_WDTE$OFF 0000                     _RCREG 001A                     _SPBRG 0099  
                   _TRISB 0086                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
            main@recieved 0190               ?_UART_Write 0070        __size_of_UART_Init 00ED  
      __size_of_UART_Read 0006      UART_Read_Text@string 003E                     main@j 003A  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __initialization 07F4              __end_of_main 07F4                    ??_main 007C  
                  _INTCON 000B          __end_of_delay1ms 04C7          __end_of_delay_ms 04D7  
        __end_of_delay_us 04AA            __CFG_PWRTE$OFF 0000         __end_of_UART_Init 06BE  
       __end_of_UART_Read 0497       __size_of_UART_Write 000E                 ??___aldiv 0078  
        ?_UART_Write_Text 0071   __size_of_UART_Read_Text 002E   __end_of__initialization 07FC  
          __pcstackCOMMON 0070                __pbssBANK0 003D                __pmaintext 06BE  
                 _IC2_ack 0290                 ?_delay1ms 0070                 ?_delay_ms 0072  
            ??_UART_Write 0070                 ?_delay_us 0070                   _SSPCON2 0091  
              __stringtab 0003                   ___aldiv 0542        __end_of_UART_Write 04B8  
          _UART_Read_Text 04D7                   __ptext1 049F                   __ptext2 04C7  
                 __ptext3 04B8                   __ptext4 04D7                   __ptext5 0505  
                 __ptext6 04AA                   __ptext7 0491                   __ptext8 05D1  
                 __ptext9 0542                ??_delay1ms 0070          ___aldiv@dividend 0074  
              ??_delay_ms 0074                ??_delay_us 0072                   clrloop0 0498  
    end_of_initialization 07FC    __end_of_UART_Read_Text 0505          ___aldiv@quotient 0022  
               _UART_Init 05D1                 _UART_Read 0491            UART_Write@data 0070  
         ?_UART_Read_Text 0070                ?_UART_Init 0026                ?_UART_Read 0070  
           __pbitbssBANK0 0290  __size_of_UART_Write_Text 003D       start_initialization 07F4  
__CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK3 0190         __size_of_delay1ms 000F         __size_of_delay_ms 0010  
       __size_of_delay_us 000B                  ?___aldiv 0070               ??_UART_Init 002A  
             ??_UART_Read 0070                 __pstrings 0003                UART_Init@x 0079  
               delay1ms@j 0070         ??_UART_Write_Text 0073           ___aldiv@divisor 0070  
         ___aldiv@counter 0020                 delay_ms@i 0072           UART_Read_Text@a 0079  
         UART_Read_Text@i 007B           UART_Read_Text@x 007A                 delay_us@i 0070  
               clear_ram0 0497                  _PIR1bits 000C         UART_Init@baudrate 0026  
             __stringbase 0012                 main@rx_ch 003C          ??_UART_Read_Text 0078  
         main@no_of_bytes 0038          __size_of___aldiv 008F        __end_of__stringtab 0013  
                _delay1ms 04B8                  _delay_ms 04C7                  _delay_us 049F  
       __CFG_BOR4V$BOR40V 0000       UART_Write_Text@text 0071             __size_of_main 0136  
          main@LED_Output 0036             main@LED_Input 0037                 stringcode 000D  
              _OSCCONbits 008F           _UART_Write_Text 0505                  stringdir 000D  
                stringtab 0003              ___aldiv@sign 0021                _UART_Write 04AA  
        UART_Write_Text@i 0076  
