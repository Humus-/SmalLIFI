

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Aug 13 21:59:13 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  000E                     	;# 
    36  000F                     	;# 
    37  0010                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0014                     	;# 
    42  0015                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  0081                     	;# 
    56  0085                     	;# 
    57  0086                     	;# 
    58  0087                     	;# 
    59  0089                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0093                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0097                     	;# 
    74  0098                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009E                     	;# 
    81  009F                     	;# 
    82  0105                     	;# 
    83  0107                     	;# 
    84  0108                     	;# 
    85  0109                     	;# 
    86  010C                     	;# 
    87  010C                     	;# 
    88  010D                     	;# 
    89  010E                     	;# 
    90  010F                     	;# 
    91  0185                     	;# 
    92  0187                     	;# 
    93  0188                     	;# 
    94  0189                     	;# 
    95  018C                     	;# 
    96  018D                     	;# 
    97  000B                     _INTCON	set	11
    98  000C                     _PIR1bits	set	12
    99  001A                     _RCREG	set	26
   100  0019                     _TXREG	set	25
   101  00C4                     _CREN	set	196
   102  0030                     _RB0	set	48
   103  003B                     _RC3	set	59
   104  0065                     _RCIF	set	101
   105  00C7                     _SPEN	set	199
   106  0064                     _TXIF	set	100
   107  008F                     _OSCCONbits	set	143
   108  0099                     _SPBRG	set	153
   109  0091                     _SSPCON2	set	145
   110  0094                     _SSPSTATbits	set	148
   111  0086                     _TRISB	set	134
   112  0087                     _TRISC	set	135
   113  04C2                     _BRGH	set	1218
   114  04C4                     _SYNC	set	1220
   115  04C1                     _TRMT	set	1217
   116  04C5                     _TXEN	set	1221
   117                           
   118                           	psect	strings
   119  0003                     __pstrings:	
   120  0003                     stringtab:	
   121  0003                     __stringtab:	
   122  0003                     stringcode:	
   123                           ;	String table - string pointers are 1 byte each
   124                           
   125  0003                     stringdir:	
   126  0003  3000               	movlw	high stringdir
   127  0004  008A               	movwf	10
   128  0005  0804               	movf	4,w
   129  0006  0A84               	incf	4,f
   130  0007  0782               	addwf	2,f
   131  0008                     __stringbase:	
   132  0008  3400               	retlw	0
   133  0009                     __end_of__stringtab:	
   134  0009                     STR_7:	
   135  0009  3454               	retlw	84	;'T'
   136  000A  3478               	retlw	120	;'x'
   137  000B  3420               	retlw	32	;' '
   138  000C  3463               	retlw	99	;'c'
   139  000D  346F               	retlw	111	;'o'
   140  000E  346D               	retlw	109	;'m'
   141  000F  3470               	retlw	112	;'p'
   142  0010  346C               	retlw	108	;'l'
   143  0011  3465               	retlw	101	;'e'
   144  0012  3474               	retlw	116	;'t'
   145  0013  3465               	retlw	101	;'e'
   146  0014  3464               	retlw	100	;'d'
   147  0015  3420               	retlw	32	;' '
   148  0016  3461               	retlw	97	;'a'
   149  0017  346C               	retlw	108	;'l'
   150  0018  346C               	retlw	108	;'l'
   151  0019  3420               	retlw	32	;' '
   152  001A  3462               	retlw	98	;'b'
   153  001B  3479               	retlw	121	;'y'
   154  001C  3474               	retlw	116	;'t'
   155  001D  3465               	retlw	101	;'e'
   156  001E  3473               	retlw	115	;'s'
   157  001F  340D               	retlw	13
   158  0020  340A               	retlw	10
   159  0021  3400               	retlw	0
   160  0022                     STR_1:	
   161  0022  340D               	retlw	13
   162  0023  340A               	retlw	10
   163  0024  3474               	retlw	116	;'t'
   164  0025  3461               	retlw	97	;'a'
   165  0026  346B               	retlw	107	;'k'
   166  0027  3469               	retlw	105	;'i'
   167  0028  346E               	retlw	110	;'n'
   168  0029  3467               	retlw	103	;'g'
   169  002A  3420               	retlw	32	;' '
   170  002B  3469               	retlw	105	;'i'
   171  002C  346E               	retlw	110	;'n'
   172  002D  3420               	retlw	32	;' '
   173  002E  3474               	retlw	116	;'t'
   174  002F  3468               	retlw	104	;'h'
   175  0030  3465               	retlw	101	;'e'
   176  0031  3420               	retlw	32	;' '
   177  0032  3474               	retlw	116	;'t'
   178  0033  3465               	retlw	101	;'e'
   179  0034  3478               	retlw	120	;'x'
   180  0035  3474               	retlw	116	;'t'
   181  0036  3420               	retlw	32	;' '
   182  0037  340D               	retlw	13
   183  0038  340A               	retlw	10
   184  0039  3400               	retlw	0
   185  003A                     STR_6:	
   186  003A  3454               	retlw	84	;'T'
   187  003B  3478               	retlw	120	;'x'
   188  003C  3420               	retlw	32	;' '
   189  003D  346F               	retlw	111	;'o'
   190  003E  3466               	retlw	102	;'f'
   191  003F  3420               	retlw	32	;' '
   192  0040  3431               	retlw	49	;'1'
   193  0041  3420               	retlw	32	;' '
   194  0042  3462               	retlw	98	;'b'
   195  0043  3479               	retlw	121	;'y'
   196  0044  3474               	retlw	116	;'t'
   197  0045  3465               	retlw	101	;'e'
   198  0046  3420               	retlw	32	;' '
   199  0047  3463               	retlw	99	;'c'
   200  0048  346F               	retlw	111	;'o'
   201  0049  346D               	retlw	109	;'m'
   202  004A  3470               	retlw	112	;'p'
   203  004B  346C               	retlw	108	;'l'
   204  004C  3465               	retlw	101	;'e'
   205  004D  3474               	retlw	116	;'t'
   206  004E  3465               	retlw	101	;'e'
   207  004F  340D               	retlw	13
   208  0050  340A               	retlw	10
   209  0051  3400               	retlw	0
   210  0052                     STR_3:	
   211  0052  3459               	retlw	89	;'Y'
   212  0053  346F               	retlw	111	;'o'
   213  0054  3475               	retlw	117	;'u'
   214  0055  3420               	retlw	32	;' '
   215  0056  3468               	retlw	104	;'h'
   216  0057  3461               	retlw	97	;'a'
   217  0058  3476               	retlw	118	;'v'
   218  0059  3465               	retlw	101	;'e'
   219  005A  3420               	retlw	32	;' '
   220  005B  3465               	retlw	101	;'e'
   221  005C  346E               	retlw	110	;'n'
   222  005D  3474               	retlw	116	;'t'
   223  005E  3465               	retlw	101	;'e'
   224  005F  3472               	retlw	114	;'r'
   225  0060  3465               	retlw	101	;'e'
   226  0061  3464               	retlw	100	;'d'
   227  0062  343A               	retlw	58	;':'
   228  0063  340D               	retlw	13
   229  0064  340A               	retlw	10
   230  0065  3400               	retlw	0
   231  0066                     STR_4:	
   232  0066  3455               	retlw	85	;'U'
   233  0067  3441               	retlw	65	;'A'
   234  0068  3452               	retlw	82	;'R'
   235  0069  3454               	retlw	84	;'T'
   236  006A  3420               	retlw	32	;' '
   237  006B  3449               	retlw	73	;'I'
   238  006C  346E               	retlw	110	;'n'
   239  006D  3469               	retlw	105	;'i'
   240  006E  3474               	retlw	116	;'t'
   241  006F  3469               	retlw	105	;'i'
   242  0070  3461               	retlw	97	;'a'
   243  0071  346C               	retlw	108	;'l'
   244  0072  3469               	retlw	105	;'i'
   245  0073  3473               	retlw	115	;'s'
   246  0074  3465               	retlw	101	;'e'
   247  0075  3464               	retlw	100	;'d'
   248  0076  340D               	retlw	13
   249  0077  340A               	retlw	10
   250  0078  3400               	retlw	0
   251  0079                     STR_9:	
   252  0079  3452               	retlw	82	;'R'
   253  007A  3458               	retlw	88	;'X'
   254  007B  3420               	retlw	32	;' '
   255  007C  3430               	retlw	48	;'0'
   256  007D  342E               	retlw	46	;'.'
   257  007E  342E               	retlw	46	;'.'
   258  007F  342E               	retlw	46	;'.'
   259  0080  342E               	retlw	46	;'.'
   260  0081  342E               	retlw	46	;'.'
   261  0082  342E               	retlw	46	;'.'
   262  0083  342E               	retlw	46	;'.'
   263  0084  342E               	retlw	46	;'.'
   264  0085  342E               	retlw	46	;'.'
   265  0086  342E               	retlw	46	;'.'
   266  0087  340D               	retlw	13
   267  0088  340A               	retlw	10
   268  0089  3400               	retlw	0
   269  008A                     STR_5:	
   270  008A  3453               	retlw	83	;'S'
   271  008B  3465               	retlw	101	;'e'
   272  008C  346E               	retlw	110	;'n'
   273  008D  3464               	retlw	100	;'d'
   274  008E  3469               	retlw	105	;'i'
   275  008F  346E               	retlw	110	;'n'
   276  0090  3467               	retlw	103	;'g'
   277  0091  3420               	retlw	32	;' '
   278  0092  3454               	retlw	84	;'T'
   279  0093  344F               	retlw	79	;'O'
   280  0094  3420               	retlw	32	;' '
   281  0095  344C               	retlw	76	;'L'
   282  0096  3465               	retlw	101	;'e'
   283  0097  3464               	retlw	100	;'d'
   284  0098  340D               	retlw	13
   285  0099  340A               	retlw	10
   286  009A  3400               	retlw	0
   287  009B                     STR_2:	
   288  009B  340D               	retlw	13
   289  009C  340A               	retlw	10
   290  009D  3441               	retlw	65	;'A'
   291  009E  3463               	retlw	99	;'c'
   292  009F  346B               	retlw	107	;'k'
   293  00A0  346E               	retlw	110	;'n'
   294  00A1  346F               	retlw	111	;'o'
   295  00A2  3477               	retlw	119	;'w'
   296  00A3  346C               	retlw	108	;'l'
   297  00A4  3465               	retlw	101	;'e'
   298  00A5  3464               	retlw	100	;'d'
   299  00A6  3467               	retlw	103	;'g'
   300  00A7  3465               	retlw	101	;'e'
   301  00A8  3464               	retlw	100	;'d'
   302  00A9  340D               	retlw	13
   303  00AA  340A               	retlw	10
   304  00AB  3400               	retlw	0
   305  00AC                     STR_10:	
   306  00AC  344B               	retlw	75	;'K'
   307  00AD  3465               	retlw	101	;'e'
   308  00AE  3479               	retlw	121	;'y'
   309  00AF  3465               	retlw	101	;'e'
   310  00B0  3464               	retlw	100	;'d'
   311  00B1  3420               	retlw	32	;' '
   312  00B2  3469               	retlw	105	;'i'
   313  00B3  346E               	retlw	110	;'n'
   314  00B4  3420               	retlw	32	;' '
   315  00B5  340D               	retlw	13
   316  00B6  340A               	retlw	10
   317  00B7  3400               	retlw	0
   318  00B8                     STR_8:	
   319  00B8  3452               	retlw	82	;'R'
   320  00B9  3458               	retlw	88	;'X'
   321  00BA  3420               	retlw	32	;' '
   322  00BB  3431               	retlw	49	;'1'
   323  00BC  340D               	retlw	13
   324  00BD  340A               	retlw	10
   325  00BE  3400               	retlw	0
   326                           
   327                           ; #config settings
   328  0000                     
   329                           	psect	cinit
   330  07F4                     start_initialization:	
   331  07F4                     __initialization:	
   332                           
   333                           ; Clear objects allocated to BITBANK0
   334  07F4  01DA               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   335                           
   336                           ; Clear objects allocated to BANK0
   337  07F5  1383               	bcf	3,7	;select IRP bank0
   338  07F6  3045               	movlw	low __pbssBANK0
   339  07F7  0084               	movwf	4
   340  07F8  305A               	movlw	low (__pbssBANK0+21)
   341  07F9  120A  118A  24F8   	fcall	clear_ram0
   342  07FC                     end_of_initialization:	
   343                           ;End of C runtime variable initialization code
   344                           
   345  07FC                     __end_of__initialization:	
   346  07FC  0183               	clrf	3
   347  07FD  120A  118A  2EF4   	ljmp	_main	;jump to C main() function
   348                           
   349                           	psect	bitbssBANK0
   350  02D0                     __pbitbssBANK0:	
   351  02D0                     _IC2_ack:	
   352  02D0                     	ds	1
   353                           
   354                           	psect	bssBANK0
   355  0045                     __pbssBANK0:	
   356  0045                     _is:	
   357  0045                     	ds	1
   358  0046                     UART_Read_Text@string:	
   359  0046                     	ds	20
   360                           
   361                           	psect	clrtext
   362  04F8                     clear_ram0:	
   363                           ;	Called with FSR containing the base address, and
   364                           ;	W with the last address+1
   365                           
   366  04F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   367  04F9                     clrloop0:	
   368  04F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   369  04FA  0A84               	incf	4,f	;increment pointer
   370  04FB  0604               	xorwf	4,w	;XOR with final address
   371  04FC  1903               	btfsc	3,2	;have we reached the end yet?
   372  04FD  3400               	retlw	0	;all done for this memory range, return
   373  04FE  0604               	xorwf	4,w	;XOR again to restore value
   374  04FF  2CF9               	goto	clrloop0	;do the next byte
   375                           
   376                           	psect	cstackCOMMON
   377  0070                     __pcstackCOMMON:	
   378  0070                     ?_UART_Write_Text:	
   379  0070                     ?_UART_Write:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ??_UART_Write:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0070                     ?_delay1ms:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0070                     ??_delay1ms:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0070                     ?_main:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0070                     ??_UART_Read:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0070                     ?_UART_Read_Text:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0070                     ?_UART_Read:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?___aldiv:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     UART_Write@data:	
   407                           ; 4 bytes @ 0x0
   408                           
   409  0070                     delay1ms@j:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ___aldiv@divisor:	
   413                           ; 2 bytes @ 0x0
   414                           
   415                           
   416                           ; 4 bytes @ 0x0
   417  0070                     	ds	1
   418  0071                     ??_UART_Write_Text:	
   419  0071                     UART_Write_Text@i:	
   420                           ; 0 bytes @ 0x1
   421                           
   422                           
   423                           ; 2 bytes @ 0x1
   424  0071                     	ds	1
   425  0072                     ?_delay_ms:	
   426  0072                     delay_ms@i:	
   427                           ; 0 bytes @ 0x2
   428                           
   429                           
   430                           ; 2 bytes @ 0x2
   431  0072                     	ds	1
   432  0073                     UART_Write_Text@text:	
   433                           
   434                           ; 1 bytes @ 0x3
   435  0073                     	ds	1
   436  0074                     ??_delay_ms:	
   437  0074                     ??_UART_Read_Text:	
   438                           ; 0 bytes @ 0x4
   439                           
   440  0074                     ___aldiv@dividend:	
   441                           ; 0 bytes @ 0x4
   442                           
   443                           
   444                           ; 4 bytes @ 0x4
   445  0074                     	ds	1
   446  0075                     UART_Read_Text@a:	
   447                           
   448                           ; 1 bytes @ 0x5
   449  0075                     	ds	1
   450  0076                     UART_Read_Text@x:	
   451                           
   452                           ; 1 bytes @ 0x6
   453  0076                     	ds	1
   454  0077                     UART_Read_Text@i:	
   455                           
   456                           ; 1 bytes @ 0x7
   457  0077                     	ds	1
   458  0078                     ??___aldiv:	
   459                           
   460                           ; 0 bytes @ 0x8
   461  0078                     	ds	1
   462  0079                     UART_Init@x:	
   463                           
   464                           ; 2 bytes @ 0x9
   465  0079                     	ds	2
   466  007B                     ??_main:	
   467                           
   468                           ; 0 bytes @ 0xB
   469  007B                     	ds	2
   470                           
   471                           	psect	cstackBANK0
   472  0020                     __pcstackBANK0:	
   473  0020                     ___aldiv@counter:	
   474                           
   475                           ; 1 bytes @ 0x0
   476  0020                     	ds	1
   477  0021                     ___aldiv@sign:	
   478                           
   479                           ; 1 bytes @ 0x1
   480  0021                     	ds	1
   481  0022                     ___aldiv@quotient:	
   482                           
   483                           ; 4 bytes @ 0x2
   484  0022                     	ds	4
   485  0026                     ?_UART_Init:	
   486  0026                     UART_Init@baudrate:	
   487                           ; 1 bytes @ 0x6
   488                           
   489                           
   490                           ; 4 bytes @ 0x6
   491  0026                     	ds	4
   492  002A                     ??_UART_Init:	
   493                           
   494                           ; 0 bytes @ 0xA
   495  002A                     	ds	12
   496  0036                     main@arr1:	
   497                           
   498                           ; 1 bytes @ 0x16
   499  0036                     	ds	1
   500  0037                     main@arr2:	
   501                           
   502                           ; 1 bytes @ 0x17
   503  0037                     	ds	1
   504  0038                     main@arr3:	
   505                           
   506                           ; 1 bytes @ 0x18
   507  0038                     	ds	1
   508  0039                     main@arr4:	
   509                           
   510                           ; 1 bytes @ 0x19
   511  0039                     	ds	1
   512  003A                     main@arr5:	
   513                           
   514                           ; 1 bytes @ 0x1A
   515  003A                     	ds	1
   516  003B                     main@arr6:	
   517                           
   518                           ; 1 bytes @ 0x1B
   519  003B                     	ds	1
   520  003C                     main@arr7:	
   521                           
   522                           ; 1 bytes @ 0x1C
   523  003C                     	ds	1
   524  003D                     main@arr8:	
   525                           
   526                           ; 1 bytes @ 0x1D
   527  003D                     	ds	1
   528  003E                     main@arr9:	
   529                           
   530                           ; 1 bytes @ 0x1E
   531  003E                     	ds	1
   532  003F                     main@LED_Output:	
   533                           
   534                           ; 1 bytes @ 0x1F
   535  003F                     	ds	1
   536  0040                     main@j:	
   537                           
   538                           ; 2 bytes @ 0x20
   539  0040                     	ds	2
   540  0042                     main@LED_Input:	
   541                           
   542                           ; 1 bytes @ 0x22
   543  0042                     	ds	1
   544  0043                     main@no:	
   545                           
   546                           ; 2 bytes @ 0x23
   547  0043                     	ds	2
   548                           
   549                           	psect	maintext
   550  06F4                     __pmaintext:	
   551 ;;
   552 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   553 ;;
   554 ;; *************** function _main *****************
   555 ;; Defined at:
   556 ;;		line 75 in file "LIFITXRX.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  no              2   35[BANK0 ] unsigned int 
   561 ;;  j               2   32[BANK0 ] unsigned int 
   562 ;;  LED_Input       1   34[BANK0 ] unsigned char 
   563 ;;  LED_Output      1   31[BANK0 ] unsigned char 
   564 ;;  arr9            1   30[BANK0 ] PTR const unsigned char 
   565 ;;		 -> STR_9(17), 
   566 ;;  arr8            1   29[BANK0 ] PTR const unsigned char 
   567 ;;		 -> STR_8(7), 
   568 ;;  arr7            1   28[BANK0 ] PTR const unsigned char 
   569 ;;		 -> STR_7(25), 
   570 ;;  arr6            1   27[BANK0 ] PTR const unsigned char 
   571 ;;		 -> STR_6(24), 
   572 ;;  arr5            1   26[BANK0 ] PTR const unsigned char 
   573 ;;		 -> STR_5(17), 
   574 ;;  arr4            1   25[BANK0 ] PTR const unsigned char 
   575 ;;		 -> STR_4(19), 
   576 ;;  arr3            1   24[BANK0 ] PTR const unsigned char 
   577 ;;		 -> STR_3(20), 
   578 ;;  arr2            1   23[BANK0 ] PTR const unsigned char 
   579 ;;		 -> STR_2(17), 
   580 ;;  arr1            1   22[BANK0 ] PTR const unsigned char 
   581 ;;		 -> STR_1(24), 
   582 ;; Return value:  Size  Location     Type
   583 ;;		None               void
   584 ;; Registers used:
   585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : B00/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0      15       0       0       0
   593 ;;      Temps:          2       0       0       0       0
   594 ;;      Totals:         2      15       0       0       0
   595 ;;Total ram usage:       17 bytes
   596 ;; Hardware stack levels required when called:    3
   597 ;; This function calls:
   598 ;;		_UART_Init
   599 ;;		_UART_Read_Text
   600 ;;		_UART_Write
   601 ;;		_UART_Write_Text
   602 ;;		_delay_ms
   603 ;; This function is called by:
   604 ;;		Startup code after reset
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           
   609                           ;psect for function _main
   610  06F4                     _main:	
   611                           
   612                           ;LIFITXRX.c: 79: const unsigned char * arr1 = "\r\ntaking in the text \r\n";
   613                           
   614                           ;incstack = 0
   615                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   616  06F4  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   617  06F5  00FB               	movwf	??_main
   618  06F6  087B               	movf	??_main,w
   619  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   620  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   621  06F9  00B6               	movwf	main@arr1
   622                           
   623                           ;LIFITXRX.c: 81: const unsigned char *arr2="\r\nAcknowledged\r\n";
   624  06FA  3093               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   625  06FB  00FB               	movwf	??_main
   626  06FC  087B               	movf	??_main,w
   627  06FD  00B7               	movwf	main@arr2
   628                           
   629                           ;LIFITXRX.c: 83: const unsigned char *arr3= "You have entered:\r\n";
   630  06FE  304A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   631  06FF  00FB               	movwf	??_main
   632  0700  087B               	movf	??_main,w
   633  0701  00B8               	movwf	main@arr3
   634                           
   635                           ;LIFITXRX.c: 85: const unsigned char *arr4= "UART Initialised\r\n";
   636  0702  305E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   637  0703  00FB               	movwf	??_main
   638  0704  087B               	movf	??_main,w
   639  0705  00B9               	movwf	main@arr4
   640                           
   641                           ;LIFITXRX.c: 87: const unsigned char *arr5= "Sending TO Led\r\n";
   642  0706  3082               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   643  0707  00FB               	movwf	??_main
   644  0708  087B               	movf	??_main,w
   645  0709  00BA               	movwf	main@arr5
   646                           
   647                           ;LIFITXRX.c: 89: const unsigned char *arr6= "Tx of 1 byte complete\r\n";
   648  070A  3032               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   649  070B  00FB               	movwf	??_main
   650  070C  087B               	movf	??_main,w
   651  070D  00BB               	movwf	main@arr6
   652                           
   653                           ;LIFITXRX.c: 91: const unsigned char *arr7= "Tx completed all bytes\r\n";
   654  070E  3001               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   655  070F  00FB               	movwf	??_main
   656  0710  087B               	movf	??_main,w
   657  0711  00BC               	movwf	main@arr7
   658                           
   659                           ;LIFITXRX.c: 93: const unsigned char *arr8="RX 1\r\n";
   660  0712  30B0               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   661  0713  00FB               	movwf	??_main
   662  0714  087B               	movf	??_main,w
   663  0715  00BD               	movwf	main@arr8
   664                           
   665                           ;LIFITXRX.c: 95: const unsigned char *arr9="RX 0..........\r\n";
   666  0716  3071               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   667  0717  00FB               	movwf	??_main
   668  0718  087B               	movf	??_main,w
   669  0719  00BE               	movwf	main@arr9
   670                           
   671                           ;LIFITXRX.c: 97: unsigned int no;
   672                           ;LIFITXRX.c: 98: unsigned int j;
   673                           ;LIFITXRX.c: 100: unsigned char LED_Output,LED_Input;
   674                           ;LIFITXRX.c: 102: TRISB=0x00;
   675  071A  1683               	bsf	3,5	;RP0=1, select bank1
   676  071B  1303               	bcf	3,6	;RP1=0, select bank1
   677  071C  0186               	clrf	6	;volatile
   678                           
   679                           ;LIFITXRX.c: 103: TRISC=0x08;
   680  071D  3008               	movlw	8
   681  071E  0087               	movwf	7	;volatile
   682                           
   683                           ;LIFITXRX.c: 105: OSCCONbits.IRCF = 0x07;
   684  071F  3070               	movlw	112
   685  0720  048F               	iorwf	15,f	;volatile
   686  0721                     l59:	
   687                           ;LIFITXRX.c: 107: while(!OSCCONbits.HTS);
   688                           
   689  0721  1D0F               	btfss	15,2	;volatile
   690  0722  2F21               	goto	l59
   691                           
   692                           ;LIFITXRX.c: 109: INTCON=0;
   693  0723  018B               	clrf	11	;volatile
   694                           
   695                           ;LIFITXRX.c: 111: UART_Init(9600);
   696  0724  3000               	movlw	0
   697  0725  1283               	bcf	3,5	;RP0=0, select bank0
   698  0726  1303               	bcf	3,6	;RP1=0, select bank0
   699  0727  00A9               	movwf	UART_Init@baudrate+3
   700  0728  3000               	movlw	0
   701  0729  00A8               	movwf	UART_Init@baudrate+2
   702  072A  3025               	movlw	37
   703  072B  00A7               	movwf	UART_Init@baudrate+1
   704  072C  3080               	movlw	128
   705  072D  00A6               	movwf	UART_Init@baudrate
   706  072E  120A  118A  2607  120A  118A  	fcall	_UART_Init
   707                           
   708                           ;LIFITXRX.c: 113: UART_Write_Text(arr4);
   709  0733  1283               	bcf	3,5	;RP0=0, select bank0
   710  0734  1303               	bcf	3,6	;RP1=0, select bank0
   711  0735  0839               	movf	main@arr4,w
   712  0736  120A  118A  252D  120A  118A  	fcall	_UART_Write_Text
   713                           
   714                           ;LIFITXRX.c: 115: delay_ms(500);
   715  073B  30F4               	movlw	244
   716  073C  00F2               	movwf	delay_ms@i
   717  073D  3001               	movlw	1
   718  073E  00F3               	movwf	delay_ms@i+1
   719  073F  120A  118A  251D  120A  118A  	fcall	_delay_ms
   720  0744                     l981:	
   721                           ;LIFITXRX.c: 117: while(1)
   722                           
   723                           
   724                           ;LIFITXRX.c: 118: {
   725                           ;LIFITXRX.c: 121: UART_Write_Text(arr1);
   726  0744  1283               	bcf	3,5	;RP0=0, select bank0
   727  0745  1303               	bcf	3,6	;RP1=0, select bank0
   728  0746  0836               	movf	main@arr1,w
   729  0747  120A  118A  252D  120A  118A  	fcall	_UART_Write_Text
   730                           
   731                           ;LIFITXRX.c: 123: is=UART_Read_Text();
   732  074C  120A  118A  254F  120A  118A  	fcall	_UART_Read_Text
   733  0751  00FB               	movwf	??_main
   734  0752  087B               	movf	??_main,w
   735  0753  1283               	bcf	3,5	;RP0=0, select bank0
   736  0754  1303               	bcf	3,6	;RP1=0, select bank0
   737  0755  00C5               	movwf	_is
   738                           
   739                           ;LIFITXRX.c: 125: UART_Write_Text(arr2);
   740  0756  0837               	movf	main@arr2,w
   741  0757  120A  118A  252D  120A  118A  	fcall	_UART_Write_Text
   742                           
   743                           ;LIFITXRX.c: 127: UART_Write_Text(arr3);
   744  075C  1283               	bcf	3,5	;RP0=0, select bank0
   745  075D  1303               	bcf	3,6	;RP1=0, select bank0
   746  075E  0838               	movf	main@arr3,w
   747  075F  120A  118A  252D  120A  118A  	fcall	_UART_Write_Text
   748                           
   749                           ;LIFITXRX.c: 131: UART_Write_Text(arr5);
   750  0764  1283               	bcf	3,5	;RP0=0, select bank0
   751  0765  1303               	bcf	3,6	;RP1=0, select bank0
   752  0766  083A               	movf	main@arr5,w
   753  0767  120A  118A  252D  120A  118A  	fcall	_UART_Write_Text
   754  076C                     l63:	
   755                           ;LIFITXRX.c: 133: while(*is)
   756                           
   757  076C  1283               	bcf	3,5	;RP0=0, select bank0
   758  076D  1303               	bcf	3,6	;RP1=0, select bank0
   759  076E  0845               	movf	_is,w
   760  076F  0084               	movwf	4
   761  0770  1383               	bcf	3,7	;select IRP bank0
   762  0771  0800               	movf	0,w
   763  0772  1903               	btfsc	3,2
   764  0773  2FED               	goto	l1027
   765                           
   766                           ;LIFITXRX.c: 134: {
   767                           ;LIFITXRX.c: 135: no=0;
   768  0774  1283               	bcf	3,5	;RP0=0, select bank0
   769  0775  1303               	bcf	3,6	;RP1=0, select bank0
   770  0776  01C3               	clrf	main@no
   771  0777  01C4               	clrf	main@no+1
   772                           
   773                           ;LIFITXRX.c: 136: for(j=0;j<=7;j++)
   774  0778  01C0               	clrf	main@j
   775  0779  01C1               	clrf	main@j+1
   776  077A  3000               	movlw	0
   777  077B  0241               	subwf	main@j+1,w
   778  077C  3008               	movlw	8
   779  077D  1903               	skipnz
   780  077E  0240               	subwf	main@j,w
   781  077F  1803               	btfsc	3,0
   782  0780  2FDA               	goto	l1021
   783  0781                     l997:	
   784                           
   785                           ;LIFITXRX.c: 137: {
   786                           ;LIFITXRX.c: 138: LED_Output= (*is&0x01)==1?1:0;
   787  0781  0845               	movf	_is,w
   788  0782  0084               	movwf	4
   789  0783  1383               	bcf	3,7	;select IRP bank0
   790  0784  1C00               	btfss	0,0
   791  0785  2F88               	goto	u720
   792  0786  3001               	movlw	1
   793  0787  2F89               	goto	u730
   794  0788                     u720:	
   795  0788  3000               	movlw	0
   796  0789                     u730:	
   797  0789  00FB               	movwf	??_main
   798  078A  087B               	movf	??_main,w
   799  078B  00BF               	movwf	main@LED_Output
   800                           
   801                           ;LIFITXRX.c: 139: RB0=LED_Output;
   802  078C  1C3F               	btfss	main@LED_Output,0
   803  078D  2F92               	goto	u740
   804  078E  1283               	bcf	3,5	;RP0=0, select bank0
   805  078F  1303               	bcf	3,6	;RP1=0, select bank0
   806  0790  1406               	bsf	6,0	;volatile
   807  0791  2F95               	goto	l1001
   808  0792                     u740:	
   809  0792  1283               	bcf	3,5	;RP0=0, select bank0
   810  0793  1303               	bcf	3,6	;RP1=0, select bank0
   811  0794  1006               	bcf	6,0	;volatile
   812  0795                     l1001:	
   813                           
   814                           ;LIFITXRX.c: 140: LED_Input=RC3;
   815  0795  3000               	movlw	0
   816  0796  1987               	btfsc	7,3	;volatile
   817  0797  3001               	movlw	1
   818  0798  00C2               	movwf	main@LED_Input
   819                           
   820                           ;LIFITXRX.c: 141: if(LED_Input==1)
   821  0799  0342               	decf	main@LED_Input,w
   822  079A  1D03               	btfss	3,2
   823  079B  2F9E               	goto	l1007
   824                           
   825                           ;LIFITXRX.c: 143: UART_Write_Text(arr8);
   826  079C  083D               	movf	main@arr8,w
   827  079D  2FA1               	goto	L1
   828  079E                     l1007:	
   829                           
   830                           ;LIFITXRX.c: 144: else
   831                           ;LIFITXRX.c: 146: UART_Write_Text(arr9);
   832  079E  1283               	bcf	3,5	;RP0=0, select bank0
   833  079F  1303               	bcf	3,6	;RP1=0, select bank0
   834  07A0  083E               	movf	main@arr9,w
   835  07A1                     L1:	
   836  07A1  120A  118A  252D  120A  118A  	fcall	_UART_Write_Text
   837                           
   838                           ;LIFITXRX.c: 147: no = no<<1;
   839  07A6  1003               	clrc
   840  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   841  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   842  07A9  0D43               	rlf	main@no,w
   843  07AA  00C3               	movwf	main@no
   844  07AB  0D44               	rlf	main@no+1,w
   845  07AC  00C4               	movwf	main@no+1
   846                           
   847                           ;LIFITXRX.c: 148: no+=LED_Input;
   848  07AD  0842               	movf	main@LED_Input,w
   849  07AE  00FB               	movwf	??_main
   850  07AF  01FC               	clrf	??_main+1
   851  07B0  087B               	movf	??_main,w
   852  07B1  07C3               	addwf	main@no,f
   853  07B2  1803               	skipnc
   854  07B3  0AC4               	incf	main@no+1,f
   855  07B4  087C               	movf	??_main+1,w
   856  07B5  07C4               	addwf	main@no+1,f
   857                           
   858                           ;LIFITXRX.c: 149: delay_ms(1000);
   859  07B6  30E8               	movlw	232
   860  07B7  00F2               	movwf	delay_ms@i
   861  07B8  3003               	movlw	3
   862  07B9  00F3               	movwf	delay_ms@i+1
   863  07BA  120A  118A  251D  120A  118A  	fcall	_delay_ms
   864                           
   865                           ;LIFITXRX.c: 150: *is=*is>>1;
   866  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   867  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   868  07C1  0845               	movf	_is,w
   869  07C2  0084               	movwf	4
   870  07C3  1383               	bcf	3,7	;select IRP bank0
   871  07C4  0800               	movf	0,w
   872  07C5  00FB               	movwf	??_main
   873  07C6  1003               	clrc
   874  07C7  0C7B               	rrf	??_main,w
   875  07C8  00FC               	movwf	??_main+1
   876  07C9  0845               	movf	_is,w
   877  07CA  0084               	movwf	4
   878  07CB  087C               	movf	??_main+1,w
   879  07CC  0080               	movwf	0
   880  07CD  3001               	movlw	1
   881  07CE  07C0               	addwf	main@j,f
   882  07CF  1803               	skipnc
   883  07D0  0AC1               	incf	main@j+1,f
   884  07D1  3000               	movlw	0
   885  07D2  07C1               	addwf	main@j+1,f
   886  07D3  3000               	movlw	0
   887  07D4  0241               	subwf	main@j+1,w
   888  07D5  3008               	movlw	8
   889  07D6  1903               	skipnz
   890  07D7  0240               	subwf	main@j,w
   891  07D8  1C03               	skipc
   892  07D9  2F81               	goto	l997
   893  07DA                     l1021:	
   894                           
   895                           ;LIFITXRX.c: 151: }
   896                           ;LIFITXRX.c: 152: is++;
   897  07DA  3001               	movlw	1
   898  07DB  00FB               	movwf	??_main
   899  07DC  087B               	movf	??_main,w
   900  07DD  07C5               	addwf	_is,f
   901                           
   902                           ;LIFITXRX.c: 159: UART_Write_Text(arr6);
   903  07DE  083B               	movf	main@arr6,w
   904  07DF  120A  118A  252D  120A  118A  	fcall	_UART_Write_Text
   905                           
   906                           ;LIFITXRX.c: 160: UART_Write((unsigned char)no);
   907  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   908  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   909  07E6  0843               	movf	main@no,w
   910  07E7  120A  118A  2500  120A  118A  	fcall	_UART_Write
   911  07EC  2F6C               	goto	l63
   912  07ED                     l1027:	
   913                           
   914                           ;LIFITXRX.c: 162: }
   915                           ;LIFITXRX.c: 164: UART_Write_Text(arr7);
   916  07ED  083C               	movf	main@arr7,w
   917  07EE  120A  118A  252D  120A  118A  	fcall	_UART_Write_Text
   918  07F3  2F44               	goto	l981
   919  07F4                     __end_of_main:	
   920                           
   921                           	psect	text1
   922  051D                     __ptext1:	
   923 ;; *************** function _delay_ms *****************
   924 ;; Defined at:
   925 ;;		line 180 in file "LIFITXRX.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  i               2    2[COMMON] unsigned int 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;		None               void
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, pclath, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   939 ;;      Params:         2       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0
   942 ;;      Totals:         2       0       0       0       0
   943 ;;Total ram usage:        2 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    1
   946 ;; This function calls:
   947 ;;		_delay1ms
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _delay_ms
   955  051D                     _delay_ms:	
   956                           
   957                           ;LIFITXRX.c: 182: for(;i!=0x00;i--)
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
   961  051D  0872               	movf	delay_ms@i,w
   962  051E  0473               	iorwf	delay_ms@i+1,w
   963  051F  1903               	btfsc	3,2
   964  0520  0008               	return
   965                           
   966                           ;LIFITXRX.c: 183: delay1ms();
   967  0521  120A  118A  250E  120A  118A  	fcall	_delay1ms
   968  0526  3001               	movlw	1
   969  0527  02F2               	subwf	delay_ms@i,f
   970  0528  3000               	movlw	0
   971  0529  1C03               	skipc
   972  052A  03F3               	decf	delay_ms@i+1,f
   973  052B  02F3               	subwf	delay_ms@i+1,f
   974  052C  2D1D               	goto	_delay_ms
   975  052D                     __end_of_delay_ms:	
   976                           
   977                           	psect	text2
   978  050E                     __ptext2:	
   979 ;; *************** function _delay1ms *****************
   980 ;; Defined at:
   981 ;;		line 186 in file "LIFITXRX.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  j               2    0[COMMON] unsigned int 
   986 ;; Return value:  Size  Location     Type
   987 ;;		None               void
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         0       0       0       0       0
   996 ;;      Locals:         2       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0
   998 ;;      Totals:         2       0       0       0       0
   999 ;;Total ram usage:        2 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_delay_ms
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function _delay1ms
  1010  050E                     _delay1ms:	
  1011                           
  1012                           ;LIFITXRX.c: 188: unsigned int j = 130;
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in _delay1ms: [wreg+status,2+status,0]
  1016  050E  3082               	movlw	130
  1017  050F  00F0               	movwf	delay1ms@j
  1018  0510  3000               	movlw	0
  1019  0511  00F1               	movwf	delay1ms@j+1
  1020  0512                     L2:	
  1021                           
  1022                           ;LIFITXRX.c: 189: for (;j!=0x00;j--);
  1023  0512  0870               	movf	delay1ms@j,w
  1024  0513  0471               	iorwf	delay1ms@j+1,w
  1025  0514  1903               	btfsc	3,2
  1026  0515  0008               	return
  1027  0516  3001               	movlw	1
  1028  0517  02F0               	subwf	delay1ms@j,f
  1029  0518  3000               	movlw	0
  1030  0519  1C03               	skipc
  1031  051A  03F1               	decf	delay1ms@j+1,f
  1032  051B  02F1               	subwf	delay1ms@j+1,f
  1033  051C  2D12               	goto	L2
  1034  051D                     __end_of_delay1ms:	
  1035                           
  1036                           	psect	text3
  1037  054F                     __ptext3:	
  1038 ;; *************** function _UART_Read_Text *****************
  1039 ;; Defined at:
  1040 ;;		line 252 in file "LIFITXRX.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  i               1    7[COMMON] unsigned char 
  1045 ;;  x               1    6[COMMON] unsigned char 
  1046 ;;  a               1    5[COMMON] PTR const unsigned char 
  1047 ;;		 -> STR_10(12), 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      PTR unsigned char 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0       0       0       0       0
  1058 ;;      Locals:         3       0       0       0       0
  1059 ;;      Temps:          1       0       0       0       0
  1060 ;;      Totals:         4       0       0       0       0
  1061 ;;Total ram usage:        4 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    2
  1064 ;; This function calls:
  1065 ;;		_UART_Read
  1066 ;;		_UART_Write_Text
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _UART_Read_Text
  1074  054F                     _UART_Read_Text:	
  1075                           
  1076                           ;LIFITXRX.c: 254: unsigned const char *a="Keyed in \r\n";
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _UART_Read_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1080  054F  30A4               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1081  0550  00F4               	movwf	??_UART_Read_Text
  1082  0551  0874               	movf	??_UART_Read_Text,w
  1083  0552  00F5               	movwf	UART_Read_Text@a
  1084                           
  1085                           ;LIFITXRX.c: 256: unsigned static char string[20];
  1086                           ;LIFITXRX.c: 258: unsigned char x, i = 0;
  1087  0553  01F7               	clrf	UART_Read_Text@i
  1088  0554                     l955:	
  1089                           ;LIFITXRX.c: 260: while((x = UART_Read()) != 13)
  1090                           
  1091  0554  120A  118A  24F2  120A  118A  	fcall	_UART_Read
  1092  0559  00F4               	movwf	??_UART_Read_Text
  1093  055A  0874               	movf	??_UART_Read_Text,w
  1094  055B  00F6               	movwf	UART_Read_Text@x
  1095  055C  300D               	movlw	13
  1096  055D  0676               	xorwf	UART_Read_Text@x,w
  1097  055E  1903               	btfsc	3,2
  1098  055F  2D6D               	goto	l957
  1099                           
  1100                           ;LIFITXRX.c: 261: {
  1101                           ;LIFITXRX.c: 264: string[i++] = x;
  1102  0560  0876               	movf	UART_Read_Text@x,w
  1103  0561  00F4               	movwf	??_UART_Read_Text
  1104  0562  0877               	movf	UART_Read_Text@i,w
  1105  0563  3E46               	addlw	(low (UART_Read_Text@string| 0))& (0+255)
  1106  0564  0084               	movwf	4
  1107  0565  0874               	movf	??_UART_Read_Text,w
  1108  0566  1383               	bcf	3,7	;select IRP bank0
  1109  0567  0080               	movwf	0
  1110  0568  3001               	movlw	1
  1111  0569  00F4               	movwf	??_UART_Read_Text
  1112  056A  0874               	movf	??_UART_Read_Text,w
  1113  056B  07F7               	addwf	UART_Read_Text@i,f
  1114  056C  2D54               	goto	l955
  1115  056D                     l957:	
  1116                           
  1117                           ;LIFITXRX.c: 265: }
  1118                           ;LIFITXRX.c: 268: string[i] = '\0';
  1119  056D  0877               	movf	UART_Read_Text@i,w
  1120  056E  3E46               	addlw	(low (UART_Read_Text@string| 0))& (0+255)
  1121  056F  0084               	movwf	4
  1122  0570  1383               	bcf	3,7	;select IRP bank0
  1123  0571  0180               	clrf	0
  1124                           
  1125                           ;LIFITXRX.c: 269: UART_Write_Text(a);
  1126  0572  0875               	movf	UART_Read_Text@a,w
  1127  0573  120A  118A  252D   	fcall	_UART_Write_Text
  1128                           
  1129                           ;LIFITXRX.c: 272: return(string);
  1130  0576  3046               	movlw	(low (UART_Read_Text@string| 0))& (0+255)
  1131  0577  0008               	return
  1132  0578                     __end_of_UART_Read_Text:	
  1133                           
  1134                           	psect	text4
  1135  052D                     __ptext4:	
  1136 ;; *************** function _UART_Write_Text *****************
  1137 ;; Defined at:
  1138 ;;		line 232 in file "LIFITXRX.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  text            1    wreg     PTR const unsigned char 
  1141 ;;		 -> STR_10(12), STR_9(17), STR_8(7), STR_7(25), 
  1142 ;;		 -> STR_6(24), STR_5(17), STR_4(19), STR_3(20), 
  1143 ;;		 -> STR_2(17), STR_1(24), 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  text            1    3[COMMON] PTR const unsigned char 
  1146 ;;		 -> STR_10(12), STR_9(17), STR_8(7), STR_7(25), 
  1147 ;;		 -> STR_6(24), STR_5(17), STR_4(19), STR_3(20), 
  1148 ;;		 -> STR_2(17), STR_1(24), 
  1149 ;;  i               2    1[COMMON] int 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;		None               void
  1152 ;; Registers used:
  1153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1159 ;;      Params:         0       0       0       0       0
  1160 ;;      Locals:         3       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0
  1162 ;;      Totals:         3       0       0       0       0
  1163 ;;Total ram usage:        3 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    1
  1166 ;; This function calls:
  1167 ;;		_UART_Write
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;;		_UART_Read_Text
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _UART_Write_Text
  1176  052D                     _UART_Write_Text:	
  1177                           
  1178                           ;incstack = 0
  1179                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1180                           ;UART_Write_Text@text stored from wreg
  1181  052D  00F3               	movwf	UART_Write_Text@text
  1182                           
  1183                           ;LIFITXRX.c: 234: int i;
  1184                           ;LIFITXRX.c: 235: for(i=0;text[i]!='\0';i++)
  1185  052E  01F1               	clrf	UART_Write_Text@i
  1186  052F  01F2               	clrf	UART_Write_Text@i+1
  1187  0530                     l845:	
  1188  0530  0871               	movf	UART_Write_Text@i,w
  1189  0531  0773               	addwf	UART_Write_Text@text,w
  1190  0532  0084               	movwf	4
  1191  0533  120A  118A  2003  120A  118A  	fcall	stringdir
  1192  0538  3A00               	xorlw	0
  1193  0539  1903               	btfsc	3,2
  1194  053A  0008               	return
  1195                           
  1196                           ;LIFITXRX.c: 236: UART_Write(text[i]);
  1197  053B  0871               	movf	UART_Write_Text@i,w
  1198  053C  0773               	addwf	UART_Write_Text@text,w
  1199  053D  0084               	movwf	4
  1200  053E  120A  118A  2003  120A  118A  	fcall	stringdir
  1201  0543  120A  118A  2500  120A  118A  	fcall	_UART_Write
  1202  0548  3001               	movlw	1
  1203  0549  07F1               	addwf	UART_Write_Text@i,f
  1204  054A  1803               	skipnc
  1205  054B  0AF2               	incf	UART_Write_Text@i+1,f
  1206  054C  3000               	movlw	0
  1207  054D  07F2               	addwf	UART_Write_Text@i+1,f
  1208  054E  2D30               	goto	l845
  1209  054F                     __end_of_UART_Write_Text:	
  1210                           
  1211                           	psect	text5
  1212  0500                     __ptext5:	
  1213 ;; *************** function _UART_Write *****************
  1214 ;; Defined at:
  1215 ;;		line 220 in file "LIFITXRX.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  data            1    wreg     unsigned char 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  data            1    0[COMMON] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;		None               void
  1222 ;; Registers used:
  1223 ;;		wreg
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       0       0       0       0
  1230 ;;      Locals:         1       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0
  1232 ;;      Totals:         1       0       0       0       0
  1233 ;;Total ram usage:        1 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;;		_UART_Write_Text
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function _UART_Write
  1245  0500                     _UART_Write:	
  1246                           
  1247                           ;incstack = 0
  1248                           ; Regs used in _UART_Write: [wreg]
  1249                           ;UART_Write@data stored from wreg
  1250  0500  00F0               	movwf	UART_Write@data
  1251  0501                     l95:	
  1252                           ;LIFITXRX.c: 222: while(!PIR1bits.TXIF);
  1253                           
  1254  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0503  1E0C               	btfss	12,4	;volatile
  1257  0504  2D01               	goto	l95
  1258  0505                     l98:	
  1259                           ;LIFITXRX.c: 223: while(!TRMT);
  1260                           
  1261  0505  1683               	bsf	3,5	;RP0=1, select bank1
  1262  0506  1303               	bcf	3,6	;RP1=0, select bank1
  1263  0507  1C98               	btfss	24,1	;volatile
  1264  0508  2D05               	goto	l98
  1265                           
  1266                           ;LIFITXRX.c: 224: TXREG = data;
  1267  0509  0870               	movf	UART_Write@data,w
  1268  050A  1283               	bcf	3,5	;RP0=0, select bank0
  1269  050B  1303               	bcf	3,6	;RP1=0, select bank0
  1270  050C  0099               	movwf	25	;volatile
  1271  050D  0008               	return
  1272  050E                     __end_of_UART_Write:	
  1273                           
  1274                           	psect	text6
  1275  04F2                     __ptext6:	
  1276 ;; *************** function _UART_Read *****************
  1277 ;; Defined at:
  1278 ;;		line 246 in file "LIFITXRX.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      unsigned char 
  1285 ;; Registers used:
  1286 ;;		wreg
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_UART_Read_Text
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           
  1306                           ;psect for function _UART_Read
  1307  04F2                     _UART_Read:	
  1308  04F2                     l116:	
  1309                           ;LIFITXRX.c: 248: while(!RCIF);
  1310                           
  1311                           ;incstack = 0
  1312                           ; Regs used in _UART_Read: [wreg]
  1313                           
  1314  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  1315  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  1316  04F4  1E8C               	btfss	12,5	;volatile
  1317  04F5  2CF2               	goto	l116
  1318                           
  1319                           ;LIFITXRX.c: 249: return RCREG;
  1320  04F6  081A               	movf	26,w	;volatile
  1321  04F7  0008               	return
  1322  04F8                     __end_of_UART_Read:	
  1323                           
  1324                           	psect	text7
  1325  0607                     __ptext7:	
  1326 ;; *************** function _UART_Init *****************
  1327 ;; Defined at:
  1328 ;;		line 192 in file "LIFITXRX.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  baudrate        4    6[BANK0 ] long 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  x               2    9[COMMON] unsigned int 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      unsigned char 
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0, pclath, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1342 ;;      Params:         0       4       0       0       0
  1343 ;;      Locals:         2       0       0       0       0
  1344 ;;      Temps:          0      12       0       0       0
  1345 ;;      Totals:         2      16       0       0       0
  1346 ;;Total ram usage:       18 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; Hardware stack levels required when called:    1
  1349 ;; This function calls:
  1350 ;;		___aldiv
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           
  1357                           ;psect for function _UART_Init
  1358  0607                     _UART_Init:	
  1359                           
  1360                           ;LIFITXRX.c: 194: unsigned int x;
  1361                           ;LIFITXRX.c: 195: x = (8000000 - baudrate*64)/(baudrate*64);
  1362                           
  1363                           ;incstack = 0
  1364                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1365  0607  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0608  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0609  0826               	movf	UART_Init@baudrate,w
  1368  060A  00AA               	movwf	??_UART_Init
  1369  060B  0827               	movf	UART_Init@baudrate+1,w
  1370  060C  00AB               	movwf	??_UART_Init+1
  1371  060D  0828               	movf	UART_Init@baudrate+2,w
  1372  060E  00AC               	movwf	??_UART_Init+2
  1373  060F  0829               	movf	UART_Init@baudrate+3,w
  1374  0610  00AD               	movwf	??_UART_Init+3
  1375  0611  3006               	movlw	6
  1376  0612                     u595:	
  1377  0612  1003               	clrc
  1378  0613  0DAA               	rlf	??_UART_Init,f
  1379  0614  0DAB               	rlf	??_UART_Init+1,f
  1380  0615  0DAC               	rlf	??_UART_Init+2,f
  1381  0616  0DAD               	rlf	??_UART_Init+3,f
  1382  0617  3EFF               	addlw	-1
  1383  0618  1D03               	skipz
  1384  0619  2E12               	goto	u595
  1385  061A  082D               	movf	??_UART_Init+3,w
  1386  061B  00F3               	movwf	___aldiv@divisor+3
  1387  061C  082C               	movf	??_UART_Init+2,w
  1388  061D  00F2               	movwf	___aldiv@divisor+2
  1389  061E  082B               	movf	??_UART_Init+1,w
  1390  061F  00F1               	movwf	___aldiv@divisor+1
  1391  0620  082A               	movf	??_UART_Init,w
  1392  0621  00F0               	movwf	___aldiv@divisor
  1393  0622  3000               	movlw	0
  1394  0623  00AE               	movwf	??_UART_Init+4
  1395  0624  3012               	movlw	18
  1396  0625  00AF               	movwf	??_UART_Init+5
  1397  0626  307A               	movlw	122
  1398  0627  00B0               	movwf	??_UART_Init+6
  1399  0628  3000               	movlw	0
  1400  0629  00B1               	movwf	??_UART_Init+7
  1401  062A  0826               	movf	UART_Init@baudrate,w
  1402  062B  00B2               	movwf	??_UART_Init+8
  1403  062C  0827               	movf	UART_Init@baudrate+1,w
  1404  062D  00B3               	movwf	??_UART_Init+9
  1405  062E  0828               	movf	UART_Init@baudrate+2,w
  1406  062F  00B4               	movwf	??_UART_Init+10
  1407  0630  0829               	movf	UART_Init@baudrate+3,w
  1408  0631  00B5               	movwf	??_UART_Init+11
  1409  0632  3006               	movlw	6
  1410  0633                     u605:	
  1411  0633  1003               	clrc
  1412  0634  0DB2               	rlf	??_UART_Init+8,f
  1413  0635  0DB3               	rlf	??_UART_Init+9,f
  1414  0636  0DB4               	rlf	??_UART_Init+10,f
  1415  0637  0DB5               	rlf	??_UART_Init+11,f
  1416  0638  3EFF               	addlw	-1
  1417  0639  1D03               	skipz
  1418  063A  2E33               	goto	u605
  1419  063B  09B2               	comf	??_UART_Init+8,f
  1420  063C  09B3               	comf	??_UART_Init+9,f
  1421  063D  09B4               	comf	??_UART_Init+10,f
  1422  063E  09B5               	comf	??_UART_Init+11,f
  1423  063F  0AB2               	incf	??_UART_Init+8,f
  1424  0640  1903               	skipnz
  1425  0641  0AB3               	incf	??_UART_Init+9,f
  1426  0642  1903               	skipnz
  1427  0643  0AB4               	incf	??_UART_Init+10,f
  1428  0644  1903               	skipnz
  1429  0645  0AB5               	incf	??_UART_Init+11,f
  1430  0646  0832               	movf	??_UART_Init+8,w
  1431  0647  07AE               	addwf	??_UART_Init+4,f
  1432  0648  0833               	movf	??_UART_Init+9,w
  1433  0649  1803               	skipnc
  1434  064A  0F33               	incfsz	??_UART_Init+9,w
  1435  064B  2E4D               	goto	u610
  1436  064C  2E4E               	goto	u611
  1437  064D                     u610:	
  1438  064D  07AF               	addwf	??_UART_Init+5,f
  1439  064E                     u611:	
  1440  064E  0834               	movf	??_UART_Init+10,w
  1441  064F  1803               	skipnc
  1442  0650  0F34               	incfsz	??_UART_Init+10,w
  1443  0651  2E53               	goto	u612
  1444  0652  2E54               	goto	u613
  1445  0653                     u612:	
  1446  0653  07B0               	addwf	??_UART_Init+6,f
  1447  0654                     u613:	
  1448  0654  0835               	movf	??_UART_Init+11,w
  1449  0655  1803               	skipnc
  1450  0656  0A35               	incf	??_UART_Init+11,w
  1451  0657  07B1               	addwf	??_UART_Init+7,f
  1452  0658  0831               	movf	??_UART_Init+7,w
  1453  0659  00F7               	movwf	___aldiv@dividend+3
  1454  065A  0830               	movf	??_UART_Init+6,w
  1455  065B  00F6               	movwf	___aldiv@dividend+2
  1456  065C  082F               	movf	??_UART_Init+5,w
  1457  065D  00F5               	movwf	___aldiv@dividend+1
  1458  065E  082E               	movf	??_UART_Init+4,w
  1459  065F  00F4               	movwf	___aldiv@dividend
  1460  0660  120A  118A  2578  120A  118A  	fcall	___aldiv
  1461  0665  0871               	movf	?___aldiv+1,w
  1462  0666  00FA               	movwf	UART_Init@x+1
  1463  0667  0870               	movf	?___aldiv,w
  1464  0668  00F9               	movwf	UART_Init@x
  1465                           
  1466                           ;LIFITXRX.c: 196: if(x>255)
  1467  0669  3001               	movlw	1
  1468  066A  027A               	subwf	UART_Init@x+1,w
  1469  066B  3000               	movlw	0
  1470  066C  1903               	skipnz
  1471  066D  0279               	subwf	UART_Init@x,w
  1472  066E  1C03               	skipc
  1473  066F  2EDF               	goto	l921
  1474                           
  1475                           ;LIFITXRX.c: 197: {
  1476                           ;LIFITXRX.c: 198: x = (8000000 - baudrate*16)/(baudrate*16);
  1477  0670  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0671  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0672  0826               	movf	UART_Init@baudrate,w
  1480  0673  00AA               	movwf	??_UART_Init
  1481  0674  0827               	movf	UART_Init@baudrate+1,w
  1482  0675  00AB               	movwf	??_UART_Init+1
  1483  0676  0828               	movf	UART_Init@baudrate+2,w
  1484  0677  00AC               	movwf	??_UART_Init+2
  1485  0678  0829               	movf	UART_Init@baudrate+3,w
  1486  0679  00AD               	movwf	??_UART_Init+3
  1487  067A  3004               	movlw	4
  1488  067B                     u635:	
  1489  067B  1003               	clrc
  1490  067C  0DAA               	rlf	??_UART_Init,f
  1491  067D  0DAB               	rlf	??_UART_Init+1,f
  1492  067E  0DAC               	rlf	??_UART_Init+2,f
  1493  067F  0DAD               	rlf	??_UART_Init+3,f
  1494  0680  3EFF               	addlw	-1
  1495  0681  1D03               	skipz
  1496  0682  2E7B               	goto	u635
  1497  0683  082D               	movf	??_UART_Init+3,w
  1498  0684  00F3               	movwf	___aldiv@divisor+3
  1499  0685  082C               	movf	??_UART_Init+2,w
  1500  0686  00F2               	movwf	___aldiv@divisor+2
  1501  0687  082B               	movf	??_UART_Init+1,w
  1502  0688  00F1               	movwf	___aldiv@divisor+1
  1503  0689  082A               	movf	??_UART_Init,w
  1504  068A  00F0               	movwf	___aldiv@divisor
  1505  068B  3000               	movlw	0
  1506  068C  00AE               	movwf	??_UART_Init+4
  1507  068D  3012               	movlw	18
  1508  068E  00AF               	movwf	??_UART_Init+5
  1509  068F  307A               	movlw	122
  1510  0690  00B0               	movwf	??_UART_Init+6
  1511  0691  3000               	movlw	0
  1512  0692  00B1               	movwf	??_UART_Init+7
  1513  0693  0826               	movf	UART_Init@baudrate,w
  1514  0694  00B2               	movwf	??_UART_Init+8
  1515  0695  0827               	movf	UART_Init@baudrate+1,w
  1516  0696  00B3               	movwf	??_UART_Init+9
  1517  0697  0828               	movf	UART_Init@baudrate+2,w
  1518  0698  00B4               	movwf	??_UART_Init+10
  1519  0699  0829               	movf	UART_Init@baudrate+3,w
  1520  069A  00B5               	movwf	??_UART_Init+11
  1521  069B  3004               	movlw	4
  1522  069C                     u645:	
  1523  069C  1003               	clrc
  1524  069D  0DB2               	rlf	??_UART_Init+8,f
  1525  069E  0DB3               	rlf	??_UART_Init+9,f
  1526  069F  0DB4               	rlf	??_UART_Init+10,f
  1527  06A0  0DB5               	rlf	??_UART_Init+11,f
  1528  06A1  3EFF               	addlw	-1
  1529  06A2  1D03               	skipz
  1530  06A3  2E9C               	goto	u645
  1531  06A4  09B2               	comf	??_UART_Init+8,f
  1532  06A5  09B3               	comf	??_UART_Init+9,f
  1533  06A6  09B4               	comf	??_UART_Init+10,f
  1534  06A7  09B5               	comf	??_UART_Init+11,f
  1535  06A8  0AB2               	incf	??_UART_Init+8,f
  1536  06A9  1903               	skipnz
  1537  06AA  0AB3               	incf	??_UART_Init+9,f
  1538  06AB  1903               	skipnz
  1539  06AC  0AB4               	incf	??_UART_Init+10,f
  1540  06AD  1903               	skipnz
  1541  06AE  0AB5               	incf	??_UART_Init+11,f
  1542  06AF  0832               	movf	??_UART_Init+8,w
  1543  06B0  07AE               	addwf	??_UART_Init+4,f
  1544  06B1  0833               	movf	??_UART_Init+9,w
  1545  06B2  1803               	skipnc
  1546  06B3  0F33               	incfsz	??_UART_Init+9,w
  1547  06B4  2EB6               	goto	u650
  1548  06B5  2EB7               	goto	u651
  1549  06B6                     u650:	
  1550  06B6  07AF               	addwf	??_UART_Init+5,f
  1551  06B7                     u651:	
  1552  06B7  0834               	movf	??_UART_Init+10,w
  1553  06B8  1803               	skipnc
  1554  06B9  0F34               	incfsz	??_UART_Init+10,w
  1555  06BA  2EBC               	goto	u652
  1556  06BB  2EBD               	goto	u653
  1557  06BC                     u652:	
  1558  06BC  07B0               	addwf	??_UART_Init+6,f
  1559  06BD                     u653:	
  1560  06BD  0835               	movf	??_UART_Init+11,w
  1561  06BE  1803               	skipnc
  1562  06BF  0A35               	incf	??_UART_Init+11,w
  1563  06C0  07B1               	addwf	??_UART_Init+7,f
  1564  06C1  0831               	movf	??_UART_Init+7,w
  1565  06C2  00F7               	movwf	___aldiv@dividend+3
  1566  06C3  0830               	movf	??_UART_Init+6,w
  1567  06C4  00F6               	movwf	___aldiv@dividend+2
  1568  06C5  082F               	movf	??_UART_Init+5,w
  1569  06C6  00F5               	movwf	___aldiv@dividend+1
  1570  06C7  082E               	movf	??_UART_Init+4,w
  1571  06C8  00F4               	movwf	___aldiv@dividend
  1572  06C9  120A  118A  2578  120A  118A  	fcall	___aldiv
  1573  06CE  0871               	movf	?___aldiv+1,w
  1574  06CF  00FA               	movwf	UART_Init@x+1
  1575  06D0  0870               	movf	?___aldiv,w
  1576  06D1  00F9               	movwf	UART_Init@x
  1577                           
  1578                           ;LIFITXRX.c: 200: BRGH = 1;
  1579  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  1580  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  1581  06D4  1518               	bsf	24,2	;volatile
  1582                           
  1583                           ;LIFITXRX.c: 201: SPBRG = x;
  1584  06D5  0879               	movf	UART_Init@x,w
  1585  06D6  0099               	movwf	25	;volatile
  1586                           
  1587                           ;LIFITXRX.c: 202: SYNC = 0;
  1588  06D7  1218               	bcf	24,4	;volatile
  1589                           
  1590                           ;LIFITXRX.c: 203: SPEN = 1;
  1591  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1592  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1593  06DA  1798               	bsf	24,7	;volatile
  1594                           
  1595                           ;LIFITXRX.c: 204: CREN = 1;
  1596  06DB  1618               	bsf	24,4	;volatile
  1597                           
  1598                           ;LIFITXRX.c: 205: TXEN = 1;
  1599  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  1600  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  1601  06DE  1698               	bsf	24,5	;volatile
  1602  06DF                     l921:	
  1603                           
  1604                           ;LIFITXRX.c: 206: }
  1605                           ;LIFITXRX.c: 207: if(x<256)
  1606  06DF  3001               	movlw	1
  1607  06E0  027A               	subwf	UART_Init@x+1,w
  1608  06E1  3000               	movlw	0
  1609  06E2  1903               	skipnz
  1610  06E3  0279               	subwf	UART_Init@x,w
  1611  06E4  1803               	skipnc
  1612  06E5  0008               	return
  1613                           
  1614                           ;LIFITXRX.c: 208: {
  1615                           ;LIFITXRX.c: 209: BRGH = 0;
  1616  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  1617  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  1618  06E8  1118               	bcf	24,2	;volatile
  1619                           
  1620                           ;LIFITXRX.c: 210: SPBRG = x;
  1621  06E9  0879               	movf	UART_Init@x,w
  1622  06EA  0099               	movwf	25	;volatile
  1623                           
  1624                           ;LIFITXRX.c: 211: SYNC = 0;
  1625  06EB  1218               	bcf	24,4	;volatile
  1626                           
  1627                           ;LIFITXRX.c: 212: SPEN = 1;
  1628  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1629  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1630  06EE  1798               	bsf	24,7	;volatile
  1631                           
  1632                           ;LIFITXRX.c: 213: CREN = 1;
  1633  06EF  1618               	bsf	24,4	;volatile
  1634                           
  1635                           ;LIFITXRX.c: 214: TXEN = 1;
  1636  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  1637  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  1638  06F2  1698               	bsf	24,5	;volatile
  1639                           
  1640                           ;LIFITXRX.c: 215: return 1;
  1641                           ;	Return value of _UART_Init is never used
  1642  06F3  0008               	return
  1643  06F4                     __end_of_UART_Init:	
  1644                           ;LIFITXRX.c: 216: }
  1645                           ;LIFITXRX.c: 217: return 0;
  1646                           ;	Return value of _UART_Init is never used
  1647                           
  1648                           
  1649                           	psect	text8
  1650  0578                     __ptext8:	
  1651 ;; *************** function ___aldiv *****************
  1652 ;; Defined at:
  1653 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  divisor         4    0[COMMON] long 
  1656 ;;  dividend        4    4[COMMON] long 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  quotient        4    2[BANK0 ] long 
  1659 ;;  sign            1    1[BANK0 ] unsigned char 
  1660 ;;  counter         1    0[BANK0 ] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  4    0[COMMON] long 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         8       0       0       0       0
  1671 ;;      Locals:         0       6       0       0       0
  1672 ;;      Temps:          1       0       0       0       0
  1673 ;;      Totals:         9       6       0       0       0
  1674 ;;Total ram usage:       15 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_UART_Init
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function ___aldiv
  1685  0578                     ___aldiv:	
  1686                           
  1687                           ;incstack = 0
  1688                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1689  0578  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0579  1303               	bcf	3,6	;RP1=0, select bank0
  1691  057A  01A1               	clrf	___aldiv@sign
  1692  057B  1FF3               	btfss	___aldiv@divisor+3,7
  1693  057C  2D8A               	goto	l290
  1694  057D  09F0               	comf	___aldiv@divisor,f
  1695  057E  09F1               	comf	___aldiv@divisor+1,f
  1696  057F  09F2               	comf	___aldiv@divisor+2,f
  1697  0580  09F3               	comf	___aldiv@divisor+3,f
  1698  0581  0AF0               	incf	___aldiv@divisor,f
  1699  0582  1903               	skipnz
  1700  0583  0AF1               	incf	___aldiv@divisor+1,f
  1701  0584  1903               	skipnz
  1702  0585  0AF2               	incf	___aldiv@divisor+2,f
  1703  0586  1903               	skipnz
  1704  0587  0AF3               	incf	___aldiv@divisor+3,f
  1705  0588  01A1               	clrf	___aldiv@sign
  1706  0589  0AA1               	incf	___aldiv@sign,f
  1707  058A                     l290:	
  1708  058A  1FF7               	btfss	___aldiv@dividend+3,7
  1709  058B  2D9B               	goto	l873
  1710  058C  09F4               	comf	___aldiv@dividend,f
  1711  058D  09F5               	comf	___aldiv@dividend+1,f
  1712  058E  09F6               	comf	___aldiv@dividend+2,f
  1713  058F  09F7               	comf	___aldiv@dividend+3,f
  1714  0590  0AF4               	incf	___aldiv@dividend,f
  1715  0591  1903               	skipnz
  1716  0592  0AF5               	incf	___aldiv@dividend+1,f
  1717  0593  1903               	skipnz
  1718  0594  0AF6               	incf	___aldiv@dividend+2,f
  1719  0595  1903               	skipnz
  1720  0596  0AF7               	incf	___aldiv@dividend+3,f
  1721  0597  3001               	movlw	1
  1722  0598  00F8               	movwf	??___aldiv
  1723  0599  0878               	movf	??___aldiv,w
  1724  059A  06A1               	xorwf	___aldiv@sign,f
  1725  059B                     l873:	
  1726  059B  3000               	movlw	0
  1727  059C  00A5               	movwf	___aldiv@quotient+3
  1728  059D  3000               	movlw	0
  1729  059E  00A4               	movwf	___aldiv@quotient+2
  1730  059F  3000               	movlw	0
  1731  05A0  00A3               	movwf	___aldiv@quotient+1
  1732  05A1  3000               	movlw	0
  1733  05A2  00A2               	movwf	___aldiv@quotient
  1734  05A3  0873               	movf	___aldiv@divisor+3,w
  1735  05A4  0472               	iorwf	___aldiv@divisor+2,w
  1736  05A5  0471               	iorwf	___aldiv@divisor+1,w
  1737  05A6  0470               	iorwf	___aldiv@divisor,w
  1738  05A7  1903               	skipnz
  1739  05A8  2DF0               	goto	l895
  1740  05A9  01A0               	clrf	___aldiv@counter
  1741  05AA  0AA0               	incf	___aldiv@counter,f
  1742  05AB                     l881:	
  1743  05AB  1BF3               	btfsc	___aldiv@divisor+3,7
  1744  05AC  2DBB               	goto	l883
  1745  05AD  3001               	movlw	1
  1746  05AE  00F8               	movwf	??___aldiv
  1747  05AF                     u525:	
  1748  05AF  1003               	clrc
  1749  05B0  0DF0               	rlf	___aldiv@divisor,f
  1750  05B1  0DF1               	rlf	___aldiv@divisor+1,f
  1751  05B2  0DF2               	rlf	___aldiv@divisor+2,f
  1752  05B3  0DF3               	rlf	___aldiv@divisor+3,f
  1753  05B4  0BF8               	decfsz	??___aldiv,f
  1754  05B5  2DAF               	goto	u525
  1755  05B6  3001               	movlw	1
  1756  05B7  00F8               	movwf	??___aldiv
  1757  05B8  0878               	movf	??___aldiv,w
  1758  05B9  07A0               	addwf	___aldiv@counter,f
  1759  05BA  2DAB               	goto	l881
  1760  05BB                     l883:	
  1761  05BB  3001               	movlw	1
  1762  05BC  00F8               	movwf	??___aldiv
  1763  05BD                     u545:	
  1764  05BD  1003               	clrc
  1765  05BE  0DA2               	rlf	___aldiv@quotient,f
  1766  05BF  0DA3               	rlf	___aldiv@quotient+1,f
  1767  05C0  0DA4               	rlf	___aldiv@quotient+2,f
  1768  05C1  0DA5               	rlf	___aldiv@quotient+3,f
  1769  05C2  0BF8               	decfsz	??___aldiv,f
  1770  05C3  2DBD               	goto	u545
  1771  05C4  0873               	movf	___aldiv@divisor+3,w
  1772  05C5  0277               	subwf	___aldiv@dividend+3,w
  1773  05C6  1D03               	skipz
  1774  05C7  2DD2               	goto	u555
  1775  05C8  0872               	movf	___aldiv@divisor+2,w
  1776  05C9  0276               	subwf	___aldiv@dividend+2,w
  1777  05CA  1D03               	skipz
  1778  05CB  2DD2               	goto	u555
  1779  05CC  0871               	movf	___aldiv@divisor+1,w
  1780  05CD  0275               	subwf	___aldiv@dividend+1,w
  1781  05CE  1D03               	skipz
  1782  05CF  2DD2               	goto	u555
  1783  05D0  0870               	movf	___aldiv@divisor,w
  1784  05D1  0274               	subwf	___aldiv@dividend,w
  1785  05D2                     u555:	
  1786  05D2  1C03               	skipc
  1787  05D3  2DE3               	goto	l891
  1788  05D4  0870               	movf	___aldiv@divisor,w
  1789  05D5  02F4               	subwf	___aldiv@dividend,f
  1790  05D6  0871               	movf	___aldiv@divisor+1,w
  1791  05D7  1C03               	skipc
  1792  05D8  0F71               	incfsz	___aldiv@divisor+1,w
  1793  05D9  02F5               	subwf	___aldiv@dividend+1,f
  1794  05DA  0872               	movf	___aldiv@divisor+2,w
  1795  05DB  1C03               	skipc
  1796  05DC  0F72               	incfsz	___aldiv@divisor+2,w
  1797  05DD  02F6               	subwf	___aldiv@dividend+2,f
  1798  05DE  0873               	movf	___aldiv@divisor+3,w
  1799  05DF  1C03               	skipc
  1800  05E0  0F73               	incfsz	___aldiv@divisor+3,w
  1801  05E1  02F7               	subwf	___aldiv@dividend+3,f
  1802  05E2  1422               	bsf	___aldiv@quotient,0
  1803  05E3                     l891:	
  1804  05E3  3001               	movlw	1
  1805  05E4                     u565:	
  1806  05E4  1003               	clrc
  1807  05E5  0CF3               	rrf	___aldiv@divisor+3,f
  1808  05E6  0CF2               	rrf	___aldiv@divisor+2,f
  1809  05E7  0CF1               	rrf	___aldiv@divisor+1,f
  1810  05E8  0CF0               	rrf	___aldiv@divisor,f
  1811  05E9  3EFF               	addlw	-1
  1812  05EA  1D03               	skipz
  1813  05EB  2DE4               	goto	u565
  1814  05EC  3001               	movlw	1
  1815  05ED  02A0               	subwf	___aldiv@counter,f
  1816  05EE  1D03               	btfss	3,2
  1817  05EF  2DBB               	goto	l883
  1818  05F0                     l895:	
  1819  05F0  0821               	movf	___aldiv@sign,w
  1820  05F1  1903               	btfsc	3,2
  1821  05F2  2DFE               	goto	l899
  1822  05F3  09A2               	comf	___aldiv@quotient,f
  1823  05F4  09A3               	comf	___aldiv@quotient+1,f
  1824  05F5  09A4               	comf	___aldiv@quotient+2,f
  1825  05F6  09A5               	comf	___aldiv@quotient+3,f
  1826  05F7  0AA2               	incf	___aldiv@quotient,f
  1827  05F8  1903               	skipnz
  1828  05F9  0AA3               	incf	___aldiv@quotient+1,f
  1829  05FA  1903               	skipnz
  1830  05FB  0AA4               	incf	___aldiv@quotient+2,f
  1831  05FC  1903               	skipnz
  1832  05FD  0AA5               	incf	___aldiv@quotient+3,f
  1833  05FE                     l899:	
  1834  05FE  0825               	movf	___aldiv@quotient+3,w
  1835  05FF  00F3               	movwf	?___aldiv+3
  1836  0600  0824               	movf	___aldiv@quotient+2,w
  1837  0601  00F2               	movwf	?___aldiv+2
  1838  0602  0823               	movf	___aldiv@quotient+1,w
  1839  0603  00F1               	movwf	?___aldiv+1
  1840  0604  0822               	movf	___aldiv@quotient,w
  1841  0605  00F0               	movwf	?___aldiv
  1842  0606  0008               	return
  1843  0607                     __end_of___aldiv:	
  1844  007E                     btemp	set	126	;btemp
  1845  007E                     wtemp	set	126
  1846  007E                     wtemp0	set	126
  1847  0080                     wtemp1	set	128
  1848  0082                     wtemp2	set	130
  1849  0084                     wtemp3	set	132
  1850  0086                     wtemp4	set	134
  1851  0088                     wtemp5	set	136
  1852  007F                     wtemp6	set	127
  1853  007E                     ttemp	set	126
  1854  007E                     ttemp0	set	126
  1855  0081                     ttemp1	set	129
  1856  0084                     ttemp2	set	132
  1857  0087                     ttemp3	set	135
  1858  007F                     ttemp4	set	127
  1859  007E                     ltemp	set	126
  1860  007E                     ltemp0	set	126
  1861  0082                     ltemp1	set	130
  1862  0086                     ltemp2	set	134
  1863  0080                     ltemp3	set	128


Data Sizes:
    Strings     182
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     37      59
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Read_Text@a	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_10(CODE[12]), 

    UART_Write_Text@text	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_10(CODE[12]), STR_9(CODE[17]), STR_8(CODE[7]), STR_7(CODE[25]), 
		 -> STR_6(CODE[24]), STR_5(CODE[17]), STR_4(CODE[19]), STR_3(CODE[20]), 
		 -> STR_2(CODE[17]), STR_1(CODE[24]), 

    sp__UART_Read_Text	PTR unsigned char  size(1) Largest target is 20
		 -> UART_Read_Text@string(BANK0[20]), 

    is	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), UART_Read_Text@string(BANK0[20]), 

    main@arr9	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_9(CODE[17]), 

    main@arr8	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_8(CODE[7]), 

    main@arr7	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_7(CODE[25]), 

    main@arr6	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_6(CODE[24]), 

    main@arr5	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[17]), 

    main@arr4	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_4(CODE[19]), 

    main@arr3	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[20]), 

    main@arr2	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 

    main@arr1	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _delay_ms->_delay1ms
    _UART_Read_Text->_UART_Write_Text
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    2186
                                             11 COMMON     2     2      0
                                             22 BANK0     15    15      0
                          _UART_Init
                     _UART_Read_Text
                         _UART_Write
                    _UART_Write_Text
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     197
                                              2 COMMON     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (2) _delay1ms                                             2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read_Text                                       4     4      0     474
                                              4 COMMON     4     4      0
                          _UART_Read
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      3     3      0     382
                                              1 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     743
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Read_Text
     _UART_Read
     _UART_Write_Text
       _UART_Write
   _UART_Write
   _UART_Write_Text
     _UART_Write
   _delay_ms
     _delay1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      48       3        0.0%
BITBANK0            50      0       1       4        1.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      3B       5       73.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      48      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Aug 13 21:59:13 2016

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l63 076C                        l59 0721                        l95 0501  
                      l98 0505                        _is 0045                        fsr 0004  
                     l116 04F2                       l290 058A                       l921 06DF  
                     l845 0530                       l881 05AB                       l873 059B  
                     l891 05E3                       l883 05BB                       l955 0554  
                     l957 056D                       l981 0744                       l895 05F0  
                     l899 05FE                       l997 0781                       _RB0 0030  
                     _RC3 003B                       u610 064D              __CFG_CPD$OFF 0000  
                     u611 064E                       u612 0653                       u525 05AF  
                     u613 0654                       u605 0633                       u720 0788  
                     u545 05BD                       u650 06B6                       u730 0789  
                     u555 05D2                       u651 06B7                       u635 067B  
                     u652 06BC                       u740 0792                       u565 05E4  
                     u653 06BD                       u645 069C                       u595 0612  
                     fsr0 0004                       indf 0000              __CFG_LVP$OFF 0000  
                    l1001 0795                      l1021 07DA                      l1007 079E  
                    l1027 07ED                      STR_1 0022                      STR_2 009B  
                    STR_3 0052                      STR_4 0066                      STR_5 008A  
                    STR_6 003A                      STR_7 0009                      STR_8 00B8  
                    STR_9 0079                      _BRGH 04C2                      _CREN 00C4  
                    _RCIF 0065                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _TXIF 0064                      _SYNC 04C4  
            __CFG_WRT$OFF 0000                      _main 06F4                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0000  
                    ttemp 007E                      wtemp 007E             __CFG_IESO$OFF 0000  
           __CFG_MCLRE$ON 0000   __end_of_UART_Write_Text 054F           __end_of___aldiv 0607  
                   ?_main 0070                     STR_10 00AC             __CFG_WDTE$OFF 0000  
                   _RCREG 001A                     _SPBRG 0099                     _TRISB 0086  
                   _TRISC 0087                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
             ?_UART_Write 0070        __size_of_UART_Init 00ED        __size_of_UART_Read 0006  
    UART_Read_Text@string 0046                     main@j 0040                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 07F4  
            __end_of_main 07F4                    ??_main 007B                    _INTCON 000B  
        __end_of_delay1ms 051D          __end_of_delay_ms 052D            __CFG_PWRTE$OFF 0000  
       __end_of_UART_Init 06F4         __end_of_UART_Read 04F8       __size_of_UART_Write 000E  
               ??___aldiv 0078          ?_UART_Write_Text 0070   __size_of_UART_Read_Text 0029  
                  main@no 0043   __end_of__initialization 07FC            __pcstackCOMMON 0070  
              __pbssBANK0 0045                __pmaintext 06F4                   _IC2_ack 02D0  
               ?_delay1ms 0070                 ?_delay_ms 0072              ??_UART_Write 0070  
                 _SSPCON2 0091                __stringtab 0003                   ___aldiv 0578  
      __end_of_UART_Write 050E            _UART_Read_Text 054F                   __ptext1 051D  
                 __ptext2 050E                   __ptext3 054F                   __ptext4 052D  
                 __ptext5 0500                   __ptext6 04F2                   __ptext7 0607  
                 __ptext8 0578                ??_delay1ms 0070          ___aldiv@dividend 0074  
              ??_delay_ms 0074                   clrloop0 04F9      end_of_initialization 07FC  
  __end_of_UART_Read_Text 0578          ___aldiv@quotient 0022                 _UART_Init 0607  
               _UART_Read 04F2            UART_Write@data 0070           ?_UART_Read_Text 0070  
              ?_UART_Init 0026                ?_UART_Read 0070             __pbitbssBANK0 02D0  
__size_of_UART_Write_Text 0022       start_initialization 07F4  __CFG_FOSC$INTRC_NOCLKOUT 0000  
               ___latbits 0002             __pcstackBANK0 0020         __size_of_delay1ms 000F  
       __size_of_delay_ms 0010                  ?___aldiv 0070               ??_UART_Init 002A  
             ??_UART_Read 0070                 __pstrings 0003                UART_Init@x 0079  
               delay1ms@j 0070         ??_UART_Write_Text 0071           ___aldiv@divisor 0070  
         ___aldiv@counter 0020                 delay_ms@i 0072           UART_Read_Text@a 0075  
         UART_Read_Text@i 0077           UART_Read_Text@x 0076                 clear_ram0 04F8  
                _PIR1bits 000C         UART_Init@baudrate 0026               __stringbase 0008  
        ??_UART_Read_Text 0074          __size_of___aldiv 008F        __end_of__stringtab 0009  
                _delay1ms 050E                  _delay_ms 051D         __CFG_BOR4V$BOR40V 0000  
     UART_Write_Text@text 0073             __size_of_main 0100            main@LED_Output 003F  
                main@arr1 0036                  main@arr2 0037                  main@arr3 0038  
                main@arr4 0039                  main@arr5 003A                  main@arr6 003B  
                main@arr7 003C                  main@arr8 003D                  main@arr9 003E  
           main@LED_Input 0042                 stringcode 0003                _OSCCONbits 008F  
         _UART_Write_Text 052D                  stringdir 0003                  stringtab 0003  
            ___aldiv@sign 0021                _UART_Write 0500          UART_Write_Text@i 0071  
