

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Jan 27 20:14:08 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  000E                     	;# 
    36  000F                     	;# 
    37  0010                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0014                     	;# 
    42  0015                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  0081                     	;# 
    56  0085                     	;# 
    57  0086                     	;# 
    58  0087                     	;# 
    59  0089                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0093                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0097                     	;# 
    74  0098                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009E                     	;# 
    81  009F                     	;# 
    82  0105                     	;# 
    83  0107                     	;# 
    84  0108                     	;# 
    85  0109                     	;# 
    86  010C                     	;# 
    87  010C                     	;# 
    88  010D                     	;# 
    89  010E                     	;# 
    90  010F                     	;# 
    91  0185                     	;# 
    92  0187                     	;# 
    93  0188                     	;# 
    94  0189                     	;# 
    95  018C                     	;# 
    96  018D                     	;# 
    97  000B                     _INTCON	set	11
    98  000C                     _PIR1bits	set	12
    99  001A                     _RCREG	set	26
   100  0019                     _TXREG	set	25
   101  00C4                     _CREN	set	196
   102  0030                     _RB0	set	48
   103  0065                     _RCIF	set	101
   104  00C7                     _SPEN	set	199
   105  0064                     _TXIF	set	100
   106  008F                     _OSCCONbits	set	143
   107  0099                     _SPBRG	set	153
   108  0091                     _SSPCON2	set	145
   109  0094                     _SSPSTATbits	set	148
   110  0086                     _TRISB	set	134
   111  04C2                     _BRGH	set	1218
   112  04C4                     _SYNC	set	1220
   113  04C1                     _TRMT	set	1217
   114  04C5                     _TXEN	set	1221
   115                           
   116                           	psect	strings
   117  0003                     __pstrings:	
   118  0003                     stringtab:	
   119  0003                     __stringtab:	
   120                           
   121                           ;	String table - string pointers are 1 byte each
   122  0003  1BFF               	btfsc	btemp+1,7
   123  0004  280D               	ljmp	stringcode
   124  0005  1383               	bcf	3,7
   125  0006  187F               	btfsc	btemp+1,0
   126  0007  1783               	bsf	3,7
   127  0008  0800               	movf	0,w
   128  0009  0A84               	incf	4,f
   129  000A  1903               	skipnz
   130  000B  0AFF               	incf	btemp+1,f
   131  000C  0008               	return
   132  000D                     stringcode:	
   133  000D                     stringdir:	
   134  000D  3000               	movlw	high stringdir
   135  000E  008A               	movwf	10
   136  000F  0804               	movf	4,w
   137  0010  0A84               	incf	4,f
   138  0011  0782               	addwf	2,f
   139  0012                     __stringbase:	
   140  0012  3400               	retlw	0
   141  0013                     __end_of__stringtab:	
   142  0013                     STR_7:	
   143  0013  3454               	retlw	84	;'T'
   144  0014  3478               	retlw	120	;'x'
   145  0015  3420               	retlw	32	;' '
   146  0016  3463               	retlw	99	;'c'
   147  0017  346F               	retlw	111	;'o'
   148  0018  346D               	retlw	109	;'m'
   149  0019  3470               	retlw	112	;'p'
   150  001A  346C               	retlw	108	;'l'
   151  001B  3465               	retlw	101	;'e'
   152  001C  3474               	retlw	116	;'t'
   153  001D  3465               	retlw	101	;'e'
   154  001E  3464               	retlw	100	;'d'
   155  001F  3420               	retlw	32	;' '
   156  0020  3461               	retlw	97	;'a'
   157  0021  346C               	retlw	108	;'l'
   158  0022  346C               	retlw	108	;'l'
   159  0023  3420               	retlw	32	;' '
   160  0024  3462               	retlw	98	;'b'
   161  0025  3479               	retlw	121	;'y'
   162  0026  3474               	retlw	116	;'t'
   163  0027  3465               	retlw	101	;'e'
   164  0028  3473               	retlw	115	;'s'
   165  0029  340D               	retlw	13
   166  002A  340A               	retlw	10
   167  002B  3400               	retlw	0
   168  002C                     STR_1:	
   169  002C  340D               	retlw	13
   170  002D  340A               	retlw	10
   171  002E  3474               	retlw	116	;'t'
   172  002F  3461               	retlw	97	;'a'
   173  0030  346B               	retlw	107	;'k'
   174  0031  3469               	retlw	105	;'i'
   175  0032  346E               	retlw	110	;'n'
   176  0033  3467               	retlw	103	;'g'
   177  0034  3420               	retlw	32	;' '
   178  0035  3469               	retlw	105	;'i'
   179  0036  346E               	retlw	110	;'n'
   180  0037  3420               	retlw	32	;' '
   181  0038  3474               	retlw	116	;'t'
   182  0039  3468               	retlw	104	;'h'
   183  003A  3465               	retlw	101	;'e'
   184  003B  3420               	retlw	32	;' '
   185  003C  3474               	retlw	116	;'t'
   186  003D  3465               	retlw	101	;'e'
   187  003E  3478               	retlw	120	;'x'
   188  003F  3474               	retlw	116	;'t'
   189  0040  3420               	retlw	32	;' '
   190  0041  340D               	retlw	13
   191  0042  340A               	retlw	10
   192  0043  3400               	retlw	0
   193  0044                     STR_6:	
   194  0044  3454               	retlw	84	;'T'
   195  0045  3478               	retlw	120	;'x'
   196  0046  3420               	retlw	32	;' '
   197  0047  346F               	retlw	111	;'o'
   198  0048  3466               	retlw	102	;'f'
   199  0049  3420               	retlw	32	;' '
   200  004A  3431               	retlw	49	;'1'
   201  004B  3420               	retlw	32	;' '
   202  004C  3462               	retlw	98	;'b'
   203  004D  3479               	retlw	121	;'y'
   204  004E  3474               	retlw	116	;'t'
   205  004F  3465               	retlw	101	;'e'
   206  0050  3420               	retlw	32	;' '
   207  0051  3463               	retlw	99	;'c'
   208  0052  346F               	retlw	111	;'o'
   209  0053  346D               	retlw	109	;'m'
   210  0054  3470               	retlw	112	;'p'
   211  0055  346C               	retlw	108	;'l'
   212  0056  3465               	retlw	101	;'e'
   213  0057  3474               	retlw	116	;'t'
   214  0058  3465               	retlw	101	;'e'
   215  0059  340D               	retlw	13
   216  005A  340A               	retlw	10
   217  005B  3400               	retlw	0
   218  005C                     STR_3:	
   219  005C  3459               	retlw	89	;'Y'
   220  005D  346F               	retlw	111	;'o'
   221  005E  3475               	retlw	117	;'u'
   222  005F  3420               	retlw	32	;' '
   223  0060  3468               	retlw	104	;'h'
   224  0061  3461               	retlw	97	;'a'
   225  0062  3476               	retlw	118	;'v'
   226  0063  3465               	retlw	101	;'e'
   227  0064  3420               	retlw	32	;' '
   228  0065  3465               	retlw	101	;'e'
   229  0066  346E               	retlw	110	;'n'
   230  0067  3474               	retlw	116	;'t'
   231  0068  3465               	retlw	101	;'e'
   232  0069  3472               	retlw	114	;'r'
   233  006A  3465               	retlw	101	;'e'
   234  006B  3464               	retlw	100	;'d'
   235  006C  343A               	retlw	58	;':'
   236  006D  340D               	retlw	13
   237  006E  340A               	retlw	10
   238  006F  3400               	retlw	0
   239  0070                     STR_4:	
   240  0070  3455               	retlw	85	;'U'
   241  0071  3441               	retlw	65	;'A'
   242  0072  3452               	retlw	82	;'R'
   243  0073  3454               	retlw	84	;'T'
   244  0074  3420               	retlw	32	;' '
   245  0075  3449               	retlw	73	;'I'
   246  0076  346E               	retlw	110	;'n'
   247  0077  3469               	retlw	105	;'i'
   248  0078  3474               	retlw	116	;'t'
   249  0079  3469               	retlw	105	;'i'
   250  007A  3461               	retlw	97	;'a'
   251  007B  346C               	retlw	108	;'l'
   252  007C  3469               	retlw	105	;'i'
   253  007D  3473               	retlw	115	;'s'
   254  007E  3465               	retlw	101	;'e'
   255  007F  3464               	retlw	100	;'d'
   256  0080  340D               	retlw	13
   257  0081  340A               	retlw	10
   258  0082  3400               	retlw	0
   259  0083                     STR_5:	
   260  0083  3453               	retlw	83	;'S'
   261  0084  3465               	retlw	101	;'e'
   262  0085  346E               	retlw	110	;'n'
   263  0086  3464               	retlw	100	;'d'
   264  0087  3469               	retlw	105	;'i'
   265  0088  346E               	retlw	110	;'n'
   266  0089  3467               	retlw	103	;'g'
   267  008A  3420               	retlw	32	;' '
   268  008B  3454               	retlw	84	;'T'
   269  008C  344F               	retlw	79	;'O'
   270  008D  3420               	retlw	32	;' '
   271  008E  344C               	retlw	76	;'L'
   272  008F  3465               	retlw	101	;'e'
   273  0090  3464               	retlw	100	;'d'
   274  0091  340D               	retlw	13
   275  0092  340A               	retlw	10
   276  0093  3400               	retlw	0
   277  0094                     STR_2:	
   278  0094  340D               	retlw	13
   279  0095  340A               	retlw	10
   280  0096  3441               	retlw	65	;'A'
   281  0097  3463               	retlw	99	;'c'
   282  0098  346B               	retlw	107	;'k'
   283  0099  346E               	retlw	110	;'n'
   284  009A  346F               	retlw	111	;'o'
   285  009B  3477               	retlw	119	;'w'
   286  009C  346C               	retlw	108	;'l'
   287  009D  3465               	retlw	101	;'e'
   288  009E  3464               	retlw	100	;'d'
   289  009F  3467               	retlw	103	;'g'
   290  00A0  3465               	retlw	101	;'e'
   291  00A1  3464               	retlw	100	;'d'
   292  00A2  340D               	retlw	13
   293  00A3  340A               	retlw	10
   294  00A4  3400               	retlw	0
   295  00A5                     STR_8:	
   296  00A5  344B               	retlw	75	;'K'
   297  00A6  3465               	retlw	101	;'e'
   298  00A7  3479               	retlw	121	;'y'
   299  00A8  3465               	retlw	101	;'e'
   300  00A9  3464               	retlw	100	;'d'
   301  00AA  3420               	retlw	32	;' '
   302  00AB  3469               	retlw	105	;'i'
   303  00AC  346E               	retlw	110	;'n'
   304  00AD  3420               	retlw	32	;' '
   305  00AE  340D               	retlw	13
   306  00AF  340A               	retlw	10
   307  00B0  3400               	retlw	0
   308                           
   309                           ; #config settings
   310  0000                     
   311                           	psect	cinit
   312  07F4                     start_initialization:	
   313  07F4                     __initialization:	
   314                           
   315                           ; Clear objects allocated to BITBANK0
   316  07F4  01D5               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   317                           
   318                           ; Clear objects allocated to BANK0
   319  07F5  1383               	bcf	3,7	;select IRP bank0
   320  07F6  3040               	movlw	low __pbssBANK0
   321  07F7  0084               	movwf	4
   322  07F8  3055               	movlw	low (__pbssBANK0+21)
   323  07F9  120A  118A  24E9   	fcall	clear_ram0
   324  07FC                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  07FC                     __end_of__initialization:	
   328  07FC  0183               	clrf	3
   329  07FD  120A  118A  2F05   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bitbssBANK0
   332  02A8                     __pbitbssBANK0:	
   333  02A8                     _IC2_ack:	
   334  02A8                     	ds	1
   335                           
   336                           	psect	bssBANK0
   337  0040                     __pbssBANK0:	
   338  0040                     _is:	
   339  0040                     	ds	1
   340  0041                     UART_Read_Text@string:	
   341  0041                     	ds	20
   342                           
   343                           	psect	clrtext
   344  04E9                     clear_ram0:	
   345                           ;	Called with FSR containing the base address, and
   346                           ;	W with the last address+1
   347                           
   348  04E9  0064               	clrwdt	;clear the watchdog before getting into this loop
   349  04EA                     clrloop0:	
   350  04EA  0180               	clrf	0	;clear RAM location pointed to by FSR
   351  04EB  0A84               	incf	4,f	;increment pointer
   352  04EC  0604               	xorwf	4,w	;XOR with final address
   353  04ED  1903               	btfsc	3,2	;have we reached the end yet?
   354  04EE  3400               	retlw	0	;all done for this memory range, return
   355  04EF  0604               	xorwf	4,w	;XOR again to restore value
   356  04F0  2CEA               	goto	clrloop0	;do the next byte
   357                           
   358                           	psect	cstackCOMMON
   359  0070                     __pcstackCOMMON:	
   360  0070                     ?_delay1ms:	
   361  0070                     ??_delay1ms:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_main:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?_UART_Write:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ??_UART_Write:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ??_UART_Read:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_UART_Read_Text:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0070                     ?_UART_Read:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?___aldiv:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     UART_Write@data:	
   386                           ; 4 bytes @ 0x0
   387                           
   388  0070                     delay1ms@j:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ___aldiv@divisor:	
   392                           ; 2 bytes @ 0x0
   393                           
   394                           
   395                           ; 4 bytes @ 0x0
   396  0070                     	ds	1
   397  0071                     ?_UART_Write_Text:	
   398  0071                     UART_Write_Text@text:	
   399                           ; 0 bytes @ 0x1
   400                           
   401                           
   402                           ; 2 bytes @ 0x1
   403  0071                     	ds	1
   404  0072                     ?_delay_ms:	
   405  0072                     delay_ms@i:	
   406                           ; 0 bytes @ 0x2
   407                           
   408                           
   409                           ; 2 bytes @ 0x2
   410  0072                     	ds	1
   411  0073                     ??_UART_Write_Text:	
   412                           
   413                           ; 0 bytes @ 0x3
   414  0073                     	ds	1
   415  0074                     ??_delay_ms:	
   416  0074                     ___aldiv@dividend:	
   417                           ; 0 bytes @ 0x4
   418                           
   419                           
   420                           ; 4 bytes @ 0x4
   421  0074                     	ds	2
   422  0076                     UART_Write_Text@i:	
   423                           
   424                           ; 2 bytes @ 0x6
   425  0076                     	ds	2
   426  0078                     ??_UART_Read_Text:	
   427  0078                     ??___aldiv:	
   428                           ; 0 bytes @ 0x8
   429                           
   430                           
   431                           ; 0 bytes @ 0x8
   432  0078                     	ds	1
   433  0079                     UART_Read_Text@a:	
   434  0079                     UART_Init@x:	
   435                           ; 1 bytes @ 0x9
   436                           
   437                           
   438                           ; 2 bytes @ 0x9
   439  0079                     	ds	1
   440  007A                     UART_Read_Text@x:	
   441                           
   442                           ; 1 bytes @ 0xA
   443  007A                     	ds	1
   444  007B                     UART_Read_Text@i:	
   445                           
   446                           ; 1 bytes @ 0xB
   447  007B                     	ds	1
   448  007C                     ??_main:	
   449                           
   450                           ; 0 bytes @ 0xC
   451  007C                     	ds	2
   452                           
   453                           	psect	cstackBANK0
   454  0020                     __pcstackBANK0:	
   455  0020                     ___aldiv@counter:	
   456                           
   457                           ; 1 bytes @ 0x0
   458  0020                     	ds	1
   459  0021                     ___aldiv@sign:	
   460                           
   461                           ; 1 bytes @ 0x1
   462  0021                     	ds	1
   463  0022                     ___aldiv@quotient:	
   464                           
   465                           ; 4 bytes @ 0x2
   466  0022                     	ds	4
   467  0026                     ?_UART_Init:	
   468  0026                     UART_Init@baudrate:	
   469                           ; 1 bytes @ 0x6
   470                           
   471                           
   472                           ; 4 bytes @ 0x6
   473  0026                     	ds	4
   474  002A                     ??_UART_Init:	
   475                           
   476                           ; 0 bytes @ 0xA
   477  002A                     	ds	12
   478  0036                     main@arr1:	
   479                           
   480                           ; 1 bytes @ 0x16
   481  0036                     	ds	1
   482  0037                     main@arr2:	
   483                           
   484                           ; 1 bytes @ 0x17
   485  0037                     	ds	1
   486  0038                     main@arr3:	
   487                           
   488                           ; 1 bytes @ 0x18
   489  0038                     	ds	1
   490  0039                     main@arr4:	
   491                           
   492                           ; 1 bytes @ 0x19
   493  0039                     	ds	1
   494  003A                     main@arr5:	
   495                           
   496                           ; 1 bytes @ 0x1A
   497  003A                     	ds	1
   498  003B                     main@arr6:	
   499                           
   500                           ; 1 bytes @ 0x1B
   501  003B                     	ds	1
   502  003C                     main@arr7:	
   503                           
   504                           ; 1 bytes @ 0x1C
   505  003C                     	ds	1
   506  003D                     main@LED_Output:	
   507                           
   508                           ; 1 bytes @ 0x1D
   509  003D                     	ds	1
   510  003E                     main@j:	
   511                           
   512                           ; 2 bytes @ 0x1E
   513  003E                     	ds	2
   514                           
   515                           	psect	maintext
   516  0705                     __pmaintext:	
   517 ;;
   518 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   519 ;;
   520 ;; *************** function _main *****************
   521 ;; Defined at:
   522 ;;		line 75 in file "Lifitrial1.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  j               2   30[BANK0 ] unsigned int 
   527 ;;  LED_Output      1   29[BANK0 ] unsigned char 
   528 ;;  arr7            1   28[BANK0 ] PTR const unsigned char 
   529 ;;		 -> STR_7(25), 
   530 ;;  arr6            1   27[BANK0 ] PTR const unsigned char 
   531 ;;		 -> STR_6(24), 
   532 ;;  arr5            1   26[BANK0 ] PTR const unsigned char 
   533 ;;		 -> STR_5(17), 
   534 ;;  arr4            1   25[BANK0 ] PTR const unsigned char 
   535 ;;		 -> STR_4(19), 
   536 ;;  arr3            1   24[BANK0 ] PTR const unsigned char 
   537 ;;		 -> STR_3(20), 
   538 ;;  arr2            1   23[BANK0 ] PTR const unsigned char 
   539 ;;		 -> STR_2(17), 
   540 ;;  arr1            1   22[BANK0 ] PTR const unsigned char 
   541 ;;		 -> STR_1(24), 
   542 ;; Return value:  Size  Location     Type
   543 ;;		None               void
   544 ;; Registers used:
   545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : B00/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   551 ;;      Params:         0       0       0       0       0
   552 ;;      Locals:         0      10       0       0       0
   553 ;;      Temps:          2       0       0       0       0
   554 ;;      Totals:         2      10       0       0       0
   555 ;;Total ram usage:       12 bytes
   556 ;; Hardware stack levels required when called:    3
   557 ;; This function calls:
   558 ;;		_UART_Init
   559 ;;		_UART_Read_Text
   560 ;;		_UART_Write_Text
   561 ;;		_delay_ms
   562 ;; This function is called by:
   563 ;;		Startup code after reset
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _main
   569  0705                     _main:	
   570                           
   571                           ;Lifitrial1.c: 79: const unsigned char * arr1 = "\r\ntaking in the text \r\n";
   572                           
   573                           ;incstack = 0
   574                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   575  0705  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   576  0706  00FC               	movwf	??_main
   577  0707  087C               	movf	??_main,w
   578  0708  1283               	bcf	3,5	;RP0=0, select bank0
   579  0709  1303               	bcf	3,6	;RP1=0, select bank0
   580  070A  00B6               	movwf	main@arr1
   581                           
   582                           ;Lifitrial1.c: 81: const unsigned char *arr2="\r\nAcknowledged\r\n";
   583  070B  3082               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   584  070C  00FC               	movwf	??_main
   585  070D  087C               	movf	??_main,w
   586  070E  00B7               	movwf	main@arr2
   587                           
   588                           ;Lifitrial1.c: 83: const unsigned char *arr3= "You have entered:\r\n";
   589  070F  304A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   590  0710  00FC               	movwf	??_main
   591  0711  087C               	movf	??_main,w
   592  0712  00B8               	movwf	main@arr3
   593                           
   594                           ;Lifitrial1.c: 85: const unsigned char *arr4= "UART Initialised\r\n";
   595  0713  305E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   596  0714  00FC               	movwf	??_main
   597  0715  087C               	movf	??_main,w
   598  0716  00B9               	movwf	main@arr4
   599                           
   600                           ;Lifitrial1.c: 87: const unsigned char *arr5= "Sending TO Led\r\n";
   601  0717  3071               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   602  0718  00FC               	movwf	??_main
   603  0719  087C               	movf	??_main,w
   604  071A  00BA               	movwf	main@arr5
   605                           
   606                           ;Lifitrial1.c: 89: const unsigned char *arr6= "Tx of 1 byte complete\r\n";
   607  071B  3032               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   608  071C  00FC               	movwf	??_main
   609  071D  087C               	movf	??_main,w
   610  071E  00BB               	movwf	main@arr6
   611                           
   612                           ;Lifitrial1.c: 91: const unsigned char *arr7= "Tx completed all bytes\r\n";
   613  071F  3001               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   614  0720  00FC               	movwf	??_main
   615  0721  087C               	movf	??_main,w
   616  0722  00BC               	movwf	main@arr7
   617                           
   618                           ;Lifitrial1.c: 93: unsigned int j;
   619                           ;Lifitrial1.c: 95: unsigned char LED_Output;
   620                           ;Lifitrial1.c: 97: TRISB=0x00;
   621  0723  1683               	bsf	3,5	;RP0=1, select bank1
   622  0724  1303               	bcf	3,6	;RP1=0, select bank1
   623  0725  0186               	clrf	6	;volatile
   624                           
   625                           ;Lifitrial1.c: 100: OSCCONbits.IRCF = 0x07;
   626  0726  3070               	movlw	112
   627  0727  048F               	iorwf	15,f	;volatile
   628  0728                     l53:	
   629                           ;Lifitrial1.c: 102: while(!OSCCONbits.HTS);
   630                           
   631  0728  1D0F               	btfss	15,2	;volatile
   632  0729  2F28               	goto	l53
   633                           
   634                           ;Lifitrial1.c: 104: INTCON=0;
   635  072A  018B               	clrf	11	;volatile
   636                           
   637                           ;Lifitrial1.c: 106: UART_Init(9600);
   638  072B  3000               	movlw	0
   639  072C  1283               	bcf	3,5	;RP0=0, select bank0
   640  072D  1303               	bcf	3,6	;RP1=0, select bank0
   641  072E  00A9               	movwf	UART_Init@baudrate+3
   642  072F  3000               	movlw	0
   643  0730  00A8               	movwf	UART_Init@baudrate+2
   644  0731  3025               	movlw	37
   645  0732  00A7               	movwf	UART_Init@baudrate+1
   646  0733  3080               	movlw	128
   647  0734  00A6               	movwf	UART_Init@baudrate
   648  0735  120A  118A  2618  120A  118A  	fcall	_UART_Init
   649                           
   650                           ;Lifitrial1.c: 108: UART_Write_Text(arr4);
   651  073A  1283               	bcf	3,5	;RP0=0, select bank0
   652  073B  1303               	bcf	3,6	;RP1=0, select bank0
   653  073C  0839               	movf	main@arr4,w
   654  073D  00F1               	movwf	UART_Write_Text@text
   655  073E  3000               	movlw	0
   656  073F  1D03               	btfss	3,2
   657  0740  3080               	movlw	128
   658  0741  00F2               	movwf	UART_Write_Text@text+1
   659  0742  120A  118A  254C  120A  118A  	fcall	_UART_Write_Text
   660                           
   661                           ;Lifitrial1.c: 110: delay_ms(500);
   662  0747  30F4               	movlw	244
   663  0748  00F2               	movwf	delay_ms@i
   664  0749  3001               	movlw	1
   665  074A  00F3               	movwf	delay_ms@i+1
   666  074B  120A  118A  250E  120A  118A  	fcall	_delay_ms
   667  0750                     l959:	
   668                           ;Lifitrial1.c: 112: while(1)
   669                           
   670                           
   671                           ;Lifitrial1.c: 113: {
   672                           ;Lifitrial1.c: 116: UART_Write_Text(arr1);
   673  0750  1283               	bcf	3,5	;RP0=0, select bank0
   674  0751  1303               	bcf	3,6	;RP1=0, select bank0
   675  0752  0836               	movf	main@arr1,w
   676  0753  00F1               	movwf	UART_Write_Text@text
   677  0754  3000               	movlw	0
   678  0755  1D03               	btfss	3,2
   679  0756  3080               	movlw	128
   680  0757  00F2               	movwf	UART_Write_Text@text+1
   681  0758  120A  118A  254C  120A  118A  	fcall	_UART_Write_Text
   682                           
   683                           ;Lifitrial1.c: 118: is=UART_Read_Text();
   684  075D  120A  118A  251E  120A  118A  	fcall	_UART_Read_Text
   685  0762  00FC               	movwf	??_main
   686  0763  087C               	movf	??_main,w
   687  0764  1283               	bcf	3,5	;RP0=0, select bank0
   688  0765  1303               	bcf	3,6	;RP1=0, select bank0
   689  0766  00C0               	movwf	_is
   690                           
   691                           ;Lifitrial1.c: 120: UART_Write_Text(arr2);
   692  0767  0837               	movf	main@arr2,w
   693  0768  00F1               	movwf	UART_Write_Text@text
   694  0769  3000               	movlw	0
   695  076A  1D03               	btfss	3,2
   696  076B  3080               	movlw	128
   697  076C  00F2               	movwf	UART_Write_Text@text+1
   698  076D  120A  118A  254C  120A  118A  	fcall	_UART_Write_Text
   699                           
   700                           ;Lifitrial1.c: 122: UART_Write_Text(arr3);
   701  0772  1283               	bcf	3,5	;RP0=0, select bank0
   702  0773  1303               	bcf	3,6	;RP1=0, select bank0
   703  0774  0838               	movf	main@arr3,w
   704  0775  00F1               	movwf	UART_Write_Text@text
   705  0776  3000               	movlw	0
   706  0777  1D03               	btfss	3,2
   707  0778  3080               	movlw	128
   708  0779  00F2               	movwf	UART_Write_Text@text+1
   709  077A  120A  118A  254C  120A  118A  	fcall	_UART_Write_Text
   710                           
   711                           ;Lifitrial1.c: 124: UART_Write_Text(is);
   712  077F  1283               	bcf	3,5	;RP0=0, select bank0
   713  0780  1303               	bcf	3,6	;RP1=0, select bank0
   714  0781  0840               	movf	_is,w
   715  0782  00F1               	movwf	UART_Write_Text@text
   716  0783  3000               	movlw	0
   717  0784  00F2               	movwf	UART_Write_Text@text+1
   718  0785  120A  118A  254C  120A  118A  	fcall	_UART_Write_Text
   719                           
   720                           ;Lifitrial1.c: 126: UART_Write_Text(arr5);
   721  078A  1283               	bcf	3,5	;RP0=0, select bank0
   722  078B  1303               	bcf	3,6	;RP1=0, select bank0
   723  078C  083A               	movf	main@arr5,w
   724  078D                     L1:	
   725  078D  00F1               	movwf	UART_Write_Text@text
   726  078E  3000               	movlw	0
   727  078F  1D03               	btfss	3,2
   728  0790  3080               	movlw	128
   729  0791  00F2               	movwf	UART_Write_Text@text+1
   730  0792  120A  118A  254C  120A  118A  	fcall	_UART_Write_Text
   731                           
   732                           ;Lifitrial1.c: 128: while(*is)
   733  0797  1283               	bcf	3,5	;RP0=0, select bank0
   734  0798  1303               	bcf	3,6	;RP1=0, select bank0
   735  0799  0840               	movf	_is,w
   736  079A  0084               	movwf	4
   737  079B  1383               	bcf	3,7	;select IRP bank0
   738  079C  0800               	movf	0,w
   739  079D  1903               	btfsc	3,2
   740  079E  2FE8               	goto	l995
   741                           
   742                           ;Lifitrial1.c: 129: {
   743                           ;Lifitrial1.c: 130: for(j=0;j<=7;j++)
   744  079F  1283               	bcf	3,5	;RP0=0, select bank0
   745  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   746  07A1  01BE               	clrf	main@j
   747  07A2  01BF               	clrf	main@j+1
   748  07A3  3000               	movlw	0
   749  07A4  023F               	subwf	main@j+1,w
   750  07A5  3008               	movlw	8
   751  07A6  1903               	skipnz
   752  07A7  023E               	subwf	main@j,w
   753  07A8  1803               	btfsc	3,0
   754  07A9  2FE2               	goto	l989
   755  07AA                     l977:	
   756                           
   757                           ;Lifitrial1.c: 131: {
   758                           ;Lifitrial1.c: 132: LED_Output= (*is&0x01)==1?1:0;
   759  07AA  0840               	movf	_is,w
   760  07AB  0084               	movwf	4
   761  07AC  1383               	bcf	3,7	;select IRP bank0
   762  07AD  1C00               	btfss	0,0
   763  07AE  2FB1               	goto	u750
   764  07AF  3001               	movlw	1
   765  07B0  2FB2               	goto	u760
   766  07B1                     u750:	
   767  07B1  3000               	movlw	0
   768  07B2                     u760:	
   769  07B2  00FC               	movwf	??_main
   770  07B3  087C               	movf	??_main,w
   771  07B4  00BD               	movwf	main@LED_Output
   772                           
   773                           ;Lifitrial1.c: 133: RB0=LED_Output;
   774  07B5  1C3D               	btfss	main@LED_Output,0
   775  07B6  2FBB               	goto	u770
   776  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   777  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   778  07B9  1406               	bsf	6,0	;volatile
   779  07BA  2FBE               	goto	l981
   780  07BB                     u770:	
   781  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   782  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   783  07BD  1006               	bcf	6,0	;volatile
   784  07BE                     l981:	
   785                           
   786                           ;Lifitrial1.c: 134: delay_ms(125);
   787  07BE  307D               	movlw	125
   788  07BF  00F2               	movwf	delay_ms@i
   789  07C0  3000               	movlw	0
   790  07C1  00F3               	movwf	delay_ms@i+1
   791  07C2  120A  118A  250E  120A  118A  	fcall	_delay_ms
   792                           
   793                           ;Lifitrial1.c: 135: *is=*is>>1;
   794  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   795  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   796  07C9  0840               	movf	_is,w
   797  07CA  0084               	movwf	4
   798  07CB  1383               	bcf	3,7	;select IRP bank0
   799  07CC  0800               	movf	0,w
   800  07CD  00FC               	movwf	??_main
   801  07CE  1003               	clrc
   802  07CF  0C7C               	rrf	??_main,w
   803  07D0  00FD               	movwf	??_main+1
   804  07D1  0840               	movf	_is,w
   805  07D2  0084               	movwf	4
   806  07D3  087D               	movf	??_main+1,w
   807  07D4  0080               	movwf	0
   808  07D5  3001               	movlw	1
   809  07D6  07BE               	addwf	main@j,f
   810  07D7  1803               	skipnc
   811  07D8  0ABF               	incf	main@j+1,f
   812  07D9  3000               	movlw	0
   813  07DA  07BF               	addwf	main@j+1,f
   814  07DB  3000               	movlw	0
   815  07DC  023F               	subwf	main@j+1,w
   816  07DD  3008               	movlw	8
   817  07DE  1903               	skipnz
   818  07DF  023E               	subwf	main@j,w
   819  07E0  1C03               	skipc
   820  07E1  2FAA               	goto	l977
   821  07E2                     l989:	
   822                           
   823                           ;Lifitrial1.c: 136: }
   824                           ;Lifitrial1.c: 137: is++;
   825  07E2  3001               	movlw	1
   826  07E3  00FC               	movwf	??_main
   827  07E4  087C               	movf	??_main,w
   828  07E5  07C0               	addwf	_is,f
   829                           
   830                           ;Lifitrial1.c: 138: UART_Write_Text(arr6);
   831  07E6  083B               	movf	main@arr6,w
   832  07E7  2F8D               	goto	L1
   833  07E8                     l995:	
   834                           
   835                           ;Lifitrial1.c: 139: }
   836                           ;Lifitrial1.c: 140: UART_Write_Text(arr7);
   837  07E8  083C               	movf	main@arr7,w
   838  07E9  00F1               	movwf	UART_Write_Text@text
   839  07EA  3000               	movlw	0
   840  07EB  1D03               	btfss	3,2
   841  07EC  3080               	movlw	128
   842  07ED  00F2               	movwf	UART_Write_Text@text+1
   843  07EE  120A  118A  254C  120A  118A  	fcall	_UART_Write_Text
   844  07F3  2F50               	goto	l959
   845  07F4                     __end_of_main:	
   846                           
   847                           	psect	text1
   848  050E                     __ptext1:	
   849 ;; *************** function _delay_ms *****************
   850 ;; Defined at:
   851 ;;		line 162 in file "Lifitrial1.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  i               2    2[COMMON] unsigned int 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;		None               void
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0, pclath, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         2       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0
   868 ;;      Totals:         2       0       0       0       0
   869 ;;Total ram usage:        2 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    1
   872 ;; This function calls:
   873 ;;		_delay1ms
   874 ;; This function is called by:
   875 ;;		_main
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           
   880                           ;psect for function _delay_ms
   881  050E                     _delay_ms:	
   882                           
   883                           ;Lifitrial1.c: 164: for(;i!=0x00;i--)
   884                           
   885                           ;incstack = 0
   886                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
   887  050E  0872               	movf	delay_ms@i,w
   888  050F  0473               	iorwf	delay_ms@i+1,w
   889  0510  1903               	btfsc	3,2
   890  0511  0008               	return
   891                           
   892                           ;Lifitrial1.c: 165: delay1ms();
   893  0512  120A  118A  24FF  120A  118A  	fcall	_delay1ms
   894  0517  3001               	movlw	1
   895  0518  02F2               	subwf	delay_ms@i,f
   896  0519  3000               	movlw	0
   897  051A  1C03               	skipc
   898  051B  03F3               	decf	delay_ms@i+1,f
   899  051C  02F3               	subwf	delay_ms@i+1,f
   900  051D  2D0E               	goto	_delay_ms
   901  051E                     __end_of_delay_ms:	
   902                           
   903                           	psect	text2
   904  04FF                     __ptext2:	
   905 ;; *************** function _delay1ms *****************
   906 ;; Defined at:
   907 ;;		line 168 in file "Lifitrial1.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  j               2    0[COMMON] unsigned int 
   912 ;; Return value:  Size  Location     Type
   913 ;;		None               void
   914 ;; Registers used:
   915 ;;		wreg, status,2, status,0
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         0       0       0       0       0
   922 ;;      Locals:         2       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0
   924 ;;      Totals:         2       0       0       0       0
   925 ;;Total ram usage:        2 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_delay_ms
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _delay1ms
   936  04FF                     _delay1ms:	
   937                           
   938                           ;Lifitrial1.c: 170: unsigned int j = 130;
   939                           
   940                           ;incstack = 0
   941                           ; Regs used in _delay1ms: [wreg+status,2+status,0]
   942  04FF  3082               	movlw	130
   943  0500  00F0               	movwf	delay1ms@j
   944  0501  3000               	movlw	0
   945  0502  00F1               	movwf	delay1ms@j+1
   946  0503                     L2:	
   947                           
   948                           ;Lifitrial1.c: 171: for (;j!=0x00;j--);
   949  0503  0870               	movf	delay1ms@j,w
   950  0504  0471               	iorwf	delay1ms@j+1,w
   951  0505  1903               	btfsc	3,2
   952  0506  0008               	return
   953  0507  3001               	movlw	1
   954  0508  02F0               	subwf	delay1ms@j,f
   955  0509  3000               	movlw	0
   956  050A  1C03               	skipc
   957  050B  03F1               	decf	delay1ms@j+1,f
   958  050C  02F1               	subwf	delay1ms@j+1,f
   959  050D  2D03               	goto	L2
   960  050E                     __end_of_delay1ms:	
   961                           
   962                           	psect	text3
   963  051E                     __ptext3:	
   964 ;; *************** function _UART_Read_Text *****************
   965 ;; Defined at:
   966 ;;		line 234 in file "Lifitrial1.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  i               1   11[COMMON] unsigned char 
   971 ;;  x               1   10[COMMON] unsigned char 
   972 ;;  a               1    9[COMMON] PTR const unsigned char 
   973 ;;		 -> STR_8(12), 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      PTR unsigned char 
   976 ;; Registers used:
   977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         3       0       0       0       0
   985 ;;      Temps:          1       0       0       0       0
   986 ;;      Totals:         4       0       0       0       0
   987 ;;Total ram usage:        4 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    2
   990 ;; This function calls:
   991 ;;		_UART_Read
   992 ;;		_UART_Write_Text
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _UART_Read_Text
  1000  051E                     _UART_Read_Text:	
  1001                           
  1002                           ;Lifitrial1.c: 236: unsigned const char *a="Keyed in \r\n";
  1003                           
  1004                           ;incstack = 0
  1005                           ; Regs used in _UART_Read_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1006  051E  3093               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1007  051F  00F8               	movwf	??_UART_Read_Text
  1008  0520  0878               	movf	??_UART_Read_Text,w
  1009  0521  00F9               	movwf	UART_Read_Text@a
  1010                           
  1011                           ;Lifitrial1.c: 238: unsigned static char string[20];
  1012                           ;Lifitrial1.c: 240: unsigned char x, i = 0;
  1013  0522  01FB               	clrf	UART_Read_Text@i
  1014  0523                     l935:	
  1015                           ;Lifitrial1.c: 242: while((x = UART_Read()) != 13)
  1016                           
  1017  0523  120A  118A  24E3  120A  118A  	fcall	_UART_Read
  1018  0528  00F8               	movwf	??_UART_Read_Text
  1019  0529  0878               	movf	??_UART_Read_Text,w
  1020  052A  00FA               	movwf	UART_Read_Text@x
  1021  052B  300D               	movlw	13
  1022  052C  067A               	xorwf	UART_Read_Text@x,w
  1023  052D  1903               	btfsc	3,2
  1024  052E  2D3C               	goto	l937
  1025                           
  1026                           ;Lifitrial1.c: 243: {
  1027                           ;Lifitrial1.c: 246: string[i++] = x;
  1028  052F  087A               	movf	UART_Read_Text@x,w
  1029  0530  00F8               	movwf	??_UART_Read_Text
  1030  0531  087B               	movf	UART_Read_Text@i,w
  1031  0532  3E41               	addlw	(low (UART_Read_Text@string| 0))& (0+255)
  1032  0533  0084               	movwf	4
  1033  0534  0878               	movf	??_UART_Read_Text,w
  1034  0535  1383               	bcf	3,7	;select IRP bank0
  1035  0536  0080               	movwf	0
  1036  0537  3001               	movlw	1
  1037  0538  00F8               	movwf	??_UART_Read_Text
  1038  0539  0878               	movf	??_UART_Read_Text,w
  1039  053A  07FB               	addwf	UART_Read_Text@i,f
  1040  053B  2D23               	goto	l935
  1041  053C                     l937:	
  1042                           
  1043                           ;Lifitrial1.c: 247: }
  1044                           ;Lifitrial1.c: 250: string[i] = '\0';
  1045  053C  087B               	movf	UART_Read_Text@i,w
  1046  053D  3E41               	addlw	(low (UART_Read_Text@string| 0))& (0+255)
  1047  053E  0084               	movwf	4
  1048  053F  1383               	bcf	3,7	;select IRP bank0
  1049  0540  0180               	clrf	0
  1050                           
  1051                           ;Lifitrial1.c: 251: UART_Write_Text(a);
  1052  0541  0879               	movf	UART_Read_Text@a,w
  1053  0542  00F1               	movwf	UART_Write_Text@text
  1054  0543  3000               	movlw	0
  1055  0544  1D03               	btfss	3,2
  1056  0545  3080               	movlw	128
  1057  0546  00F2               	movwf	UART_Write_Text@text+1
  1058  0547  120A  118A  254C   	fcall	_UART_Write_Text
  1059                           
  1060                           ;Lifitrial1.c: 254: return(string);
  1061  054A  3041               	movlw	(low (UART_Read_Text@string| 0))& (0+255)
  1062  054B  0008               	return
  1063  054C                     __end_of_UART_Read_Text:	
  1064                           
  1065                           	psect	text4
  1066  054C                     __ptext4:	
  1067 ;; *************** function _UART_Write_Text *****************
  1068 ;; Defined at:
  1069 ;;		line 214 in file "Lifitrial1.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  text            2    1[COMMON] PTR const unsigned char 
  1072 ;;		 -> NULL(0), UART_Read_Text@string(20), STR_8(12), STR_7(25), 
  1073 ;;		 -> STR_6(24), STR_5(17), STR_4(19), STR_3(20), 
  1074 ;;		 -> STR_2(17), STR_1(24), 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  i               2    6[COMMON] int 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;		None               void
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         2       0       0       0       0
  1087 ;;      Locals:         2       0       0       0       0
  1088 ;;      Temps:          3       0       0       0       0
  1089 ;;      Totals:         7       0       0       0       0
  1090 ;;Total ram usage:        7 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    1
  1093 ;; This function calls:
  1094 ;;		_UART_Write
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;;		_UART_Read_Text
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           
  1102                           ;psect for function _UART_Write_Text
  1103  054C                     _UART_Write_Text:	
  1104                           
  1105                           ;Lifitrial1.c: 216: int i;
  1106                           ;Lifitrial1.c: 217: for(i=0;text[i]!='\0';i++)
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1110  054C  01F6               	clrf	UART_Write_Text@i
  1111  054D  01F7               	clrf	UART_Write_Text@i+1
  1112  054E                     l825:	
  1113  054E  0876               	movf	UART_Write_Text@i,w
  1114  054F  0771               	addwf	UART_Write_Text@text,w
  1115  0550  00F4               	movwf	??_UART_Write_Text+1
  1116  0551  0872               	movf	UART_Write_Text@text+1,w
  1117  0552  00F3               	movwf	??_UART_Write_Text
  1118  0553  1803               	skipnc
  1119  0554  0AF3               	incf	??_UART_Write_Text,f
  1120  0555  1BF6               	btfsc	UART_Write_Text@i,7
  1121  0556  03F3               	decf	??_UART_Write_Text,f
  1122  0557  0873               	movf	??_UART_Write_Text,w
  1123  0558  00F5               	movwf	??_UART_Write_Text+2
  1124  0559  0875               	movf	??_UART_Write_Text+2,w
  1125  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1126  055B  1303               	bcf	3,6	;RP1=0, select bank0
  1127  055C  00FF               	movwf	127
  1128  055D  0874               	movf	??_UART_Write_Text+1,w
  1129  055E  0084               	movwf	4
  1130  055F  120A  118A  2003  120A  118A  	fcall	stringtab
  1131  0564  3A00               	xorlw	0
  1132  0565  1903               	btfsc	3,2
  1133  0566  0008               	return
  1134                           
  1135                           ;Lifitrial1.c: 218: UART_Write(text[i]);
  1136  0567  0876               	movf	UART_Write_Text@i,w
  1137  0568  0771               	addwf	UART_Write_Text@text,w
  1138  0569  00F4               	movwf	??_UART_Write_Text+1
  1139  056A  0872               	movf	UART_Write_Text@text+1,w
  1140  056B  00F3               	movwf	??_UART_Write_Text
  1141  056C  1803               	skipnc
  1142  056D  0AF3               	incf	??_UART_Write_Text,f
  1143  056E  1BF6               	btfsc	UART_Write_Text@i,7
  1144  056F  03F3               	decf	??_UART_Write_Text,f
  1145  0570  0873               	movf	??_UART_Write_Text,w
  1146  0571  00F5               	movwf	??_UART_Write_Text+2
  1147  0572  0875               	movf	??_UART_Write_Text+2,w
  1148  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0575  00FF               	movwf	127
  1151  0576  0874               	movf	??_UART_Write_Text+1,w
  1152  0577  0084               	movwf	4
  1153  0578  120A  118A  2003  120A  118A  	fcall	stringtab
  1154  057D  120A  118A  24F1  120A  118A  	fcall	_UART_Write
  1155  0582  3001               	movlw	1
  1156  0583  07F6               	addwf	UART_Write_Text@i,f
  1157  0584  1803               	skipnc
  1158  0585  0AF7               	incf	UART_Write_Text@i+1,f
  1159  0586  3000               	movlw	0
  1160  0587  07F7               	addwf	UART_Write_Text@i+1,f
  1161  0588  2D4E               	goto	l825
  1162  0589                     __end_of_UART_Write_Text:	
  1163                           
  1164                           	psect	text5
  1165  04F1                     __ptext5:	
  1166 ;; *************** function _UART_Write *****************
  1167 ;; Defined at:
  1168 ;;		line 202 in file "Lifitrial1.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  data            1    wreg     unsigned char 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  data            1    0[COMMON] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;		None               void
  1175 ;; Registers used:
  1176 ;;		wreg
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       0       0       0       0
  1183 ;;      Locals:         1       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0
  1185 ;;      Totals:         1       0       0       0       0
  1186 ;;Total ram usage:        1 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_UART_Write_Text
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _UART_Write
  1197  04F1                     _UART_Write:	
  1198                           
  1199                           ;incstack = 0
  1200                           ; Regs used in _UART_Write: [wreg]
  1201                           ;UART_Write@data stored from wreg
  1202  04F1  00F0               	movwf	UART_Write@data
  1203  04F2                     l87:	
  1204                           ;Lifitrial1.c: 204: while(!PIR1bits.TXIF);
  1205                           
  1206  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  1207  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  1208  04F4  1E0C               	btfss	12,4	;volatile
  1209  04F5  2CF2               	goto	l87
  1210  04F6                     l90:	
  1211                           ;Lifitrial1.c: 205: while(!TRMT);
  1212                           
  1213  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  1214  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  1215  04F8  1C98               	btfss	24,1	;volatile
  1216  04F9  2CF6               	goto	l90
  1217                           
  1218                           ;Lifitrial1.c: 206: TXREG = data;
  1219  04FA  0870               	movf	UART_Write@data,w
  1220  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  1221  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  1222  04FD  0099               	movwf	25	;volatile
  1223  04FE  0008               	return
  1224  04FF                     __end_of_UART_Write:	
  1225                           
  1226                           	psect	text6
  1227  04E3                     __ptext6:	
  1228 ;; *************** function _UART_Read *****************
  1229 ;; Defined at:
  1230 ;;		line 228 in file "Lifitrial1.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      unsigned char 
  1237 ;; Registers used:
  1238 ;;		wreg
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_UART_Read_Text
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _UART_Read
  1259  04E3                     _UART_Read:	
  1260  04E3                     l108:	
  1261                           ;Lifitrial1.c: 230: while(!RCIF);
  1262                           
  1263                           ;incstack = 0
  1264                           ; Regs used in _UART_Read: [wreg]
  1265                           
  1266  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1267  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  1268  04E5  1E8C               	btfss	12,5	;volatile
  1269  04E6  2CE3               	goto	l108
  1270                           
  1271                           ;Lifitrial1.c: 231: return RCREG;
  1272  04E7  081A               	movf	26,w	;volatile
  1273  04E8  0008               	return
  1274  04E9                     __end_of_UART_Read:	
  1275                           
  1276                           	psect	text7
  1277  0618                     __ptext7:	
  1278 ;; *************** function _UART_Init *****************
  1279 ;; Defined at:
  1280 ;;		line 174 in file "Lifitrial1.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  baudrate        4    6[BANK0 ] long 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  x               2    9[COMMON] unsigned int 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      unsigned char 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       4       0       0       0
  1295 ;;      Locals:         2       0       0       0       0
  1296 ;;      Temps:          0      12       0       0       0
  1297 ;;      Totals:         2      16       0       0       0
  1298 ;;Total ram usage:       18 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    1
  1301 ;; This function calls:
  1302 ;;		___aldiv
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _UART_Init
  1310  0618                     _UART_Init:	
  1311                           
  1312                           ;Lifitrial1.c: 176: unsigned int x;
  1313                           ;Lifitrial1.c: 177: x = (8000000 - baudrate*64)/(baudrate*64);
  1314                           
  1315                           ;incstack = 0
  1316                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1317  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1319  061A  0826               	movf	UART_Init@baudrate,w
  1320  061B  00AA               	movwf	??_UART_Init
  1321  061C  0827               	movf	UART_Init@baudrate+1,w
  1322  061D  00AB               	movwf	??_UART_Init+1
  1323  061E  0828               	movf	UART_Init@baudrate+2,w
  1324  061F  00AC               	movwf	??_UART_Init+2
  1325  0620  0829               	movf	UART_Init@baudrate+3,w
  1326  0621  00AD               	movwf	??_UART_Init+3
  1327  0622  3006               	movlw	6
  1328  0623                     u625:	
  1329  0623  1003               	clrc
  1330  0624  0DAA               	rlf	??_UART_Init,f
  1331  0625  0DAB               	rlf	??_UART_Init+1,f
  1332  0626  0DAC               	rlf	??_UART_Init+2,f
  1333  0627  0DAD               	rlf	??_UART_Init+3,f
  1334  0628  3EFF               	addlw	-1
  1335  0629  1D03               	skipz
  1336  062A  2E23               	goto	u625
  1337  062B  082D               	movf	??_UART_Init+3,w
  1338  062C  00F3               	movwf	___aldiv@divisor+3
  1339  062D  082C               	movf	??_UART_Init+2,w
  1340  062E  00F2               	movwf	___aldiv@divisor+2
  1341  062F  082B               	movf	??_UART_Init+1,w
  1342  0630  00F1               	movwf	___aldiv@divisor+1
  1343  0631  082A               	movf	??_UART_Init,w
  1344  0632  00F0               	movwf	___aldiv@divisor
  1345  0633  3000               	movlw	0
  1346  0634  00AE               	movwf	??_UART_Init+4
  1347  0635  3012               	movlw	18
  1348  0636  00AF               	movwf	??_UART_Init+5
  1349  0637  307A               	movlw	122
  1350  0638  00B0               	movwf	??_UART_Init+6
  1351  0639  3000               	movlw	0
  1352  063A  00B1               	movwf	??_UART_Init+7
  1353  063B  0826               	movf	UART_Init@baudrate,w
  1354  063C  00B2               	movwf	??_UART_Init+8
  1355  063D  0827               	movf	UART_Init@baudrate+1,w
  1356  063E  00B3               	movwf	??_UART_Init+9
  1357  063F  0828               	movf	UART_Init@baudrate+2,w
  1358  0640  00B4               	movwf	??_UART_Init+10
  1359  0641  0829               	movf	UART_Init@baudrate+3,w
  1360  0642  00B5               	movwf	??_UART_Init+11
  1361  0643  3006               	movlw	6
  1362  0644                     u635:	
  1363  0644  1003               	clrc
  1364  0645  0DB2               	rlf	??_UART_Init+8,f
  1365  0646  0DB3               	rlf	??_UART_Init+9,f
  1366  0647  0DB4               	rlf	??_UART_Init+10,f
  1367  0648  0DB5               	rlf	??_UART_Init+11,f
  1368  0649  3EFF               	addlw	-1
  1369  064A  1D03               	skipz
  1370  064B  2E44               	goto	u635
  1371  064C  09B2               	comf	??_UART_Init+8,f
  1372  064D  09B3               	comf	??_UART_Init+9,f
  1373  064E  09B4               	comf	??_UART_Init+10,f
  1374  064F  09B5               	comf	??_UART_Init+11,f
  1375  0650  0AB2               	incf	??_UART_Init+8,f
  1376  0651  1903               	skipnz
  1377  0652  0AB3               	incf	??_UART_Init+9,f
  1378  0653  1903               	skipnz
  1379  0654  0AB4               	incf	??_UART_Init+10,f
  1380  0655  1903               	skipnz
  1381  0656  0AB5               	incf	??_UART_Init+11,f
  1382  0657  0832               	movf	??_UART_Init+8,w
  1383  0658  07AE               	addwf	??_UART_Init+4,f
  1384  0659  0833               	movf	??_UART_Init+9,w
  1385  065A  1803               	skipnc
  1386  065B  0F33               	incfsz	??_UART_Init+9,w
  1387  065C  2E5E               	goto	u640
  1388  065D  2E5F               	goto	u641
  1389  065E                     u640:	
  1390  065E  07AF               	addwf	??_UART_Init+5,f
  1391  065F                     u641:	
  1392  065F  0834               	movf	??_UART_Init+10,w
  1393  0660  1803               	skipnc
  1394  0661  0F34               	incfsz	??_UART_Init+10,w
  1395  0662  2E64               	goto	u642
  1396  0663  2E65               	goto	u643
  1397  0664                     u642:	
  1398  0664  07B0               	addwf	??_UART_Init+6,f
  1399  0665                     u643:	
  1400  0665  0835               	movf	??_UART_Init+11,w
  1401  0666  1803               	skipnc
  1402  0667  0A35               	incf	??_UART_Init+11,w
  1403  0668  07B1               	addwf	??_UART_Init+7,f
  1404  0669  0831               	movf	??_UART_Init+7,w
  1405  066A  00F7               	movwf	___aldiv@dividend+3
  1406  066B  0830               	movf	??_UART_Init+6,w
  1407  066C  00F6               	movwf	___aldiv@dividend+2
  1408  066D  082F               	movf	??_UART_Init+5,w
  1409  066E  00F5               	movwf	___aldiv@dividend+1
  1410  066F  082E               	movf	??_UART_Init+4,w
  1411  0670  00F4               	movwf	___aldiv@dividend
  1412  0671  120A  118A  2589  120A  118A  	fcall	___aldiv
  1413  0676  0871               	movf	?___aldiv+1,w
  1414  0677  00FA               	movwf	UART_Init@x+1
  1415  0678  0870               	movf	?___aldiv,w
  1416  0679  00F9               	movwf	UART_Init@x
  1417                           
  1418                           ;Lifitrial1.c: 178: if(x>255)
  1419  067A  3001               	movlw	1
  1420  067B  027A               	subwf	UART_Init@x+1,w
  1421  067C  3000               	movlw	0
  1422  067D  1903               	skipnz
  1423  067E  0279               	subwf	UART_Init@x,w
  1424  067F  1C03               	skipc
  1425  0680  2EF0               	goto	l901
  1426                           
  1427                           ;Lifitrial1.c: 179: {
  1428                           ;Lifitrial1.c: 180: x = (8000000 - baudrate*16)/(baudrate*16);
  1429  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1431  0683  0826               	movf	UART_Init@baudrate,w
  1432  0684  00AA               	movwf	??_UART_Init
  1433  0685  0827               	movf	UART_Init@baudrate+1,w
  1434  0686  00AB               	movwf	??_UART_Init+1
  1435  0687  0828               	movf	UART_Init@baudrate+2,w
  1436  0688  00AC               	movwf	??_UART_Init+2
  1437  0689  0829               	movf	UART_Init@baudrate+3,w
  1438  068A  00AD               	movwf	??_UART_Init+3
  1439  068B  3004               	movlw	4
  1440  068C                     u665:	
  1441  068C  1003               	clrc
  1442  068D  0DAA               	rlf	??_UART_Init,f
  1443  068E  0DAB               	rlf	??_UART_Init+1,f
  1444  068F  0DAC               	rlf	??_UART_Init+2,f
  1445  0690  0DAD               	rlf	??_UART_Init+3,f
  1446  0691  3EFF               	addlw	-1
  1447  0692  1D03               	skipz
  1448  0693  2E8C               	goto	u665
  1449  0694  082D               	movf	??_UART_Init+3,w
  1450  0695  00F3               	movwf	___aldiv@divisor+3
  1451  0696  082C               	movf	??_UART_Init+2,w
  1452  0697  00F2               	movwf	___aldiv@divisor+2
  1453  0698  082B               	movf	??_UART_Init+1,w
  1454  0699  00F1               	movwf	___aldiv@divisor+1
  1455  069A  082A               	movf	??_UART_Init,w
  1456  069B  00F0               	movwf	___aldiv@divisor
  1457  069C  3000               	movlw	0
  1458  069D  00AE               	movwf	??_UART_Init+4
  1459  069E  3012               	movlw	18
  1460  069F  00AF               	movwf	??_UART_Init+5
  1461  06A0  307A               	movlw	122
  1462  06A1  00B0               	movwf	??_UART_Init+6
  1463  06A2  3000               	movlw	0
  1464  06A3  00B1               	movwf	??_UART_Init+7
  1465  06A4  0826               	movf	UART_Init@baudrate,w
  1466  06A5  00B2               	movwf	??_UART_Init+8
  1467  06A6  0827               	movf	UART_Init@baudrate+1,w
  1468  06A7  00B3               	movwf	??_UART_Init+9
  1469  06A8  0828               	movf	UART_Init@baudrate+2,w
  1470  06A9  00B4               	movwf	??_UART_Init+10
  1471  06AA  0829               	movf	UART_Init@baudrate+3,w
  1472  06AB  00B5               	movwf	??_UART_Init+11
  1473  06AC  3004               	movlw	4
  1474  06AD                     u675:	
  1475  06AD  1003               	clrc
  1476  06AE  0DB2               	rlf	??_UART_Init+8,f
  1477  06AF  0DB3               	rlf	??_UART_Init+9,f
  1478  06B0  0DB4               	rlf	??_UART_Init+10,f
  1479  06B1  0DB5               	rlf	??_UART_Init+11,f
  1480  06B2  3EFF               	addlw	-1
  1481  06B3  1D03               	skipz
  1482  06B4  2EAD               	goto	u675
  1483  06B5  09B2               	comf	??_UART_Init+8,f
  1484  06B6  09B3               	comf	??_UART_Init+9,f
  1485  06B7  09B4               	comf	??_UART_Init+10,f
  1486  06B8  09B5               	comf	??_UART_Init+11,f
  1487  06B9  0AB2               	incf	??_UART_Init+8,f
  1488  06BA  1903               	skipnz
  1489  06BB  0AB3               	incf	??_UART_Init+9,f
  1490  06BC  1903               	skipnz
  1491  06BD  0AB4               	incf	??_UART_Init+10,f
  1492  06BE  1903               	skipnz
  1493  06BF  0AB5               	incf	??_UART_Init+11,f
  1494  06C0  0832               	movf	??_UART_Init+8,w
  1495  06C1  07AE               	addwf	??_UART_Init+4,f
  1496  06C2  0833               	movf	??_UART_Init+9,w
  1497  06C3  1803               	skipnc
  1498  06C4  0F33               	incfsz	??_UART_Init+9,w
  1499  06C5  2EC7               	goto	u680
  1500  06C6  2EC8               	goto	u681
  1501  06C7                     u680:	
  1502  06C7  07AF               	addwf	??_UART_Init+5,f
  1503  06C8                     u681:	
  1504  06C8  0834               	movf	??_UART_Init+10,w
  1505  06C9  1803               	skipnc
  1506  06CA  0F34               	incfsz	??_UART_Init+10,w
  1507  06CB  2ECD               	goto	u682
  1508  06CC  2ECE               	goto	u683
  1509  06CD                     u682:	
  1510  06CD  07B0               	addwf	??_UART_Init+6,f
  1511  06CE                     u683:	
  1512  06CE  0835               	movf	??_UART_Init+11,w
  1513  06CF  1803               	skipnc
  1514  06D0  0A35               	incf	??_UART_Init+11,w
  1515  06D1  07B1               	addwf	??_UART_Init+7,f
  1516  06D2  0831               	movf	??_UART_Init+7,w
  1517  06D3  00F7               	movwf	___aldiv@dividend+3
  1518  06D4  0830               	movf	??_UART_Init+6,w
  1519  06D5  00F6               	movwf	___aldiv@dividend+2
  1520  06D6  082F               	movf	??_UART_Init+5,w
  1521  06D7  00F5               	movwf	___aldiv@dividend+1
  1522  06D8  082E               	movf	??_UART_Init+4,w
  1523  06D9  00F4               	movwf	___aldiv@dividend
  1524  06DA  120A  118A  2589  120A  118A  	fcall	___aldiv
  1525  06DF  0871               	movf	?___aldiv+1,w
  1526  06E0  00FA               	movwf	UART_Init@x+1
  1527  06E1  0870               	movf	?___aldiv,w
  1528  06E2  00F9               	movwf	UART_Init@x
  1529                           
  1530                           ;Lifitrial1.c: 182: BRGH = 1;
  1531  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  1532  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  1533  06E5  1518               	bsf	24,2	;volatile
  1534                           
  1535                           ;Lifitrial1.c: 183: SPBRG = x;
  1536  06E6  0879               	movf	UART_Init@x,w
  1537  06E7  0099               	movwf	25	;volatile
  1538                           
  1539                           ;Lifitrial1.c: 184: SYNC = 0;
  1540  06E8  1218               	bcf	24,4	;volatile
  1541                           
  1542                           ;Lifitrial1.c: 185: SPEN = 1;
  1543  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1544  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1545  06EB  1798               	bsf	24,7	;volatile
  1546                           
  1547                           ;Lifitrial1.c: 186: CREN = 1;
  1548  06EC  1618               	bsf	24,4	;volatile
  1549                           
  1550                           ;Lifitrial1.c: 187: TXEN = 1;
  1551  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  1552  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  1553  06EF  1698               	bsf	24,5	;volatile
  1554  06F0                     l901:	
  1555                           
  1556                           ;Lifitrial1.c: 188: }
  1557                           ;Lifitrial1.c: 189: if(x<256)
  1558  06F0  3001               	movlw	1
  1559  06F1  027A               	subwf	UART_Init@x+1,w
  1560  06F2  3000               	movlw	0
  1561  06F3  1903               	skipnz
  1562  06F4  0279               	subwf	UART_Init@x,w
  1563  06F5  1803               	skipnc
  1564  06F6  0008               	return
  1565                           
  1566                           ;Lifitrial1.c: 190: {
  1567                           ;Lifitrial1.c: 191: BRGH = 0;
  1568  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  1569  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  1570  06F9  1118               	bcf	24,2	;volatile
  1571                           
  1572                           ;Lifitrial1.c: 192: SPBRG = x;
  1573  06FA  0879               	movf	UART_Init@x,w
  1574  06FB  0099               	movwf	25	;volatile
  1575                           
  1576                           ;Lifitrial1.c: 193: SYNC = 0;
  1577  06FC  1218               	bcf	24,4	;volatile
  1578                           
  1579                           ;Lifitrial1.c: 194: SPEN = 1;
  1580  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1581  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1582  06FF  1798               	bsf	24,7	;volatile
  1583                           
  1584                           ;Lifitrial1.c: 195: CREN = 1;
  1585  0700  1618               	bsf	24,4	;volatile
  1586                           
  1587                           ;Lifitrial1.c: 196: TXEN = 1;
  1588  0701  1683               	bsf	3,5	;RP0=1, select bank1
  1589  0702  1303               	bcf	3,6	;RP1=0, select bank1
  1590  0703  1698               	bsf	24,5	;volatile
  1591                           
  1592                           ;Lifitrial1.c: 197: return 1;
  1593                           ;	Return value of _UART_Init is never used
  1594  0704  0008               	return
  1595  0705                     __end_of_UART_Init:	
  1596                           ;Lifitrial1.c: 198: }
  1597                           ;Lifitrial1.c: 199: return 0;
  1598                           ;	Return value of _UART_Init is never used
  1599                           
  1600                           
  1601                           	psect	text8
  1602  0589                     __ptext8:	
  1603 ;; *************** function ___aldiv *****************
  1604 ;; Defined at:
  1605 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  divisor         4    0[COMMON] long 
  1608 ;;  dividend        4    4[COMMON] long 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  quotient        4    2[BANK0 ] long 
  1611 ;;  sign            1    1[BANK0 ] unsigned char 
  1612 ;;  counter         1    0[BANK0 ] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  4    0[COMMON] long 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         8       0       0       0       0
  1623 ;;      Locals:         0       6       0       0       0
  1624 ;;      Temps:          1       0       0       0       0
  1625 ;;      Totals:         9       6       0       0       0
  1626 ;;Total ram usage:       15 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_UART_Init
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function ___aldiv
  1637  0589                     ___aldiv:	
  1638                           
  1639                           ;incstack = 0
  1640                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1641  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1642  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1643  058B  01A1               	clrf	___aldiv@sign
  1644  058C  1FF3               	btfss	___aldiv@divisor+3,7
  1645  058D  2D9B               	goto	l282
  1646  058E  09F0               	comf	___aldiv@divisor,f
  1647  058F  09F1               	comf	___aldiv@divisor+1,f
  1648  0590  09F2               	comf	___aldiv@divisor+2,f
  1649  0591  09F3               	comf	___aldiv@divisor+3,f
  1650  0592  0AF0               	incf	___aldiv@divisor,f
  1651  0593  1903               	skipnz
  1652  0594  0AF1               	incf	___aldiv@divisor+1,f
  1653  0595  1903               	skipnz
  1654  0596  0AF2               	incf	___aldiv@divisor+2,f
  1655  0597  1903               	skipnz
  1656  0598  0AF3               	incf	___aldiv@divisor+3,f
  1657  0599  01A1               	clrf	___aldiv@sign
  1658  059A  0AA1               	incf	___aldiv@sign,f
  1659  059B                     l282:	
  1660  059B  1FF7               	btfss	___aldiv@dividend+3,7
  1661  059C  2DAC               	goto	l853
  1662  059D  09F4               	comf	___aldiv@dividend,f
  1663  059E  09F5               	comf	___aldiv@dividend+1,f
  1664  059F  09F6               	comf	___aldiv@dividend+2,f
  1665  05A0  09F7               	comf	___aldiv@dividend+3,f
  1666  05A1  0AF4               	incf	___aldiv@dividend,f
  1667  05A2  1903               	skipnz
  1668  05A3  0AF5               	incf	___aldiv@dividend+1,f
  1669  05A4  1903               	skipnz
  1670  05A5  0AF6               	incf	___aldiv@dividend+2,f
  1671  05A6  1903               	skipnz
  1672  05A7  0AF7               	incf	___aldiv@dividend+3,f
  1673  05A8  3001               	movlw	1
  1674  05A9  00F8               	movwf	??___aldiv
  1675  05AA  0878               	movf	??___aldiv,w
  1676  05AB  06A1               	xorwf	___aldiv@sign,f
  1677  05AC                     l853:	
  1678  05AC  3000               	movlw	0
  1679  05AD  00A5               	movwf	___aldiv@quotient+3
  1680  05AE  3000               	movlw	0
  1681  05AF  00A4               	movwf	___aldiv@quotient+2
  1682  05B0  3000               	movlw	0
  1683  05B1  00A3               	movwf	___aldiv@quotient+1
  1684  05B2  3000               	movlw	0
  1685  05B3  00A2               	movwf	___aldiv@quotient
  1686  05B4  0873               	movf	___aldiv@divisor+3,w
  1687  05B5  0472               	iorwf	___aldiv@divisor+2,w
  1688  05B6  0471               	iorwf	___aldiv@divisor+1,w
  1689  05B7  0470               	iorwf	___aldiv@divisor,w
  1690  05B8  1903               	skipnz
  1691  05B9  2E01               	goto	l875
  1692  05BA  01A0               	clrf	___aldiv@counter
  1693  05BB  0AA0               	incf	___aldiv@counter,f
  1694  05BC                     l861:	
  1695  05BC  1BF3               	btfsc	___aldiv@divisor+3,7
  1696  05BD  2DCC               	goto	l863
  1697  05BE  3001               	movlw	1
  1698  05BF  00F8               	movwf	??___aldiv
  1699  05C0                     u555:	
  1700  05C0  1003               	clrc
  1701  05C1  0DF0               	rlf	___aldiv@divisor,f
  1702  05C2  0DF1               	rlf	___aldiv@divisor+1,f
  1703  05C3  0DF2               	rlf	___aldiv@divisor+2,f
  1704  05C4  0DF3               	rlf	___aldiv@divisor+3,f
  1705  05C5  0BF8               	decfsz	??___aldiv,f
  1706  05C6  2DC0               	goto	u555
  1707  05C7  3001               	movlw	1
  1708  05C8  00F8               	movwf	??___aldiv
  1709  05C9  0878               	movf	??___aldiv,w
  1710  05CA  07A0               	addwf	___aldiv@counter,f
  1711  05CB  2DBC               	goto	l861
  1712  05CC                     l863:	
  1713  05CC  3001               	movlw	1
  1714  05CD  00F8               	movwf	??___aldiv
  1715  05CE                     u575:	
  1716  05CE  1003               	clrc
  1717  05CF  0DA2               	rlf	___aldiv@quotient,f
  1718  05D0  0DA3               	rlf	___aldiv@quotient+1,f
  1719  05D1  0DA4               	rlf	___aldiv@quotient+2,f
  1720  05D2  0DA5               	rlf	___aldiv@quotient+3,f
  1721  05D3  0BF8               	decfsz	??___aldiv,f
  1722  05D4  2DCE               	goto	u575
  1723  05D5  0873               	movf	___aldiv@divisor+3,w
  1724  05D6  0277               	subwf	___aldiv@dividend+3,w
  1725  05D7  1D03               	skipz
  1726  05D8  2DE3               	goto	u585
  1727  05D9  0872               	movf	___aldiv@divisor+2,w
  1728  05DA  0276               	subwf	___aldiv@dividend+2,w
  1729  05DB  1D03               	skipz
  1730  05DC  2DE3               	goto	u585
  1731  05DD  0871               	movf	___aldiv@divisor+1,w
  1732  05DE  0275               	subwf	___aldiv@dividend+1,w
  1733  05DF  1D03               	skipz
  1734  05E0  2DE3               	goto	u585
  1735  05E1  0870               	movf	___aldiv@divisor,w
  1736  05E2  0274               	subwf	___aldiv@dividend,w
  1737  05E3                     u585:	
  1738  05E3  1C03               	skipc
  1739  05E4  2DF4               	goto	l871
  1740  05E5  0870               	movf	___aldiv@divisor,w
  1741  05E6  02F4               	subwf	___aldiv@dividend,f
  1742  05E7  0871               	movf	___aldiv@divisor+1,w
  1743  05E8  1C03               	skipc
  1744  05E9  0F71               	incfsz	___aldiv@divisor+1,w
  1745  05EA  02F5               	subwf	___aldiv@dividend+1,f
  1746  05EB  0872               	movf	___aldiv@divisor+2,w
  1747  05EC  1C03               	skipc
  1748  05ED  0F72               	incfsz	___aldiv@divisor+2,w
  1749  05EE  02F6               	subwf	___aldiv@dividend+2,f
  1750  05EF  0873               	movf	___aldiv@divisor+3,w
  1751  05F0  1C03               	skipc
  1752  05F1  0F73               	incfsz	___aldiv@divisor+3,w
  1753  05F2  02F7               	subwf	___aldiv@dividend+3,f
  1754  05F3  1422               	bsf	___aldiv@quotient,0
  1755  05F4                     l871:	
  1756  05F4  3001               	movlw	1
  1757  05F5                     u595:	
  1758  05F5  1003               	clrc
  1759  05F6  0CF3               	rrf	___aldiv@divisor+3,f
  1760  05F7  0CF2               	rrf	___aldiv@divisor+2,f
  1761  05F8  0CF1               	rrf	___aldiv@divisor+1,f
  1762  05F9  0CF0               	rrf	___aldiv@divisor,f
  1763  05FA  3EFF               	addlw	-1
  1764  05FB  1D03               	skipz
  1765  05FC  2DF5               	goto	u595
  1766  05FD  3001               	movlw	1
  1767  05FE  02A0               	subwf	___aldiv@counter,f
  1768  05FF  1D03               	btfss	3,2
  1769  0600  2DCC               	goto	l863
  1770  0601                     l875:	
  1771  0601  0821               	movf	___aldiv@sign,w
  1772  0602  1903               	btfsc	3,2
  1773  0603  2E0F               	goto	l879
  1774  0604  09A2               	comf	___aldiv@quotient,f
  1775  0605  09A3               	comf	___aldiv@quotient+1,f
  1776  0606  09A4               	comf	___aldiv@quotient+2,f
  1777  0607  09A5               	comf	___aldiv@quotient+3,f
  1778  0608  0AA2               	incf	___aldiv@quotient,f
  1779  0609  1903               	skipnz
  1780  060A  0AA3               	incf	___aldiv@quotient+1,f
  1781  060B  1903               	skipnz
  1782  060C  0AA4               	incf	___aldiv@quotient+2,f
  1783  060D  1903               	skipnz
  1784  060E  0AA5               	incf	___aldiv@quotient+3,f
  1785  060F                     l879:	
  1786  060F  0825               	movf	___aldiv@quotient+3,w
  1787  0610  00F3               	movwf	?___aldiv+3
  1788  0611  0824               	movf	___aldiv@quotient+2,w
  1789  0612  00F2               	movwf	?___aldiv+2
  1790  0613  0823               	movf	___aldiv@quotient+1,w
  1791  0614  00F1               	movwf	?___aldiv+1
  1792  0615  0822               	movf	___aldiv@quotient,w
  1793  0616  00F0               	movwf	?___aldiv
  1794  0617  0008               	return
  1795  0618                     __end_of___aldiv:	
  1796  007E                     btemp	set	126	;btemp
  1797  007E                     wtemp	set	126
  1798  007E                     wtemp0	set	126
  1799  0080                     wtemp1	set	128
  1800  0082                     wtemp2	set	130
  1801  0084                     wtemp3	set	132
  1802  0086                     wtemp4	set	134
  1803  0088                     wtemp5	set	136
  1804  007F                     wtemp6	set	127
  1805  007E                     ttemp	set	126
  1806  007E                     ttemp0	set	126
  1807  0081                     ttemp1	set	129
  1808  0084                     ttemp2	set	132
  1809  0087                     ttemp3	set	135
  1810  007F                     ttemp4	set	127
  1811  007E                     ltemp	set	126
  1812  007E                     ltemp0	set	126
  1813  0082                     ltemp1	set	130
  1814  0086                     ltemp2	set	134
  1815  0080                     ltemp3	set	128


Data Sizes:
    Strings     158
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Read_Text@a	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_8(CODE[12]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 25
		 -> NULL(NULL[0]), UART_Read_Text@string(BANK0[20]), STR_8(CODE[12]), STR_7(CODE[25]), 
		 -> STR_6(CODE[24]), STR_5(CODE[17]), STR_4(CODE[19]), STR_3(CODE[20]), 
		 -> STR_2(CODE[17]), STR_1(CODE[24]), 

    sp__UART_Read_Text	PTR unsigned char  size(1) Largest target is 20
		 -> UART_Read_Text@string(BANK0[20]), 

    is	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), UART_Read_Text@string(BANK0[20]), 

    main@arr7	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_7(CODE[25]), 

    main@arr6	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_6(CODE[24]), 

    main@arr5	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[17]), 

    main@arr4	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_4(CODE[19]), 

    main@arr3	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[20]), 

    main@arr2	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 

    main@arr1	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 


Critical Paths under _main in COMMON

    _main->_UART_Read_Text
    _delay_ms->_delay1ms
    _UART_Read_Text->_UART_Write_Text
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    2440
                                             12 COMMON     2     2      0
                                             22 BANK0     10    10      0
                          _UART_Init
                     _UART_Read_Text
                    _UART_Write_Text
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     197
                                              2 COMMON     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (2) _delay1ms                                             2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read_Text                                       4     4      0     681
                                              8 COMMON     4     4      0
                          _UART_Read
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     589
                                              1 COMMON     7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     743
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Read_Text
     _UART_Read
     _UART_Write_Text
       _UART_Write
   _UART_Write_Text
     _UART_Write
   _delay_ms
     _delay1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      44       3        0.0%
BITBANK0            50      0       1       4        1.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      36       5       67.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      44      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Jan 27 20:14:08 2016

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l53 0728                        l90 04F6                        l87 04F2  
                      _is 0040                        fsr 0004                       l108 04E3  
                     l282 059B                       l901 06F0                       l825 054E  
                     l861 05BC                       l853 05AC                       l871 05F4  
                     l863 05CC                       l935 0523                       l937 053C  
                     l875 0601                       l981 07BE                       l879 060F  
                     l959 0750                       l977 07AA                       l995 07E8  
                     l989 07E2                       _RB0 0030              __CFG_CPD$OFF 0000  
                     u640 065E                       u641 065F                       u625 0623  
                     u642 0664                       u555 05C0                       u643 0665  
                     u635 0644                       u750 07B1                       u575 05CE  
                     u680 06C7                       u760 07B2                       u585 05E3  
                     u681 06C8                       u665 068C                       u682 06CD  
                     u770 07BB                       u595 05F5                       u683 06CE  
                     u675 06AD                       fsr0 0004                       indf 0000  
            __CFG_LVP$OFF 0000                      STR_1 002C                      STR_2 0094  
                    STR_3 005C                      STR_4 0070                      STR_5 0083  
                    STR_6 0044                      STR_7 0013                      STR_8 00A5  
                    _BRGH 04C2                      _CREN 00C4                      _RCIF 0065  
                    _SPEN 00C7                      _TRMT 04C1                      _TXEN 04C5  
                    _TXIF 0064                      _SYNC 04C4              __CFG_WRT$OFF 0000  
                    _main 0705                      btemp 007E             __CFG_BOREN$ON 0000  
                    ltemp 007E                      start 0000                      ttemp 007E  
                    wtemp 007E             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
 __end_of_UART_Write_Text 0589           __end_of___aldiv 0618                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _RCREG 001A                     _SPBRG 0099  
                   _TRISB 0086                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
             ?_UART_Write 0070        __size_of_UART_Init 00ED        __size_of_UART_Read 0006  
    UART_Read_Text@string 0041                     main@j 003E                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 07F4  
            __end_of_main 07F4                    ??_main 007C                    _INTCON 000B  
        __end_of_delay1ms 050E          __end_of_delay_ms 051E            __CFG_PWRTE$OFF 0000  
       __end_of_UART_Init 0705         __end_of_UART_Read 04E9       __size_of_UART_Write 000E  
               ??___aldiv 0078          ?_UART_Write_Text 0071   __size_of_UART_Read_Text 002E  
 __end_of__initialization 07FC            __pcstackCOMMON 0070                __pbssBANK0 0040  
              __pmaintext 0705                   _IC2_ack 02A8                 ?_delay1ms 0070  
               ?_delay_ms 0072              ??_UART_Write 0070                   _SSPCON2 0091  
              __stringtab 0003                   ___aldiv 0589        __end_of_UART_Write 04FF  
          _UART_Read_Text 051E                   __ptext1 050E                   __ptext2 04FF  
                 __ptext3 051E                   __ptext4 054C                   __ptext5 04F1  
                 __ptext6 04E3                   __ptext7 0618                   __ptext8 0589  
              ??_delay1ms 0070          ___aldiv@dividend 0074                ??_delay_ms 0074  
                 clrloop0 04EA      end_of_initialization 07FC    __end_of_UART_Read_Text 054C  
        ___aldiv@quotient 0022                 _UART_Init 0618                 _UART_Read 04E3  
          UART_Write@data 0070           ?_UART_Read_Text 0070                ?_UART_Init 0026  
              ?_UART_Read 0070             __pbitbssBANK0 02A8  __size_of_UART_Write_Text 003D  
     start_initialization 07F4  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
           __pcstackBANK0 0020         __size_of_delay1ms 000F         __size_of_delay_ms 0010  
                ?___aldiv 0070               ??_UART_Init 002A               ??_UART_Read 0070  
               __pstrings 0003                UART_Init@x 0079                 delay1ms@j 0070  
       ??_UART_Write_Text 0073           ___aldiv@divisor 0070           ___aldiv@counter 0020  
               delay_ms@i 0072           UART_Read_Text@a 0079           UART_Read_Text@i 007B  
         UART_Read_Text@x 007A                 clear_ram0 04E9                  _PIR1bits 000C  
       UART_Init@baudrate 0026               __stringbase 0012          ??_UART_Read_Text 0078  
        __size_of___aldiv 008F        __end_of__stringtab 0013                  _delay1ms 04FF  
                _delay_ms 050E         __CFG_BOR4V$BOR40V 0000       UART_Write_Text@text 0071  
           __size_of_main 00EF            main@LED_Output 003D                  main@arr1 0036  
                main@arr2 0037                  main@arr3 0038                  main@arr4 0039  
                main@arr5 003A                  main@arr6 003B                  main@arr7 003C  
               stringcode 000D                _OSCCONbits 008F           _UART_Write_Text 054C  
                stringdir 000D                  stringtab 0003              ___aldiv@sign 0021  
              _UART_Write 04F1          UART_Write_Text@i 0076  
