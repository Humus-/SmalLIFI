

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Jan 17 18:38:46 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000D                     	;# 
    36  000E                     	;# 
    37  000E                     	;# 
    38  000F                     	;# 
    39  0010                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0014                     	;# 
    44  0015                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  001D                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  0081                     	;# 
    58  0085                     	;# 
    59  0086                     	;# 
    60  0087                     	;# 
    61  0089                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  008E                     	;# 
    65  008F                     	;# 
    66  0090                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0093                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  0105                     	;# 
    85  0107                     	;# 
    86  0108                     	;# 
    87  0109                     	;# 
    88  010C                     	;# 
    89  010C                     	;# 
    90  010D                     	;# 
    91  010E                     	;# 
    92  010F                     	;# 
    93  0185                     	;# 
    94  0187                     	;# 
    95  0188                     	;# 
    96  0189                     	;# 
    97  018C                     	;# 
    98  018D                     	;# 
    99  000B                     _INTCON	set	11
   100  000C                     _PIR1bits	set	12
   101  001A                     _RCREG	set	26
   102  0013                     _SSPBUF	set	19
   103  0014                     _SSPCON	set	20
   104  0019                     _TXREG	set	25
   105  00C4                     _CREN	set	196
   106  0065                     _RCIF	set	101
   107  00C7                     _SPEN	set	199
   108  0063                     _SSPIF	set	99
   109  0064                     _TXIF	set	100
   110  008F                     _OSCCONbits	set	143
   111  0099                     _SPBRG	set	153
   112  0093                     _SSPADD	set	147
   113  0091                     _SSPCON2	set	145
   114  0091                     _SSPCON2bits	set	145
   115  0094                     _SSPSTAT	set	148
   116  0094                     _SSPSTATbits	set	148
   117  0087                     _TRISCbits	set	135
   118  04C2                     _BRGH	set	1218
   119  04C4                     _SYNC	set	1220
   120  04C1                     _TRMT	set	1217
   121  04C5                     _TXEN	set	1221
   122                           
   123                           	psect	strings
   124  0003                     __pstrings:	
   125  0003                     stringtab:	
   126  0003                     __stringtab:	
   127                           
   128                           ;	String table - string pointers are 2 bytes each
   129  0003  1BFF               	btfsc	btemp+1,7
   130  0004  280D               	ljmp	stringcode
   131  0005  1383               	bcf	3,7
   132  0006  187F               	btfsc	btemp+1,0
   133  0007  1783               	bsf	3,7
   134  0008  0800               	movf	0,w
   135  0009  0A84               	incf	4,f
   136  000A  1903               	skipnz
   137  000B  0AFF               	incf	btemp+1,f
   138  000C  0008               	return
   139  000D                     stringcode:	
   140  000D  087F               	movf	btemp+1,w
   141  000E  397F               	andlw	127
   142  000F  008A               	movwf	10
   143  0010  0804               	movf	4,w
   144  0011  0A84               	incf	4,f
   145  0012  1903               	skipnz
   146  0013  0AFF               	incf	btemp+1,f
   147  0014  0082               	movwf	2
   148  0015                     __stringbase:	
   149  0015                     __end_of__stringtab:	
   150                           
   151                           	psect	stringtext
   152  0800                     __pstringtext:	
   153  0800                     STR_2:	
   154  0800  340D               	retlw	13
   155  0801  340A               	retlw	10
   156  0802  3445               	retlw	69	;'E'
   157  0803  346E               	retlw	110	;'n'
   158  0804  3474               	retlw	116	;'t'
   159  0805  3465               	retlw	101	;'e'
   160  0806  3472               	retlw	114	;'r'
   161  0807  3420               	retlw	32	;' '
   162  0808  3479               	retlw	121	;'y'
   163  0809  346F               	retlw	111	;'o'
   164  080A  3475               	retlw	117	;'u'
   165  080B  3472               	retlw	114	;'r'
   166  080C  3420               	retlw	32	;' '
   167  080D  3463               	retlw	99	;'c'
   168  080E  3468               	retlw	104	;'h'
   169  080F  346F               	retlw	111	;'o'
   170  0810  3469               	retlw	105	;'i'
   171  0811  3463               	retlw	99	;'c'
   172  0812  3465               	retlw	101	;'e'
   173  0813  3420               	retlw	32	;' '
   174  0814  340D               	retlw	13
   175  0815  340A               	retlw	10
   176  0816  3420               	retlw	32	;' '
   177  0817  3431               	retlw	49	;'1'
   178  0818  342E               	retlw	46	;'.'
   179  0819  3453               	retlw	83	;'S'
   180  081A  346C               	retlw	108	;'l'
   181  081B  3461               	retlw	97	;'a'
   182  081C  3476               	retlw	118	;'v'
   183  081D  3465               	retlw	101	;'e'
   184  081E  3420               	retlw	32	;' '
   185  081F  3431               	retlw	49	;'1'
   186  0820  3428               	retlw	40	;'('
   187  0821  3441               	retlw	65	;'A'
   188  0822  3464               	retlw	100	;'d'
   189  0823  3464               	retlw	100	;'d'
   190  0824  3472               	retlw	114	;'r'
   191  0825  3465               	retlw	101	;'e'
   192  0826  3473               	retlw	115	;'s'
   193  0827  3473               	retlw	115	;'s'
   194  0828  343A               	retlw	58	;':'
   195  0829  3430               	retlw	48	;'0'
   196  082A  3478               	retlw	120	;'x'
   197  082B  3441               	retlw	65	;'A'
   198  082C  3441               	retlw	65	;'A'
   199  082D  340D               	retlw	13
   200  082E  340A               	retlw	10
   201  082F  3432               	retlw	50	;'2'
   202  0830  342E               	retlw	46	;'.'
   203  0831  3453               	retlw	83	;'S'
   204  0832  346C               	retlw	108	;'l'
   205  0833  3461               	retlw	97	;'a'
   206  0834  3476               	retlw	118	;'v'
   207  0835  3465               	retlw	101	;'e'
   208  0836  3420               	retlw	32	;' '
   209  0837  3432               	retlw	50	;'2'
   210  0838  3428               	retlw	40	;'('
   211  0839  3441               	retlw	65	;'A'
   212  083A  3464               	retlw	100	;'d'
   213  083B  3464               	retlw	100	;'d'
   214  083C  3472               	retlw	114	;'r'
   215  083D  3465               	retlw	101	;'e'
   216  083E  3473               	retlw	115	;'s'
   217  083F  3473               	retlw	115	;'s'
   218  0840  343A               	retlw	58	;':'
   219  0841  3430               	retlw	48	;'0'
   220  0842  3478               	retlw	120	;'x'
   221  0843  3442               	retlw	66	;'B'
   222  0844  3442               	retlw	66	;'B'
   223  0845  3429               	retlw	41	;')'
   224  0846  340D               	retlw	13
   225  0847  340A               	retlw	10
   226  0848  3433               	retlw	51	;'3'
   227  0849  342E               	retlw	46	;'.'
   228  084A  3453               	retlw	83	;'S'
   229  084B  346C               	retlw	108	;'l'
   230  084C  3461               	retlw	97	;'a'
   231  084D  3476               	retlw	118	;'v'
   232  084E  3465               	retlw	101	;'e'
   233  084F  3420               	retlw	32	;' '
   234  0850  3433               	retlw	51	;'3'
   235  0851  3428               	retlw	40	;'('
   236  0852  3441               	retlw	65	;'A'
   237  0853  3464               	retlw	100	;'d'
   238  0854  3464               	retlw	100	;'d'
   239  0855  3472               	retlw	114	;'r'
   240  0856  3465               	retlw	101	;'e'
   241  0857  3473               	retlw	115	;'s'
   242  0858  3473               	retlw	115	;'s'
   243  0859  343A               	retlw	58	;':'
   244  085A  3430               	retlw	48	;'0'
   245  085B  3478               	retlw	120	;'x'
   246  085C  3443               	retlw	67	;'C'
   247  085D  3443               	retlw	67	;'C'
   248  085E  340D               	retlw	13
   249  085F  340A               	retlw	10
   250  0860  3400               	retlw	0
   251  0861                     STR_11:	
   252  0861  344E               	retlw	78	;'N'
   253  0862  346F               	retlw	111	;'o'
   254  0863  3420               	retlw	32	;' '
   255  0864  346D               	retlw	109	;'m'
   256  0865  3465               	retlw	101	;'e'
   257  0866  3473               	retlw	115	;'s'
   258  0867  3473               	retlw	115	;'s'
   259  0868  3461               	retlw	97	;'a'
   260  0869  3467               	retlw	103	;'g'
   261  086A  3465               	retlw	101	;'e'
   262  086B  3420               	retlw	32	;' '
   263  086C  3477               	retlw	119	;'w'
   264  086D  3469               	retlw	105	;'i'
   265  086E  346C               	retlw	108	;'l'
   266  086F  346C               	retlw	108	;'l'
   267  0870  3420               	retlw	32	;' '
   268  0871  3462               	retlw	98	;'b'
   269  0872  3465               	retlw	101	;'e'
   270  0873  3420               	retlw	32	;' '
   271  0874  3473               	retlw	115	;'s'
   272  0875  3465               	retlw	101	;'e'
   273  0876  346E               	retlw	110	;'n'
   274  0877  3474               	retlw	116	;'t'
   275  0878  3420               	retlw	32	;' '
   276  0879  3473               	retlw	115	;'s'
   277  087A  3469               	retlw	105	;'i'
   278  087B  346E               	retlw	110	;'n'
   279  087C  3463               	retlw	99	;'c'
   280  087D  3465               	retlw	101	;'e'
   281  087E  3420               	retlw	32	;' '
   282  087F  346E               	retlw	110	;'n'
   283  0880  346F               	retlw	111	;'o'
   284  0881  3420               	retlw	32	;' '
   285  0882  3473               	retlw	115	;'s'
   286  0883  346C               	retlw	108	;'l'
   287  0884  3461               	retlw	97	;'a'
   288  0885  3476               	retlw	118	;'v'
   289  0886  3465               	retlw	101	;'e'
   290  0887  3420               	retlw	32	;' '
   291  0888  346E               	retlw	110	;'n'
   292  0889  346F               	retlw	111	;'o'
   293  088A  3420               	retlw	32	;' '
   294  088B  3465               	retlw	101	;'e'
   295  088C  346E               	retlw	110	;'n'
   296  088D  3474               	retlw	116	;'t'
   297  088E  3465               	retlw	101	;'e'
   298  088F  3472               	retlw	114	;'r'
   299  0890  3465               	retlw	101	;'e'
   300  0891  3464               	retlw	100	;'d'
   301  0892  340D               	retlw	13
   302  0893  340A               	retlw	10
   303  0894  3400               	retlw	0
   304  0895                     STR_6:	
   305  0895  3453               	retlw	83	;'S'
   306  0896  3465               	retlw	101	;'e'
   307  0897  346E               	retlw	110	;'n'
   308  0898  3464               	retlw	100	;'d'
   309  0899  3469               	retlw	105	;'i'
   310  089A  346E               	retlw	110	;'n'
   311  089B  3467               	retlw	103	;'g'
   312  089C  3420               	retlw	32	;' '
   313  089D  3474               	retlw	116	;'t'
   314  089E  346F               	retlw	111	;'o'
   315  089F  3420               	retlw	32	;' '
   316  08A0  3453               	retlw	83	;'S'
   317  08A1  346C               	retlw	108	;'l'
   318  08A2  3461               	retlw	97	;'a'
   319  08A3  3476               	retlw	118	;'v'
   320  08A4  3465               	retlw	101	;'e'
   321  08A5  3420               	retlw	32	;' '
   322  08A6  3431               	retlw	49	;'1'
   323  08A7  3420               	retlw	32	;' '
   324  08A8  3428               	retlw	40	;'('
   325  08A9  3441               	retlw	65	;'A'
   326  08AA  3464               	retlw	100	;'d'
   327  08AB  3464               	retlw	100	;'d'
   328  08AC  3472               	retlw	114	;'r'
   329  08AD  3465               	retlw	101	;'e'
   330  08AE  3473               	retlw	115	;'s'
   331  08AF  3473               	retlw	115	;'s'
   332  08B0  3420               	retlw	32	;' '
   333  08B1  3430               	retlw	48	;'0'
   334  08B2  3478               	retlw	120	;'x'
   335  08B3  3441               	retlw	65	;'A'
   336  08B4  3441               	retlw	65	;'A'
   337  08B5  3429               	retlw	41	;')'
   338  08B6  340D               	retlw	13
   339  08B7  340A               	retlw	10
   340  08B8  3400               	retlw	0
   341  08B9                     STR_7:	
   342  08B9  3453               	retlw	83	;'S'
   343  08BA  3465               	retlw	101	;'e'
   344  08BB  346E               	retlw	110	;'n'
   345  08BC  3464               	retlw	100	;'d'
   346  08BD  3469               	retlw	105	;'i'
   347  08BE  346E               	retlw	110	;'n'
   348  08BF  3467               	retlw	103	;'g'
   349  08C0  3420               	retlw	32	;' '
   350  08C1  3474               	retlw	116	;'t'
   351  08C2  346F               	retlw	111	;'o'
   352  08C3  3420               	retlw	32	;' '
   353  08C4  3453               	retlw	83	;'S'
   354  08C5  346C               	retlw	108	;'l'
   355  08C6  3461               	retlw	97	;'a'
   356  08C7  3476               	retlw	118	;'v'
   357  08C8  3465               	retlw	101	;'e'
   358  08C9  3420               	retlw	32	;' '
   359  08CA  3432               	retlw	50	;'2'
   360  08CB  3420               	retlw	32	;' '
   361  08CC  3428               	retlw	40	;'('
   362  08CD  3441               	retlw	65	;'A'
   363  08CE  3464               	retlw	100	;'d'
   364  08CF  3464               	retlw	100	;'d'
   365  08D0  3472               	retlw	114	;'r'
   366  08D1  3465               	retlw	101	;'e'
   367  08D2  3473               	retlw	115	;'s'
   368  08D3  3473               	retlw	115	;'s'
   369  08D4  3420               	retlw	32	;' '
   370  08D5  3430               	retlw	48	;'0'
   371  08D6  3478               	retlw	120	;'x'
   372  08D7  3442               	retlw	66	;'B'
   373  08D8  3442               	retlw	66	;'B'
   374  08D9  3429               	retlw	41	;')'
   375  08DA  340D               	retlw	13
   376  08DB  340A               	retlw	10
   377  08DC  3400               	retlw	0
   378  08DD                     STR_8:	
   379  08DD  3453               	retlw	83	;'S'
   380  08DE  3465               	retlw	101	;'e'
   381  08DF  346E               	retlw	110	;'n'
   382  08E0  3464               	retlw	100	;'d'
   383  08E1  3469               	retlw	105	;'i'
   384  08E2  346E               	retlw	110	;'n'
   385  08E3  3467               	retlw	103	;'g'
   386  08E4  3420               	retlw	32	;' '
   387  08E5  3474               	retlw	116	;'t'
   388  08E6  346F               	retlw	111	;'o'
   389  08E7  3420               	retlw	32	;' '
   390  08E8  3453               	retlw	83	;'S'
   391  08E9  346C               	retlw	108	;'l'
   392  08EA  3461               	retlw	97	;'a'
   393  08EB  3476               	retlw	118	;'v'
   394  08EC  3465               	retlw	101	;'e'
   395  08ED  3420               	retlw	32	;' '
   396  08EE  3433               	retlw	51	;'3'
   397  08EF  3420               	retlw	32	;' '
   398  08F0  3428               	retlw	40	;'('
   399  08F1  3441               	retlw	65	;'A'
   400  08F2  3464               	retlw	100	;'d'
   401  08F3  3464               	retlw	100	;'d'
   402  08F4  3472               	retlw	114	;'r'
   403  08F5  3465               	retlw	101	;'e'
   404  08F6  3473               	retlw	115	;'s'
   405  08F7  3473               	retlw	115	;'s'
   406  08F8  3420               	retlw	32	;' '
   407  08F9  3430               	retlw	48	;'0'
   408  08FA  3478               	retlw	120	;'x'
   409  08FB  3443               	retlw	67	;'C'
   410  08FC  3443               	retlw	67	;'C'
   411  08FD  3429               	retlw	41	;')'
   412  08FE  340D               	retlw	13
   413  08FF  340A               	retlw	10
   414  0900  3400               	retlw	0
   415  0901                     STR_13:	
   416  0901  3459               	retlw	89	;'Y'
   417  0902  346F               	retlw	111	;'o'
   418  0903  3475               	retlw	117	;'u'
   419  0904  3420               	retlw	32	;' '
   420  0905  3468               	retlw	104	;'h'
   421  0906  3461               	retlw	97	;'a'
   422  0907  3476               	retlw	118	;'v'
   423  0908  3465               	retlw	101	;'e'
   424  0909  3420               	retlw	32	;' '
   425  090A  3465               	retlw	101	;'e'
   426  090B  346E               	retlw	110	;'n'
   427  090C  3474               	retlw	116	;'t'
   428  090D  3465               	retlw	101	;'e'
   429  090E  3472               	retlw	114	;'r'
   430  090F  3465               	retlw	101	;'e'
   431  0910  3464               	retlw	100	;'d'
   432  0911  3420               	retlw	32	;' '
   433  0912  3463               	retlw	99	;'c'
   434  0913  3468               	retlw	104	;'h'
   435  0914  346F               	retlw	111	;'o'
   436  0915  3469               	retlw	105	;'i'
   437  0916  3463               	retlw	99	;'c'
   438  0917  3465               	retlw	101	;'e'
   439  0918  3420               	retlw	32	;' '
   440  0919  346E               	retlw	110	;'n'
   441  091A  3475               	retlw	117	;'u'
   442  091B  346D               	retlw	109	;'m'
   443  091C  3462               	retlw	98	;'b'
   444  091D  3465               	retlw	101	;'e'
   445  091E  3472               	retlw	114	;'r'
   446  091F  340D               	retlw	13
   447  0920  340A               	retlw	10
   448  0921  3400               	retlw	0
   449  0922                     STR_1:	
   450  0922  340D               	retlw	13
   451  0923  340A               	retlw	10
   452  0924  3474               	retlw	116	;'t'
   453  0925  3461               	retlw	97	;'a'
   454  0926  346B               	retlw	107	;'k'
   455  0927  3469               	retlw	105	;'i'
   456  0928  346E               	retlw	110	;'n'
   457  0929  3467               	retlw	103	;'g'
   458  092A  3420               	retlw	32	;' '
   459  092B  3469               	retlw	105	;'i'
   460  092C  346E               	retlw	110	;'n'
   461  092D  3420               	retlw	32	;' '
   462  092E  3474               	retlw	116	;'t'
   463  092F  3468               	retlw	104	;'h'
   464  0930  3465               	retlw	101	;'e'
   465  0931  3420               	retlw	32	;' '
   466  0932  3474               	retlw	116	;'t'
   467  0933  3465               	retlw	101	;'e'
   468  0934  3478               	retlw	120	;'x'
   469  0935  3474               	retlw	116	;'t'
   470  0936  3420               	retlw	32	;' '
   471  0937  340D               	retlw	13
   472  0938  340A               	retlw	10
   473  0939  3400               	retlw	0
   474  093A                     STR_12:	
   475  093A  3443               	retlw	67	;'C'
   476  093B  346C               	retlw	108	;'l'
   477  093C  346F               	retlw	111	;'o'
   478  093D  3473               	retlw	115	;'s'
   479  093E  3469               	retlw	105	;'i'
   480  093F  346E               	retlw	110	;'n'
   481  0940  3467               	retlw	103	;'g'
   482  0941  3420               	retlw	32	;' '
   483  0942  3443               	retlw	67	;'C'
   484  0943  346F               	retlw	111	;'o'
   485  0944  346D               	retlw	109	;'m'
   486  0945  346D               	retlw	109	;'m'
   487  0946  3475               	retlw	117	;'u'
   488  0947  346E               	retlw	110	;'n'
   489  0948  3469               	retlw	105	;'i'
   490  0949  3463               	retlw	99	;'c'
   491  094A  3461               	retlw	97	;'a'
   492  094B  3474               	retlw	116	;'t'
   493  094C  3469               	retlw	105	;'i'
   494  094D  346F               	retlw	111	;'o'
   495  094E  346E               	retlw	110	;'n'
   496  094F  340D               	retlw	13
   497  0950  340A               	retlw	10
   498  0951  3400               	retlw	0
   499  0952                     STR_3:	
   500  0952  3459               	retlw	89	;'Y'
   501  0953  346F               	retlw	111	;'o'
   502  0954  3475               	retlw	117	;'u'
   503  0955  3420               	retlw	32	;' '
   504  0956  3468               	retlw	104	;'h'
   505  0957  3461               	retlw	97	;'a'
   506  0958  3476               	retlw	118	;'v'
   507  0959  3465               	retlw	101	;'e'
   508  095A  3420               	retlw	32	;' '
   509  095B  3465               	retlw	101	;'e'
   510  095C  346E               	retlw	110	;'n'
   511  095D  3474               	retlw	116	;'t'
   512  095E  3465               	retlw	101	;'e'
   513  095F  3472               	retlw	114	;'r'
   514  0960  3465               	retlw	101	;'e'
   515  0961  3464               	retlw	100	;'d'
   516  0962  343A               	retlw	58	;':'
   517  0963  340D               	retlw	13
   518  0964  340A               	retlw	10
   519  0965  3400               	retlw	0
   520  0966                     STR_14:	
   521  0966  3469               	retlw	105	;'i'
   522  0967  346E               	retlw	110	;'n'
   523  0968  3474               	retlw	116	;'t'
   524  0969  3465               	retlw	101	;'e'
   525  096A  3472               	retlw	114	;'r'
   526  096B  3472               	retlw	114	;'r'
   527  096C  3475               	retlw	117	;'u'
   528  096D  3470               	retlw	112	;'p'
   529  096E  3474               	retlw	116	;'t'
   530  096F  3420               	retlw	32	;' '
   531  0970  3472               	retlw	114	;'r'
   532  0971  346F               	retlw	111	;'o'
   533  0972  3475               	retlw	117	;'u'
   534  0973  3474               	retlw	116	;'t'
   535  0974  3469               	retlw	105	;'i'
   536  0975  346E               	retlw	110	;'n'
   537  0976  3465               	retlw	101	;'e'
   538  0977  340D               	retlw	13
   539  0978  340A               	retlw	10
   540  0979  3400               	retlw	0
   541  097A                     STR_5:	
   542  097A  3449               	retlw	73	;'I'
   543  097B  3432               	retlw	50	;'2'
   544  097C  3443               	retlw	67	;'C'
   545  097D  3420               	retlw	32	;' '
   546  097E  3469               	retlw	105	;'i'
   547  097F  346E               	retlw	110	;'n'
   548  0980  3469               	retlw	105	;'i'
   549  0981  3474               	retlw	116	;'t'
   550  0982  3469               	retlw	105	;'i'
   551  0983  3461               	retlw	97	;'a'
   552  0984  346C               	retlw	108	;'l'
   553  0985  3469               	retlw	105	;'i'
   554  0986  3473               	retlw	115	;'s'
   555  0987  3465               	retlw	101	;'e'
   556  0988  3464               	retlw	100	;'d'
   557  0989  343A               	retlw	58	;':'
   558  098A  340D               	retlw	13
   559  098B  340A               	retlw	10
   560  098C  3400               	retlw	0
   561  098D                     STR_4:	
   562  098D  3455               	retlw	85	;'U'
   563  098E  3441               	retlw	65	;'A'
   564  098F  3452               	retlw	82	;'R'
   565  0990  3454               	retlw	84	;'T'
   566  0991  3420               	retlw	32	;' '
   567  0992  3449               	retlw	73	;'I'
   568  0993  346E               	retlw	110	;'n'
   569  0994  3469               	retlw	105	;'i'
   570  0995  3474               	retlw	116	;'t'
   571  0996  3469               	retlw	105	;'i'
   572  0997  3461               	retlw	97	;'a'
   573  0998  346C               	retlw	108	;'l'
   574  0999  3469               	retlw	105	;'i'
   575  099A  3473               	retlw	115	;'s'
   576  099B  3465               	retlw	101	;'e'
   577  099C  3464               	retlw	100	;'d'
   578  099D  340D               	retlw	13
   579  099E  340A               	retlw	10
   580  099F  3400               	retlw	0
   581  09A0                     STR_9:	
   582  09A0  3461               	retlw	97	;'a'
   583  09A1  3464               	retlw	100	;'d'
   584  09A2  3464               	retlw	100	;'d'
   585  09A3  3472               	retlw	114	;'r'
   586  09A4  3465               	retlw	101	;'e'
   587  09A5  3473               	retlw	115	;'s'
   588  09A6  3473               	retlw	115	;'s'
   589  09A7  3420               	retlw	32	;' '
   590  09A8  3473               	retlw	115	;'s'
   591  09A9  3465               	retlw	101	;'e'
   592  09AA  346E               	retlw	110	;'n'
   593  09AB  3474               	retlw	116	;'t'
   594  09AC  340D               	retlw	13
   595  09AD  340A               	retlw	10
   596  09AE  3400               	retlw	0
   597  09AF                     STR_15:	
   598  09AF  344B               	retlw	75	;'K'
   599  09B0  3465               	retlw	101	;'e'
   600  09B1  3479               	retlw	121	;'y'
   601  09B2  3465               	retlw	101	;'e'
   602  09B3  3464               	retlw	100	;'d'
   603  09B4  3420               	retlw	32	;' '
   604  09B5  3469               	retlw	105	;'i'
   605  09B6  346E               	retlw	110	;'n'
   606  09B7  3420               	retlw	32	;' '
   607  09B8  340D               	retlw	13
   608  09B9  340A               	retlw	10
   609  09BA  3400               	retlw	0
   610  09BB                     STR_10:	
   611  09BB  3464               	retlw	100	;'d'
   612  09BC  3461               	retlw	97	;'a'
   613  09BD  3474               	retlw	116	;'t'
   614  09BE  3461               	retlw	97	;'a'
   615  09BF  3420               	retlw	32	;' '
   616  09C0  3473               	retlw	115	;'s'
   617  09C1  3465               	retlw	101	;'e'
   618  09C2  346E               	retlw	110	;'n'
   619  09C3  3474               	retlw	116	;'t'
   620  09C4  340D               	retlw	13
   621  09C5  340A               	retlw	10
   622  09C6  3400               	retlw	0
   623                           
   624                           ; #config settings
   625  0000                     
   626                           	psect	cinit
   627  07F4                     start_initialization:	
   628  07F4                     __initialization:	
   629                           
   630                           ; Clear objects allocated to BITBANK0
   631  07F4  01E9               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   632                           
   633                           ; Clear objects allocated to BANK0
   634  07F5  1383               	bcf	3,7	;select IRP bank0
   635  07F6  3051               	movlw	low __pbssBANK0
   636  07F7  0084               	movwf	4
   637  07F8  3069               	movlw	low (__pbssBANK0+24)
   638  07F9  120A  118A  2501   	fcall	clear_ram0
   639  07FC                     end_of_initialization:	
   640                           ;End of C runtime variable initialization code
   641                           
   642  07FC                     __end_of__initialization:	
   643  07FC  0183               	clrf	3
   644  07FD  120A  118A  2E42   	ljmp	_main	;jump to C main() function
   645                           
   646                           	psect	bitbssBANK0
   647  0348                     __pbitbssBANK0:	
   648  0348                     _IC2_ack:	
   649  0348                     	ds	1
   650                           
   651                           	psect	bssBANK0
   652  0051                     __pbssBANK0:	
   653  0051                     I2C_address_send1@con:	
   654  0051                     	ds	1
   655  0052                     I2C_address_send2@con:	
   656  0052                     	ds	1
   657  0053                     I2C_address_send@con:	
   658  0053                     	ds	1
   659  0054                     _is:	
   660  0054                     	ds	1
   661  0055                     UART_Read_Text@string:	
   662  0055                     	ds	20
   663                           
   664                           	psect	clrtext
   665  0501                     clear_ram0:	
   666                           ;	Called with FSR containing the base address, and
   667                           ;	W with the last address+1
   668                           
   669  0501  0064               	clrwdt	;clear the watchdog before getting into this loop
   670  0502                     clrloop0:	
   671  0502  0180               	clrf	0	;clear RAM location pointed to by FSR
   672  0503  0A84               	incf	4,f	;increment pointer
   673  0504  0604               	xorwf	4,w	;XOR with final address
   674  0505  1903               	btfsc	3,2	;have we reached the end yet?
   675  0506  3400               	retlw	0	;all done for this memory range, return
   676  0507  0604               	xorwf	4,w	;XOR again to restore value
   677  0508  2D02               	goto	clrloop0	;do the next byte
   678                           
   679                           	psect	cstackCOMMON
   680  0070                     __pcstackCOMMON:	
   681  0070                     ?_I2C_init:	
   682  0070                     ??_I2C_init:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ??_UART_Read:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ?_UART_Write:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ??_UART_Write:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_delay1ms:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ??_delay1ms:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ?_main:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_UART_Read_Text:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_UART_Read:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?___aldiv:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     UART_Write@data:	
   713                           ; 4 bytes @ 0x0
   714                           
   715  0070                     delay1ms@j:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ___aldiv@divisor:	
   719                           ; 2 bytes @ 0x0
   720                           
   721                           
   722                           ; 4 bytes @ 0x0
   723  0070                     	ds	1
   724  0071                     ?_UART_Write_Text:	
   725  0071                     UART_Write_Text@text:	
   726                           ; 0 bytes @ 0x1
   727                           
   728                           
   729                           ; 2 bytes @ 0x1
   730  0071                     	ds	1
   731  0072                     ?_delay_ms:	
   732  0072                     delay_ms@i:	
   733                           ; 0 bytes @ 0x2
   734                           
   735                           
   736                           ; 2 bytes @ 0x2
   737  0072                     	ds	1
   738  0073                     ??_UART_Write_Text:	
   739                           
   740                           ; 0 bytes @ 0x3
   741  0073                     	ds	1
   742  0074                     ??_delay_ms:	
   743  0074                     ___aldiv@dividend:	
   744                           ; 0 bytes @ 0x4
   745                           
   746                           
   747                           ; 4 bytes @ 0x4
   748  0074                     	ds	2
   749  0076                     UART_Write_Text@i:	
   750                           
   751                           ; 2 bytes @ 0x6
   752  0076                     	ds	2
   753  0078                     ??_UART_Read_Text:	
   754  0078                     ??___aldiv:	
   755                           ; 0 bytes @ 0x8
   756                           
   757                           
   758                           ; 0 bytes @ 0x8
   759  0078                     	ds	1
   760  0079                     UART_Init@x:	
   761  0079                     UART_Read_Text@a:	
   762                           ; 2 bytes @ 0x9
   763                           
   764                           
   765                           ; 2 bytes @ 0x9
   766  0079                     	ds	2
   767  007B                     UART_Read_Text@x:	
   768                           
   769                           ; 1 bytes @ 0xB
   770  007B                     	ds	1
   771  007C                     UART_Read_Text@i:	
   772                           
   773                           ; 1 bytes @ 0xC
   774  007C                     	ds	1
   775  007D                     ??_main:	
   776                           
   777                           ; 0 bytes @ 0xD
   778  007D                     	ds	1
   779                           
   780                           	psect	cstackBANK0
   781  0020                     __pcstackBANK0:	
   782  0020                     ___aldiv@counter:	
   783                           
   784                           ; 1 bytes @ 0x0
   785  0020                     	ds	1
   786  0021                     ___aldiv@sign:	
   787                           
   788                           ; 1 bytes @ 0x1
   789  0021                     	ds	1
   790  0022                     ___aldiv@quotient:	
   791                           
   792                           ; 4 bytes @ 0x2
   793  0022                     	ds	4
   794  0026                     ?_UART_Init:	
   795  0026                     UART_Init@baudrate:	
   796                           ; 1 bytes @ 0x6
   797                           
   798                           
   799                           ; 4 bytes @ 0x6
   800  0026                     	ds	4
   801  002A                     ??_UART_Init:	
   802                           
   803                           ; 0 bytes @ 0xA
   804  002A                     	ds	12
   805  0036                     main@msg1:	
   806                           
   807                           ; 2 bytes @ 0x16
   808  0036                     	ds	2
   809  0038                     main@msg2:	
   810                           
   811                           ; 2 bytes @ 0x18
   812  0038                     	ds	2
   813  003A                     main@msg3:	
   814                           
   815                           ; 2 bytes @ 0x1A
   816  003A                     	ds	2
   817  003C                     main@msg4:	
   818                           
   819                           ; 2 bytes @ 0x1C
   820  003C                     	ds	2
   821  003E                     main@msg5:	
   822                           
   823                           ; 2 bytes @ 0x1E
   824  003E                     	ds	2
   825  0040                     main@err:	
   826                           
   827                           ; 2 bytes @ 0x20
   828  0040                     	ds	2
   829  0042                     main@arr1:	
   830                           
   831                           ; 2 bytes @ 0x22
   832  0042                     	ds	2
   833  0044                     main@arr2:	
   834                           
   835                           ; 2 bytes @ 0x24
   836  0044                     	ds	2
   837  0046                     main@arr3:	
   838                           
   839                           ; 2 bytes @ 0x26
   840  0046                     	ds	2
   841  0048                     main@arr4:	
   842                           
   843                           ; 2 bytes @ 0x28
   844  0048                     	ds	2
   845  004A                     main@arr5:	
   846                           
   847                           ; 2 bytes @ 0x2A
   848  004A                     	ds	2
   849  004C                     main@fin:	
   850                           
   851                           ; 2 bytes @ 0x2C
   852  004C                     	ds	2
   853  004E                     main@msgm:	
   854                           
   855                           ; 2 bytes @ 0x2E
   856  004E                     	ds	2
   857  0050                     main@choice:	
   858                           
   859                           ; 1 bytes @ 0x30
   860  0050                     	ds	1
   861                           
   862                           	psect	maintext
   863  0642                     __pmaintext:	
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 75 in file "Lifitrial1.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  msgm            2   46[BANK0 ] PTR const unsigned char 
   874 ;;		 -> STR_13(33), 
   875 ;;  fin             2   44[BANK0 ] PTR const unsigned char 
   876 ;;		 -> STR_12(24), 
   877 ;;  arr5            2   42[BANK0 ] PTR const unsigned char 
   878 ;;		 -> STR_5(19), 
   879 ;;  arr4            2   40[BANK0 ] PTR const unsigned char 
   880 ;;		 -> STR_4(19), 
   881 ;;  arr3            2   38[BANK0 ] PTR const unsigned char 
   882 ;;		 -> STR_3(20), 
   883 ;;  arr2            2   36[BANK0 ] PTR const unsigned char 
   884 ;;		 -> STR_2(97), 
   885 ;;  arr1            2   34[BANK0 ] PTR const unsigned char 
   886 ;;		 -> STR_1(24), 
   887 ;;  err             2   32[BANK0 ] PTR const unsigned char 
   888 ;;		 -> STR_11(52), 
   889 ;;  msg5            2   30[BANK0 ] PTR const unsigned char 
   890 ;;		 -> STR_10(12), 
   891 ;;  msg4            2   28[BANK0 ] PTR const unsigned char 
   892 ;;		 -> STR_9(15), 
   893 ;;  msg3            2   26[BANK0 ] PTR const unsigned char 
   894 ;;		 -> STR_8(36), 
   895 ;;  msg2            2   24[BANK0 ] PTR const unsigned char 
   896 ;;		 -> STR_7(36), 
   897 ;;  msg1            2   22[BANK0 ] PTR const unsigned char 
   898 ;;		 -> STR_6(36), 
   899 ;;  choice          1   48[BANK0 ] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;		None               void
   902 ;; Registers used:
   903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : B00/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0      27       0       0       0
   911 ;;      Temps:          1       0       0       0       0
   912 ;;      Totals:         1      27       0       0       0
   913 ;;Total ram usage:       28 bytes
   914 ;; Hardware stack levels required when called:    3
   915 ;; This function calls:
   916 ;;		_I2C_init
   917 ;;		_UART_Init
   918 ;;		_UART_Read
   919 ;;		_UART_Read_Text
   920 ;;		_UART_Write
   921 ;;		_UART_Write_Text
   922 ;;		_delay_ms
   923 ;; This function is called by:
   924 ;;		Startup code after reset
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _main
   930  0642                     _main:	
   931                           
   932                           ;Lifitrial1.c: 79: const unsigned char * arr1 = "\r\ntaking in the text \r\n";
   933                           
   934                           ;incstack = 0
   935                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   936  0642  3022               	movlw	low (STR_1| (0+32768))
   937  0643  1283               	bcf	3,5	;RP0=0, select bank0
   938  0644  1303               	bcf	3,6	;RP1=0, select bank0
   939  0645  00C2               	movwf	main@arr1
   940  0646  3089               	movlw	high (STR_1| (0+32768))
   941  0647  00C3               	movwf	main@arr1+1
   942                           
   943                           ;Lifitrial1.c: 81: const unsigned char *arr2="\r\nEnter your choice \r\n 1.Slave 1(Addre
      +                          ss:0xAA\r\n2.Slave 2(Address:0xBB)\r\n3.Slave 3(Address:0xCC\r\n";
   944  0648  3000               	movlw	low (STR_2| (0+32768))
   945  0649  00C4               	movwf	main@arr2
   946  064A  3088               	movlw	high (STR_2| (0+32768))
   947  064B  00C5               	movwf	main@arr2+1
   948                           
   949                           ;Lifitrial1.c: 83: const unsigned char *arr3= "You have entered:\r\n";
   950  064C  3052               	movlw	low (STR_3| (0+32768))
   951  064D  00C6               	movwf	main@arr3
   952  064E  3089               	movlw	high (STR_3| (0+32768))
   953  064F  00C7               	movwf	main@arr3+1
   954                           
   955                           ;Lifitrial1.c: 85: const unsigned char *arr4= "UART Initialised\r\n";
   956  0650  308D               	movlw	low (STR_4| (0+32768))
   957  0651  00C8               	movwf	main@arr4
   958  0652  3089               	movlw	high (STR_4| (0+32768))
   959  0653  00C9               	movwf	main@arr4+1
   960                           
   961                           ;Lifitrial1.c: 87: const unsigned char *arr5= "I2C initialised:\r\n";
   962  0654  307A               	movlw	low (STR_5| (0+32768))
   963  0655  00CA               	movwf	main@arr5
   964  0656  3089               	movlw	high (STR_5| (0+32768))
   965  0657  00CB               	movwf	main@arr5+1
   966                           
   967                           ;Lifitrial1.c: 89: const unsigned char *msg1="Sending to Slave 1 (Address 0xAA)\r\n";
   968  0658  3095               	movlw	low (STR_6| (0+32768))
   969  0659  00B6               	movwf	main@msg1
   970  065A  3088               	movlw	high (STR_6| (0+32768))
   971  065B  00B7               	movwf	main@msg1+1
   972                           
   973                           ;Lifitrial1.c: 91: const unsigned char *msg2="Sending to Slave 2 (Address 0xBB)\r\n";
   974  065C  30B9               	movlw	low (STR_7| (0+32768))
   975  065D  00B8               	movwf	main@msg2
   976  065E  3088               	movlw	high (STR_7| (0+32768))
   977  065F  00B9               	movwf	main@msg2+1
   978                           
   979                           ;Lifitrial1.c: 93: const unsigned char *msg3="Sending to Slave 3 (Address 0xCC)\r\n";
   980  0660  30DD               	movlw	low (STR_8| (0+32768))
   981  0661  00BA               	movwf	main@msg3
   982  0662  3088               	movlw	high (STR_8| (0+32768))
   983  0663  00BB               	movwf	main@msg3+1
   984                           
   985                           ;Lifitrial1.c: 95: const unsigned char *msg4="address sent\r\n";
   986  0664  30A0               	movlw	low (STR_9| (0+32768))
   987  0665  00BC               	movwf	main@msg4
   988  0666  3089               	movlw	high (STR_9| (0+32768))
   989  0667  00BD               	movwf	main@msg4+1
   990                           
   991                           ;Lifitrial1.c: 97: const unsigned char *msg5="data sent\r\n";
   992  0668  30BB               	movlw	low (STR_10| (0+32768))
   993  0669  00BE               	movwf	main@msg5
   994  066A  3089               	movlw	high (STR_10| (0+32768))
   995  066B  00BF               	movwf	main@msg5+1
   996                           
   997                           ;Lifitrial1.c: 103: const unsigned char *err="No message will be sent since no slave no 
      +                          entered\r\n";
   998  066C  3061               	movlw	low (STR_11| (0+32768))
   999  066D  00C0               	movwf	main@err
  1000  066E  3088               	movlw	high (STR_11| (0+32768))
  1001  066F  00C1               	movwf	main@err+1
  1002                           
  1003                           ;Lifitrial1.c: 105: const unsigned char *fin="Closing Communication\r\n";
  1004  0670  303A               	movlw	low (STR_12| (0+32768))
  1005  0671  00CC               	movwf	main@fin
  1006  0672  3089               	movlw	high (STR_12| (0+32768))
  1007  0673  00CD               	movwf	main@fin+1
  1008                           
  1009                           ;Lifitrial1.c: 107: const unsigned char *msgm="You have entered choice number\r\n";
  1010  0674  3001               	movlw	low (STR_13| (0+32768))
  1011  0675  00CE               	movwf	main@msgm
  1012  0676  3089               	movlw	high (STR_13| (0+32768))
  1013  0677  00CF               	movwf	main@msgm+1
  1014                           
  1015                           ;Lifitrial1.c: 109: unsigned char choice;
  1016                           ;Lifitrial1.c: 111: OSCCONbits.IRCF = 0x07;
  1017  0678  3070               	movlw	112
  1018  0679  1683               	bsf	3,5	;RP0=1, select bank1
  1019  067A  1303               	bcf	3,6	;RP1=0, select bank1
  1020  067B  048F               	iorwf	15,f	;volatile
  1021  067C                     l69:	
  1022                           ;Lifitrial1.c: 113: while(!OSCCONbits.HTS);
  1023                           
  1024  067C  1D0F               	btfss	15,2	;volatile
  1025  067D  2E7C               	goto	l69
  1026                           
  1027                           ;Lifitrial1.c: 115: INTCON=0;
  1028  067E  018B               	clrf	11	;volatile
  1029                           
  1030                           ;Lifitrial1.c: 117: UART_Init(9600);
  1031  067F  3000               	movlw	0
  1032  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0682  00A9               	movwf	UART_Init@baudrate+3
  1035  0683  3000               	movlw	0
  1036  0684  00A8               	movwf	UART_Init@baudrate+2
  1037  0685  3025               	movlw	37
  1038  0686  00A7               	movwf	UART_Init@baudrate+1
  1039  0687  3080               	movlw	128
  1040  0688  00A6               	movwf	UART_Init@baudrate
  1041  0689  120A  118A  2707  120A  118A  	fcall	_UART_Init
  1042                           
  1043                           ;Lifitrial1.c: 119: UART_Write_Text(arr4);
  1044  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1045  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0690  0848               	movf	main@arr4,w
  1047  0691  00F1               	movwf	UART_Write_Text@text
  1048  0692  0849               	movf	main@arr4+1,w
  1049  0693  00F2               	movwf	UART_Write_Text@text+1
  1050  0694  120A  118A  2576  120A  118A  	fcall	_UART_Write_Text
  1051                           
  1052                           ;Lifitrial1.c: 121: delay_ms(500);
  1053  0699  30F4               	movlw	244
  1054  069A  00F2               	movwf	delay_ms@i
  1055  069B  3001               	movlw	1
  1056  069C  00F3               	movwf	delay_ms@i+1
  1057  069D  120A  118A  2526  120A  118A  	fcall	_delay_ms
  1058                           
  1059                           ;Lifitrial1.c: 123: I2C_init();
  1060  06A2  120A  118A  2536  120A  118A  	fcall	_I2C_init
  1061                           
  1062                           ;Lifitrial1.c: 125: UART_Write_Text(arr5);
  1063  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1064  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1065  06A9  084A               	movf	main@arr5,w
  1066  06AA  00F1               	movwf	UART_Write_Text@text
  1067  06AB  084B               	movf	main@arr5+1,w
  1068  06AC                     L1:	
  1069  06AC  00F2               	movwf	UART_Write_Text@text+1
  1070  06AD  120A  118A  2576  120A  118A  	fcall	_UART_Write_Text
  1071                           
  1072                           ;Lifitrial1.c: 129: {
  1073                           ;Lifitrial1.c: 130: UART_Write_Text(arr1);
  1074                           
  1075                           ;Lifitrial1.c: 128: while(1)
  1076  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1077  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1078  06B4  0842               	movf	main@arr1,w
  1079  06B5  00F1               	movwf	UART_Write_Text@text
  1080  06B6  0843               	movf	main@arr1+1,w
  1081  06B7  00F2               	movwf	UART_Write_Text@text+1
  1082  06B8  120A  118A  2576  120A  118A  	fcall	_UART_Write_Text
  1083                           
  1084                           ;Lifitrial1.c: 135: is=UART_Read_Text();
  1085  06BD  120A  118A  254A  120A  118A  	fcall	_UART_Read_Text
  1086  06C2  00FD               	movwf	??_main
  1087  06C3  087D               	movf	??_main,w
  1088  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1089  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1090  06C6  00D4               	movwf	_is
  1091                           
  1092                           ;Lifitrial1.c: 137: UART_Write_Text(arr3);
  1093  06C7  0846               	movf	main@arr3,w
  1094  06C8  00F1               	movwf	UART_Write_Text@text
  1095  06C9  0847               	movf	main@arr3+1,w
  1096  06CA  00F2               	movwf	UART_Write_Text@text+1
  1097  06CB  120A  118A  2576  120A  118A  	fcall	_UART_Write_Text
  1098                           
  1099                           ;Lifitrial1.c: 139: UART_Write_Text(is);
  1100  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1101  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1102  06D2  0854               	movf	_is,w
  1103  06D3  00F1               	movwf	UART_Write_Text@text
  1104  06D4  3000               	movlw	0
  1105  06D5  00F2               	movwf	UART_Write_Text@text+1
  1106  06D6  120A  118A  2576  120A  118A  	fcall	_UART_Write_Text
  1107                           
  1108                           ;Lifitrial1.c: 141: UART_Write_Text(arr2);
  1109  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1110  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1111  06DD  0844               	movf	main@arr2,w
  1112  06DE  00F1               	movwf	UART_Write_Text@text
  1113  06DF  0845               	movf	main@arr2+1,w
  1114  06E0  00F2               	movwf	UART_Write_Text@text+1
  1115  06E1  120A  118A  2576  120A  118A  	fcall	_UART_Write_Text
  1116                           
  1117                           ;Lifitrial1.c: 143: choice=UART_Read();
  1118  06E6  120A  118A  24FB  120A  118A  	fcall	_UART_Read
  1119  06EB  00FD               	movwf	??_main
  1120  06EC  087D               	movf	??_main,w
  1121  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1122  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1123  06EF  00D0               	movwf	main@choice
  1124                           
  1125                           ;Lifitrial1.c: 145: UART_Write_Text(msgm);
  1126  06F0  084E               	movf	main@msgm,w
  1127  06F1  00F1               	movwf	UART_Write_Text@text
  1128  06F2  084F               	movf	main@msgm+1,w
  1129  06F3  00F2               	movwf	UART_Write_Text@text+1
  1130  06F4  120A  118A  2576  120A  118A  	fcall	_UART_Write_Text
  1131                           
  1132                           ;Lifitrial1.c: 147: UART_Write(choice);
  1133  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1134  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1135  06FB  0850               	movf	main@choice,w
  1136  06FC  120A  118A  2509  120A  118A  	fcall	_UART_Write
  1137                           
  1138                           ;Lifitrial1.c: 219: UART_Write_Text(fin);
  1139  0701  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0702  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0703  084C               	movf	main@fin,w
  1142  0704  00F1               	movwf	UART_Write_Text@text
  1143  0705  084D               	movf	main@fin+1,w
  1144  0706  2EAC               	goto	L1
  1145  0707                     __end_of_main:	
  1146                           
  1147                           	psect	text1
  1148  0526                     __ptext1:	
  1149 ;; *************** function _delay_ms *****************
  1150 ;; Defined at:
  1151 ;;		line 331 in file "Lifitrial1.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  i               2    2[COMMON] unsigned int 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;		None               void
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0, pclath, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1165 ;;      Params:         2       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0
  1168 ;;      Totals:         2       0       0       0       0
  1169 ;;Total ram usage:        2 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    1
  1172 ;; This function calls:
  1173 ;;		_delay1ms
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _delay_ms
  1181  0526                     _delay_ms:	
  1182                           
  1183                           ;Lifitrial1.c: 333: for(;i!=0x00;i--)
  1184                           
  1185                           ;incstack = 0
  1186                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  1187  0526  0872               	movf	delay_ms@i,w
  1188  0527  0473               	iorwf	delay_ms@i+1,w
  1189  0528  1903               	btfsc	3,2
  1190  0529  0008               	return
  1191                           
  1192                           ;Lifitrial1.c: 334: delay1ms();
  1193  052A  120A  118A  2517  120A  118A  	fcall	_delay1ms
  1194  052F  3001               	movlw	1
  1195  0530  02F2               	subwf	delay_ms@i,f
  1196  0531  3000               	movlw	0
  1197  0532  1C03               	skipc
  1198  0533  03F3               	decf	delay_ms@i+1,f
  1199  0534  02F3               	subwf	delay_ms@i+1,f
  1200  0535  2D26               	goto	_delay_ms
  1201  0536                     __end_of_delay_ms:	
  1202                           
  1203                           	psect	text2
  1204  0517                     __ptext2:	
  1205 ;; *************** function _delay1ms *****************
  1206 ;; Defined at:
  1207 ;;		line 337 in file "Lifitrial1.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  j               2    0[COMMON] unsigned int 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;		None               void
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         2       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         2       0       0       0       0
  1225 ;;Total ram usage:        2 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_delay_ms
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _delay1ms
  1236  0517                     _delay1ms:	
  1237                           
  1238                           ;Lifitrial1.c: 339: unsigned int j = 130;
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in _delay1ms: [wreg+status,2+status,0]
  1242  0517  3082               	movlw	130
  1243  0518  00F0               	movwf	delay1ms@j
  1244  0519  3000               	movlw	0
  1245  051A  00F1               	movwf	delay1ms@j+1
  1246  051B                     L2:	
  1247                           
  1248                           ;Lifitrial1.c: 340: for (;j!=0x00;j--);
  1249  051B  0870               	movf	delay1ms@j,w
  1250  051C  0471               	iorwf	delay1ms@j+1,w
  1251  051D  1903               	btfsc	3,2
  1252  051E  0008               	return
  1253  051F  3001               	movlw	1
  1254  0520  02F0               	subwf	delay1ms@j,f
  1255  0521  3000               	movlw	0
  1256  0522  1C03               	skipc
  1257  0523  03F1               	decf	delay1ms@j+1,f
  1258  0524  02F1               	subwf	delay1ms@j+1,f
  1259  0525  2D1B               	goto	L2
  1260  0526                     __end_of_delay1ms:	
  1261                           
  1262                           	psect	text3
  1263  054A                     __ptext3:	
  1264 ;; *************** function _UART_Read_Text *****************
  1265 ;; Defined at:
  1266 ;;		line 403 in file "Lifitrial1.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  a               2    9[COMMON] PTR const unsigned char 
  1271 ;;		 -> STR_15(12), 
  1272 ;;  i               1   12[COMMON] unsigned char 
  1273 ;;  x               1   11[COMMON] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      PTR unsigned char 
  1276 ;; Registers used:
  1277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1283 ;;      Params:         0       0       0       0       0
  1284 ;;      Locals:         4       0       0       0       0
  1285 ;;      Temps:          1       0       0       0       0
  1286 ;;      Totals:         5       0       0       0       0
  1287 ;;Total ram usage:        5 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    2
  1290 ;; This function calls:
  1291 ;;		_UART_Read
  1292 ;;		_UART_Write_Text
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function _UART_Read_Text
  1300  054A                     _UART_Read_Text:	
  1301                           
  1302                           ;Lifitrial1.c: 405: unsigned const char *a="Keyed in \r\n";
  1303                           
  1304                           ;incstack = 0
  1305                           ; Regs used in _UART_Read_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1306  054A  30AF               	movlw	low (STR_15| (0+32768))
  1307  054B  00F9               	movwf	UART_Read_Text@a
  1308  054C  3089               	movlw	high (STR_15| (0+32768))
  1309  054D  00FA               	movwf	UART_Read_Text@a+1
  1310                           
  1311                           ;Lifitrial1.c: 406: unsigned static char string[20];
  1312                           ;Lifitrial1.c: 407: unsigned char x, i = 0;
  1313  054E  01FC               	clrf	UART_Read_Text@i
  1314  054F                     l1068:	
  1315                           ;Lifitrial1.c: 410: while((x = UART_Read()) != 13)
  1316                           
  1317  054F  120A  118A  24FB  120A  118A  	fcall	_UART_Read
  1318  0554  00F8               	movwf	??_UART_Read_Text
  1319  0555  0878               	movf	??_UART_Read_Text,w
  1320  0556  00FB               	movwf	UART_Read_Text@x
  1321  0557  300D               	movlw	13
  1322  0558  067B               	xorwf	UART_Read_Text@x,w
  1323  0559  1903               	btfsc	3,2
  1324  055A  2D68               	goto	l1070
  1325                           
  1326                           ;Lifitrial1.c: 411: {
  1327                           ;Lifitrial1.c: 413: string[i++] = x;
  1328  055B  087B               	movf	UART_Read_Text@x,w
  1329  055C  00F8               	movwf	??_UART_Read_Text
  1330  055D  087C               	movf	UART_Read_Text@i,w
  1331  055E  3E55               	addlw	(low (UART_Read_Text@string| 0))& (0+255)
  1332  055F  0084               	movwf	4
  1333  0560  0878               	movf	??_UART_Read_Text,w
  1334  0561  1383               	bcf	3,7	;select IRP bank0
  1335  0562  0080               	movwf	0
  1336  0563  3001               	movlw	1
  1337  0564  00F8               	movwf	??_UART_Read_Text
  1338  0565  0878               	movf	??_UART_Read_Text,w
  1339  0566  07FC               	addwf	UART_Read_Text@i,f
  1340  0567  2D4F               	goto	l1068
  1341  0568                     l1070:	
  1342                           
  1343                           ;Lifitrial1.c: 414: }
  1344                           ;Lifitrial1.c: 417: string[i] = '\0';
  1345  0568  087C               	movf	UART_Read_Text@i,w
  1346  0569  3E55               	addlw	(low (UART_Read_Text@string| 0))& (0+255)
  1347  056A  0084               	movwf	4
  1348  056B  1383               	bcf	3,7	;select IRP bank0
  1349  056C  0180               	clrf	0
  1350                           
  1351                           ;Lifitrial1.c: 418: UART_Write_Text(a);
  1352  056D  0879               	movf	UART_Read_Text@a,w
  1353  056E  00F1               	movwf	UART_Write_Text@text
  1354  056F  087A               	movf	UART_Read_Text@a+1,w
  1355  0570  00F2               	movwf	UART_Write_Text@text+1
  1356  0571  120A  118A  2576   	fcall	_UART_Write_Text
  1357                           
  1358                           ;Lifitrial1.c: 421: return(string);
  1359  0574  3055               	movlw	(low (UART_Read_Text@string| 0))& (0+255)
  1360  0575  0008               	return
  1361  0576                     __end_of_UART_Read_Text:	
  1362                           
  1363                           	psect	text4
  1364  0576                     __ptext4:	
  1365 ;; *************** function _UART_Write_Text *****************
  1366 ;; Defined at:
  1367 ;;		line 383 in file "Lifitrial1.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  text            2    1[COMMON] PTR const unsigned char 
  1370 ;;		 -> NULL(0), UART_Read_Text@string(20), STR_15(12), STR_14(20), 
  1371 ;;		 -> STR_13(33), STR_12(24), STR_5(19), STR_4(19), 
  1372 ;;		 -> STR_3(20), STR_2(97), STR_1(24), 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  i               2    6[COMMON] int 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;		None               void
  1377 ;; Registers used:
  1378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         2       0       0       0       0
  1385 ;;      Locals:         2       0       0       0       0
  1386 ;;      Temps:          3       0       0       0       0
  1387 ;;      Totals:         7       0       0       0       0
  1388 ;;Total ram usage:        7 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    1
  1391 ;; This function calls:
  1392 ;;		_UART_Write
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;;		_UART_Read_Text
  1396 ;;		_I2C_Write
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _UART_Write_Text
  1402  0576                     _UART_Write_Text:	
  1403                           
  1404                           ;Lifitrial1.c: 385: int i;
  1405                           ;Lifitrial1.c: 386: for(i=0;text[i]!='\0';i++)
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1409  0576  01F6               	clrf	UART_Write_Text@i
  1410  0577  01F7               	clrf	UART_Write_Text@i+1
  1411  0578                     l948:	
  1412  0578  0876               	movf	UART_Write_Text@i,w
  1413  0579  0771               	addwf	UART_Write_Text@text,w
  1414  057A  00F4               	movwf	??_UART_Write_Text+1
  1415  057B  0872               	movf	UART_Write_Text@text+1,w
  1416  057C  00F3               	movwf	??_UART_Write_Text
  1417  057D  1803               	skipnc
  1418  057E  0AF3               	incf	??_UART_Write_Text,f
  1419  057F  1BF6               	btfsc	UART_Write_Text@i,7
  1420  0580  03F3               	decf	??_UART_Write_Text,f
  1421  0581  0873               	movf	??_UART_Write_Text,w
  1422  0582  00F5               	movwf	??_UART_Write_Text+2
  1423  0583  0875               	movf	??_UART_Write_Text+2,w
  1424  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0586  00FF               	movwf	127
  1427  0587  0874               	movf	??_UART_Write_Text+1,w
  1428  0588  0084               	movwf	4
  1429  0589  120A  118A  2003  120A  118A  	fcall	stringtab
  1430  058E  3A00               	xorlw	0
  1431  058F  1903               	btfsc	3,2
  1432  0590  0008               	return
  1433                           
  1434                           ;Lifitrial1.c: 387: UART_Write(text[i]);
  1435  0591  0876               	movf	UART_Write_Text@i,w
  1436  0592  0771               	addwf	UART_Write_Text@text,w
  1437  0593  00F4               	movwf	??_UART_Write_Text+1
  1438  0594  0872               	movf	UART_Write_Text@text+1,w
  1439  0595  00F3               	movwf	??_UART_Write_Text
  1440  0596  1803               	skipnc
  1441  0597  0AF3               	incf	??_UART_Write_Text,f
  1442  0598  1BF6               	btfsc	UART_Write_Text@i,7
  1443  0599  03F3               	decf	??_UART_Write_Text,f
  1444  059A  0873               	movf	??_UART_Write_Text,w
  1445  059B  00F5               	movwf	??_UART_Write_Text+2
  1446  059C  0875               	movf	??_UART_Write_Text+2,w
  1447  059D  1283               	bcf	3,5	;RP0=0, select bank0
  1448  059E  1303               	bcf	3,6	;RP1=0, select bank0
  1449  059F  00FF               	movwf	127
  1450  05A0  0874               	movf	??_UART_Write_Text+1,w
  1451  05A1  0084               	movwf	4
  1452  05A2  120A  118A  2003  120A  118A  	fcall	stringtab
  1453  05A7  120A  118A  2509  120A  118A  	fcall	_UART_Write
  1454  05AC  3001               	movlw	1
  1455  05AD  07F6               	addwf	UART_Write_Text@i,f
  1456  05AE  1803               	skipnc
  1457  05AF  0AF7               	incf	UART_Write_Text@i+1,f
  1458  05B0  3000               	movlw	0
  1459  05B1  07F7               	addwf	UART_Write_Text@i+1,f
  1460  05B2  2D78               	goto	l948
  1461  05B3                     __end_of_UART_Write_Text:	
  1462                           
  1463                           	psect	text5
  1464  0509                     __ptext5:	
  1465 ;; *************** function _UART_Write *****************
  1466 ;; Defined at:
  1467 ;;		line 371 in file "Lifitrial1.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  data            1    wreg     unsigned char 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  data            1    0[COMMON] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;		None               void
  1474 ;; Registers used:
  1475 ;;		wreg
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1481 ;;      Params:         0       0       0       0       0
  1482 ;;      Locals:         1       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0
  1484 ;;      Totals:         1       0       0       0       0
  1485 ;;Total ram usage:        1 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;;		_UART_Write_Text
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _UART_Write
  1497  0509                     _UART_Write:	
  1498                           
  1499                           ;incstack = 0
  1500                           ; Regs used in _UART_Write: [wreg]
  1501                           ;UART_Write@data stored from wreg
  1502  0509  00F0               	movwf	UART_Write@data
  1503  050A                     l158:	
  1504                           ;Lifitrial1.c: 373: while(!PIR1bits.TXIF);
  1505                           
  1506  050A  1283               	bcf	3,5	;RP0=0, select bank0
  1507  050B  1303               	bcf	3,6	;RP1=0, select bank0
  1508  050C  1E0C               	btfss	12,4	;volatile
  1509  050D  2D0A               	goto	l158
  1510  050E                     l161:	
  1511                           ;Lifitrial1.c: 374: while(!TRMT);
  1512                           
  1513  050E  1683               	bsf	3,5	;RP0=1, select bank1
  1514  050F  1303               	bcf	3,6	;RP1=0, select bank1
  1515  0510  1C98               	btfss	24,1	;volatile
  1516  0511  2D0E               	goto	l161
  1517                           
  1518                           ;Lifitrial1.c: 375: TXREG = data;
  1519  0512  0870               	movf	UART_Write@data,w
  1520  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0515  0099               	movwf	25	;volatile
  1523  0516  0008               	return
  1524  0517                     __end_of_UART_Write:	
  1525                           
  1526                           	psect	text6
  1527  04FB                     __ptext6:	
  1528 ;; *************** function _UART_Read *****************
  1529 ;; Defined at:
  1530 ;;		line 397 in file "Lifitrial1.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      unsigned char 
  1537 ;; Registers used:
  1538 ;;		wreg
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;;		_UART_Read_Text
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _UART_Read
  1560  04FB                     _UART_Read:	
  1561  04FB                     l179:	
  1562                           ;Lifitrial1.c: 399: while(!RCIF);
  1563                           
  1564                           ;incstack = 0
  1565                           ; Regs used in _UART_Read: [wreg]
  1566                           
  1567  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  1568  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  1569  04FD  1E8C               	btfss	12,5	;volatile
  1570  04FE  2CFB               	goto	l179
  1571                           
  1572                           ;Lifitrial1.c: 400: return RCREG;
  1573  04FF  081A               	movf	26,w	;volatile
  1574  0500  0008               	return
  1575  0501                     __end_of_UART_Read:	
  1576                           
  1577                           	psect	text7
  1578  0707                     __ptext7:	
  1579 ;; *************** function _UART_Init *****************
  1580 ;; Defined at:
  1581 ;;		line 343 in file "Lifitrial1.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  baudrate        4    6[BANK0 ] long 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  x               2    9[COMMON] unsigned int 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      unsigned char 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       4       0       0       0
  1596 ;;      Locals:         2       0       0       0       0
  1597 ;;      Temps:          0      12       0       0       0
  1598 ;;      Totals:         2      16       0       0       0
  1599 ;;Total ram usage:       18 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    1
  1602 ;; This function calls:
  1603 ;;		___aldiv
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _UART_Init
  1611  0707                     _UART_Init:	
  1612                           
  1613                           ;Lifitrial1.c: 345: unsigned int x;
  1614                           ;Lifitrial1.c: 346: x = (8000000 - baudrate*64)/(baudrate*64);
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1618  0707  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0708  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0709  0826               	movf	UART_Init@baudrate,w
  1621  070A  00AA               	movwf	??_UART_Init
  1622  070B  0827               	movf	UART_Init@baudrate+1,w
  1623  070C  00AB               	movwf	??_UART_Init+1
  1624  070D  0828               	movf	UART_Init@baudrate+2,w
  1625  070E  00AC               	movwf	??_UART_Init+2
  1626  070F  0829               	movf	UART_Init@baudrate+3,w
  1627  0710  00AD               	movwf	??_UART_Init+3
  1628  0711  3006               	movlw	6
  1629  0712                     u665:	
  1630  0712  1003               	clrc
  1631  0713  0DAA               	rlf	??_UART_Init,f
  1632  0714  0DAB               	rlf	??_UART_Init+1,f
  1633  0715  0DAC               	rlf	??_UART_Init+2,f
  1634  0716  0DAD               	rlf	??_UART_Init+3,f
  1635  0717  3EFF               	addlw	-1
  1636  0718  1D03               	skipz
  1637  0719  2F12               	goto	u665
  1638  071A  082D               	movf	??_UART_Init+3,w
  1639  071B  00F3               	movwf	___aldiv@divisor+3
  1640  071C  082C               	movf	??_UART_Init+2,w
  1641  071D  00F2               	movwf	___aldiv@divisor+2
  1642  071E  082B               	movf	??_UART_Init+1,w
  1643  071F  00F1               	movwf	___aldiv@divisor+1
  1644  0720  082A               	movf	??_UART_Init,w
  1645  0721  00F0               	movwf	___aldiv@divisor
  1646  0722  3000               	movlw	0
  1647  0723  00AE               	movwf	??_UART_Init+4
  1648  0724  3012               	movlw	18
  1649  0725  00AF               	movwf	??_UART_Init+5
  1650  0726  307A               	movlw	122
  1651  0727  00B0               	movwf	??_UART_Init+6
  1652  0728  3000               	movlw	0
  1653  0729  00B1               	movwf	??_UART_Init+7
  1654  072A  0826               	movf	UART_Init@baudrate,w
  1655  072B  00B2               	movwf	??_UART_Init+8
  1656  072C  0827               	movf	UART_Init@baudrate+1,w
  1657  072D  00B3               	movwf	??_UART_Init+9
  1658  072E  0828               	movf	UART_Init@baudrate+2,w
  1659  072F  00B4               	movwf	??_UART_Init+10
  1660  0730  0829               	movf	UART_Init@baudrate+3,w
  1661  0731  00B5               	movwf	??_UART_Init+11
  1662  0732  3006               	movlw	6
  1663  0733                     u675:	
  1664  0733  1003               	clrc
  1665  0734  0DB2               	rlf	??_UART_Init+8,f
  1666  0735  0DB3               	rlf	??_UART_Init+9,f
  1667  0736  0DB4               	rlf	??_UART_Init+10,f
  1668  0737  0DB5               	rlf	??_UART_Init+11,f
  1669  0738  3EFF               	addlw	-1
  1670  0739  1D03               	skipz
  1671  073A  2F33               	goto	u675
  1672  073B  09B2               	comf	??_UART_Init+8,f
  1673  073C  09B3               	comf	??_UART_Init+9,f
  1674  073D  09B4               	comf	??_UART_Init+10,f
  1675  073E  09B5               	comf	??_UART_Init+11,f
  1676  073F  0AB2               	incf	??_UART_Init+8,f
  1677  0740  1903               	skipnz
  1678  0741  0AB3               	incf	??_UART_Init+9,f
  1679  0742  1903               	skipnz
  1680  0743  0AB4               	incf	??_UART_Init+10,f
  1681  0744  1903               	skipnz
  1682  0745  0AB5               	incf	??_UART_Init+11,f
  1683  0746  0832               	movf	??_UART_Init+8,w
  1684  0747  07AE               	addwf	??_UART_Init+4,f
  1685  0748  0833               	movf	??_UART_Init+9,w
  1686  0749  1803               	skipnc
  1687  074A  0F33               	incfsz	??_UART_Init+9,w
  1688  074B  2F4D               	goto	u680
  1689  074C  2F4E               	goto	u681
  1690  074D                     u680:	
  1691  074D  07AF               	addwf	??_UART_Init+5,f
  1692  074E                     u681:	
  1693  074E  0834               	movf	??_UART_Init+10,w
  1694  074F  1803               	skipnc
  1695  0750  0F34               	incfsz	??_UART_Init+10,w
  1696  0751  2F53               	goto	u682
  1697  0752  2F54               	goto	u683
  1698  0753                     u682:	
  1699  0753  07B0               	addwf	??_UART_Init+6,f
  1700  0754                     u683:	
  1701  0754  0835               	movf	??_UART_Init+11,w
  1702  0755  1803               	skipnc
  1703  0756  0A35               	incf	??_UART_Init+11,w
  1704  0757  07B1               	addwf	??_UART_Init+7,f
  1705  0758  0831               	movf	??_UART_Init+7,w
  1706  0759  00F7               	movwf	___aldiv@dividend+3
  1707  075A  0830               	movf	??_UART_Init+6,w
  1708  075B  00F6               	movwf	___aldiv@dividend+2
  1709  075C  082F               	movf	??_UART_Init+5,w
  1710  075D  00F5               	movwf	___aldiv@dividend+1
  1711  075E  082E               	movf	??_UART_Init+4,w
  1712  075F  00F4               	movwf	___aldiv@dividend
  1713  0760  120A  118A  25B3  120A  118A  	fcall	___aldiv
  1714  0765  0871               	movf	?___aldiv+1,w
  1715  0766  00FA               	movwf	UART_Init@x+1
  1716  0767  0870               	movf	?___aldiv,w
  1717  0768  00F9               	movwf	UART_Init@x
  1718                           
  1719                           ;Lifitrial1.c: 347: if(x>255)
  1720  0769  3001               	movlw	1
  1721  076A  027A               	subwf	UART_Init@x+1,w
  1722  076B  3000               	movlw	0
  1723  076C  1903               	skipnz
  1724  076D  0279               	subwf	UART_Init@x,w
  1725  076E  1C03               	skipc
  1726  076F  2FDF               	goto	l1024
  1727                           
  1728                           ;Lifitrial1.c: 348: {
  1729                           ;Lifitrial1.c: 349: x = (8000000 - baudrate*16)/(baudrate*16);
  1730  0770  1283               	bcf	3,5	;RP0=0, select bank0
  1731  0771  1303               	bcf	3,6	;RP1=0, select bank0
  1732  0772  0826               	movf	UART_Init@baudrate,w
  1733  0773  00AA               	movwf	??_UART_Init
  1734  0774  0827               	movf	UART_Init@baudrate+1,w
  1735  0775  00AB               	movwf	??_UART_Init+1
  1736  0776  0828               	movf	UART_Init@baudrate+2,w
  1737  0777  00AC               	movwf	??_UART_Init+2
  1738  0778  0829               	movf	UART_Init@baudrate+3,w
  1739  0779  00AD               	movwf	??_UART_Init+3
  1740  077A  3004               	movlw	4
  1741  077B                     u705:	
  1742  077B  1003               	clrc
  1743  077C  0DAA               	rlf	??_UART_Init,f
  1744  077D  0DAB               	rlf	??_UART_Init+1,f
  1745  077E  0DAC               	rlf	??_UART_Init+2,f
  1746  077F  0DAD               	rlf	??_UART_Init+3,f
  1747  0780  3EFF               	addlw	-1
  1748  0781  1D03               	skipz
  1749  0782  2F7B               	goto	u705
  1750  0783  082D               	movf	??_UART_Init+3,w
  1751  0784  00F3               	movwf	___aldiv@divisor+3
  1752  0785  082C               	movf	??_UART_Init+2,w
  1753  0786  00F2               	movwf	___aldiv@divisor+2
  1754  0787  082B               	movf	??_UART_Init+1,w
  1755  0788  00F1               	movwf	___aldiv@divisor+1
  1756  0789  082A               	movf	??_UART_Init,w
  1757  078A  00F0               	movwf	___aldiv@divisor
  1758  078B  3000               	movlw	0
  1759  078C  00AE               	movwf	??_UART_Init+4
  1760  078D  3012               	movlw	18
  1761  078E  00AF               	movwf	??_UART_Init+5
  1762  078F  307A               	movlw	122
  1763  0790  00B0               	movwf	??_UART_Init+6
  1764  0791  3000               	movlw	0
  1765  0792  00B1               	movwf	??_UART_Init+7
  1766  0793  0826               	movf	UART_Init@baudrate,w
  1767  0794  00B2               	movwf	??_UART_Init+8
  1768  0795  0827               	movf	UART_Init@baudrate+1,w
  1769  0796  00B3               	movwf	??_UART_Init+9
  1770  0797  0828               	movf	UART_Init@baudrate+2,w
  1771  0798  00B4               	movwf	??_UART_Init+10
  1772  0799  0829               	movf	UART_Init@baudrate+3,w
  1773  079A  00B5               	movwf	??_UART_Init+11
  1774  079B  3004               	movlw	4
  1775  079C                     u715:	
  1776  079C  1003               	clrc
  1777  079D  0DB2               	rlf	??_UART_Init+8,f
  1778  079E  0DB3               	rlf	??_UART_Init+9,f
  1779  079F  0DB4               	rlf	??_UART_Init+10,f
  1780  07A0  0DB5               	rlf	??_UART_Init+11,f
  1781  07A1  3EFF               	addlw	-1
  1782  07A2  1D03               	skipz
  1783  07A3  2F9C               	goto	u715
  1784  07A4  09B2               	comf	??_UART_Init+8,f
  1785  07A5  09B3               	comf	??_UART_Init+9,f
  1786  07A6  09B4               	comf	??_UART_Init+10,f
  1787  07A7  09B5               	comf	??_UART_Init+11,f
  1788  07A8  0AB2               	incf	??_UART_Init+8,f
  1789  07A9  1903               	skipnz
  1790  07AA  0AB3               	incf	??_UART_Init+9,f
  1791  07AB  1903               	skipnz
  1792  07AC  0AB4               	incf	??_UART_Init+10,f
  1793  07AD  1903               	skipnz
  1794  07AE  0AB5               	incf	??_UART_Init+11,f
  1795  07AF  0832               	movf	??_UART_Init+8,w
  1796  07B0  07AE               	addwf	??_UART_Init+4,f
  1797  07B1  0833               	movf	??_UART_Init+9,w
  1798  07B2  1803               	skipnc
  1799  07B3  0F33               	incfsz	??_UART_Init+9,w
  1800  07B4  2FB6               	goto	u720
  1801  07B5  2FB7               	goto	u721
  1802  07B6                     u720:	
  1803  07B6  07AF               	addwf	??_UART_Init+5,f
  1804  07B7                     u721:	
  1805  07B7  0834               	movf	??_UART_Init+10,w
  1806  07B8  1803               	skipnc
  1807  07B9  0F34               	incfsz	??_UART_Init+10,w
  1808  07BA  2FBC               	goto	u722
  1809  07BB  2FBD               	goto	u723
  1810  07BC                     u722:	
  1811  07BC  07B0               	addwf	??_UART_Init+6,f
  1812  07BD                     u723:	
  1813  07BD  0835               	movf	??_UART_Init+11,w
  1814  07BE  1803               	skipnc
  1815  07BF  0A35               	incf	??_UART_Init+11,w
  1816  07C0  07B1               	addwf	??_UART_Init+7,f
  1817  07C1  0831               	movf	??_UART_Init+7,w
  1818  07C2  00F7               	movwf	___aldiv@dividend+3
  1819  07C3  0830               	movf	??_UART_Init+6,w
  1820  07C4  00F6               	movwf	___aldiv@dividend+2
  1821  07C5  082F               	movf	??_UART_Init+5,w
  1822  07C6  00F5               	movwf	___aldiv@dividend+1
  1823  07C7  082E               	movf	??_UART_Init+4,w
  1824  07C8  00F4               	movwf	___aldiv@dividend
  1825  07C9  120A  118A  25B3  120A  118A  	fcall	___aldiv
  1826  07CE  0871               	movf	?___aldiv+1,w
  1827  07CF  00FA               	movwf	UART_Init@x+1
  1828  07D0  0870               	movf	?___aldiv,w
  1829  07D1  00F9               	movwf	UART_Init@x
  1830                           
  1831                           ;Lifitrial1.c: 351: BRGH = 1;
  1832  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  1833  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  1834  07D4  1518               	bsf	24,2	;volatile
  1835                           
  1836                           ;Lifitrial1.c: 352: SPBRG = x;
  1837  07D5  0879               	movf	UART_Init@x,w
  1838  07D6  0099               	movwf	25	;volatile
  1839                           
  1840                           ;Lifitrial1.c: 353: SYNC = 0;
  1841  07D7  1218               	bcf	24,4	;volatile
  1842                           
  1843                           ;Lifitrial1.c: 354: SPEN = 1;
  1844  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1845  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1846  07DA  1798               	bsf	24,7	;volatile
  1847                           
  1848                           ;Lifitrial1.c: 355: CREN = 1;
  1849  07DB  1618               	bsf	24,4	;volatile
  1850                           
  1851                           ;Lifitrial1.c: 356: TXEN = 1;
  1852  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  1853  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  1854  07DE  1698               	bsf	24,5	;volatile
  1855  07DF                     l1024:	
  1856                           
  1857                           ;Lifitrial1.c: 357: }
  1858                           ;Lifitrial1.c: 358: if(x<256)
  1859  07DF  3001               	movlw	1
  1860  07E0  027A               	subwf	UART_Init@x+1,w
  1861  07E1  3000               	movlw	0
  1862  07E2  1903               	skipnz
  1863  07E3  0279               	subwf	UART_Init@x,w
  1864  07E4  1803               	skipnc
  1865  07E5  0008               	return
  1866                           
  1867                           ;Lifitrial1.c: 359: {
  1868                           ;Lifitrial1.c: 360: BRGH = 0;
  1869  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  1870  07E7  1303               	bcf	3,6	;RP1=0, select bank1
  1871  07E8  1118               	bcf	24,2	;volatile
  1872                           
  1873                           ;Lifitrial1.c: 361: SPBRG = x;
  1874  07E9  0879               	movf	UART_Init@x,w
  1875  07EA  0099               	movwf	25	;volatile
  1876                           
  1877                           ;Lifitrial1.c: 362: SYNC = 0;
  1878  07EB  1218               	bcf	24,4	;volatile
  1879                           
  1880                           ;Lifitrial1.c: 363: SPEN = 1;
  1881  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  1882  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  1883  07EE  1798               	bsf	24,7	;volatile
  1884                           
  1885                           ;Lifitrial1.c: 364: CREN = 1;
  1886  07EF  1618               	bsf	24,4	;volatile
  1887                           
  1888                           ;Lifitrial1.c: 365: TXEN = 1;
  1889  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  1890  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  1891  07F2  1698               	bsf	24,5	;volatile
  1892                           
  1893                           ;Lifitrial1.c: 366: return 1;
  1894                           ;	Return value of _UART_Init is never used
  1895  07F3  0008               	return
  1896  07F4                     __end_of_UART_Init:	
  1897                           ;Lifitrial1.c: 367: }
  1898                           ;Lifitrial1.c: 368: return 0;
  1899                           ;	Return value of _UART_Init is never used
  1900                           
  1901                           
  1902                           	psect	text8
  1903  05B3                     __ptext8:	
  1904 ;; *************** function ___aldiv *****************
  1905 ;; Defined at:
  1906 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  divisor         4    0[COMMON] long 
  1909 ;;  dividend        4    4[COMMON] long 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  quotient        4    2[BANK0 ] long 
  1912 ;;  sign            1    1[BANK0 ] unsigned char 
  1913 ;;  counter         1    0[BANK0 ] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  4    0[COMMON] long 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1923 ;;      Params:         8       0       0       0       0
  1924 ;;      Locals:         0       6       0       0       0
  1925 ;;      Temps:          1       0       0       0       0
  1926 ;;      Totals:         9       6       0       0       0
  1927 ;;Total ram usage:       15 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_UART_Init
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           
  1937                           ;psect for function ___aldiv
  1938  05B3                     ___aldiv:	
  1939                           
  1940                           ;incstack = 0
  1941                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1942  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1943  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1944  05B5  01A1               	clrf	___aldiv@sign
  1945  05B6  1FF3               	btfss	___aldiv@divisor+3,7
  1946  05B7  2DC5               	goto	l353
  1947  05B8  09F0               	comf	___aldiv@divisor,f
  1948  05B9  09F1               	comf	___aldiv@divisor+1,f
  1949  05BA  09F2               	comf	___aldiv@divisor+2,f
  1950  05BB  09F3               	comf	___aldiv@divisor+3,f
  1951  05BC  0AF0               	incf	___aldiv@divisor,f
  1952  05BD  1903               	skipnz
  1953  05BE  0AF1               	incf	___aldiv@divisor+1,f
  1954  05BF  1903               	skipnz
  1955  05C0  0AF2               	incf	___aldiv@divisor+2,f
  1956  05C1  1903               	skipnz
  1957  05C2  0AF3               	incf	___aldiv@divisor+3,f
  1958  05C3  01A1               	clrf	___aldiv@sign
  1959  05C4  0AA1               	incf	___aldiv@sign,f
  1960  05C5                     l353:	
  1961  05C5  1FF7               	btfss	___aldiv@dividend+3,7
  1962  05C6  2DD6               	goto	l976
  1963  05C7  09F4               	comf	___aldiv@dividend,f
  1964  05C8  09F5               	comf	___aldiv@dividend+1,f
  1965  05C9  09F6               	comf	___aldiv@dividend+2,f
  1966  05CA  09F7               	comf	___aldiv@dividend+3,f
  1967  05CB  0AF4               	incf	___aldiv@dividend,f
  1968  05CC  1903               	skipnz
  1969  05CD  0AF5               	incf	___aldiv@dividend+1,f
  1970  05CE  1903               	skipnz
  1971  05CF  0AF6               	incf	___aldiv@dividend+2,f
  1972  05D0  1903               	skipnz
  1973  05D1  0AF7               	incf	___aldiv@dividend+3,f
  1974  05D2  3001               	movlw	1
  1975  05D3  00F8               	movwf	??___aldiv
  1976  05D4  0878               	movf	??___aldiv,w
  1977  05D5  06A1               	xorwf	___aldiv@sign,f
  1978  05D6                     l976:	
  1979  05D6  3000               	movlw	0
  1980  05D7  00A5               	movwf	___aldiv@quotient+3
  1981  05D8  3000               	movlw	0
  1982  05D9  00A4               	movwf	___aldiv@quotient+2
  1983  05DA  3000               	movlw	0
  1984  05DB  00A3               	movwf	___aldiv@quotient+1
  1985  05DC  3000               	movlw	0
  1986  05DD  00A2               	movwf	___aldiv@quotient
  1987  05DE  0873               	movf	___aldiv@divisor+3,w
  1988  05DF  0472               	iorwf	___aldiv@divisor+2,w
  1989  05E0  0471               	iorwf	___aldiv@divisor+1,w
  1990  05E1  0470               	iorwf	___aldiv@divisor,w
  1991  05E2  1903               	skipnz
  1992  05E3  2E2B               	goto	l998
  1993  05E4  01A0               	clrf	___aldiv@counter
  1994  05E5  0AA0               	incf	___aldiv@counter,f
  1995  05E6                     l984:	
  1996  05E6  1BF3               	btfsc	___aldiv@divisor+3,7
  1997  05E7  2DF6               	goto	l986
  1998  05E8  3001               	movlw	1
  1999  05E9  00F8               	movwf	??___aldiv
  2000  05EA                     u595:	
  2001  05EA  1003               	clrc
  2002  05EB  0DF0               	rlf	___aldiv@divisor,f
  2003  05EC  0DF1               	rlf	___aldiv@divisor+1,f
  2004  05ED  0DF2               	rlf	___aldiv@divisor+2,f
  2005  05EE  0DF3               	rlf	___aldiv@divisor+3,f
  2006  05EF  0BF8               	decfsz	??___aldiv,f
  2007  05F0  2DEA               	goto	u595
  2008  05F1  3001               	movlw	1
  2009  05F2  00F8               	movwf	??___aldiv
  2010  05F3  0878               	movf	??___aldiv,w
  2011  05F4  07A0               	addwf	___aldiv@counter,f
  2012  05F5  2DE6               	goto	l984
  2013  05F6                     l986:	
  2014  05F6  3001               	movlw	1
  2015  05F7  00F8               	movwf	??___aldiv
  2016  05F8                     u615:	
  2017  05F8  1003               	clrc
  2018  05F9  0DA2               	rlf	___aldiv@quotient,f
  2019  05FA  0DA3               	rlf	___aldiv@quotient+1,f
  2020  05FB  0DA4               	rlf	___aldiv@quotient+2,f
  2021  05FC  0DA5               	rlf	___aldiv@quotient+3,f
  2022  05FD  0BF8               	decfsz	??___aldiv,f
  2023  05FE  2DF8               	goto	u615
  2024  05FF  0873               	movf	___aldiv@divisor+3,w
  2025  0600  0277               	subwf	___aldiv@dividend+3,w
  2026  0601  1D03               	skipz
  2027  0602  2E0D               	goto	u625
  2028  0603  0872               	movf	___aldiv@divisor+2,w
  2029  0604  0276               	subwf	___aldiv@dividend+2,w
  2030  0605  1D03               	skipz
  2031  0606  2E0D               	goto	u625
  2032  0607  0871               	movf	___aldiv@divisor+1,w
  2033  0608  0275               	subwf	___aldiv@dividend+1,w
  2034  0609  1D03               	skipz
  2035  060A  2E0D               	goto	u625
  2036  060B  0870               	movf	___aldiv@divisor,w
  2037  060C  0274               	subwf	___aldiv@dividend,w
  2038  060D                     u625:	
  2039  060D  1C03               	skipc
  2040  060E  2E1E               	goto	l994
  2041  060F  0870               	movf	___aldiv@divisor,w
  2042  0610  02F4               	subwf	___aldiv@dividend,f
  2043  0611  0871               	movf	___aldiv@divisor+1,w
  2044  0612  1C03               	skipc
  2045  0613  0F71               	incfsz	___aldiv@divisor+1,w
  2046  0614  02F5               	subwf	___aldiv@dividend+1,f
  2047  0615  0872               	movf	___aldiv@divisor+2,w
  2048  0616  1C03               	skipc
  2049  0617  0F72               	incfsz	___aldiv@divisor+2,w
  2050  0618  02F6               	subwf	___aldiv@dividend+2,f
  2051  0619  0873               	movf	___aldiv@divisor+3,w
  2052  061A  1C03               	skipc
  2053  061B  0F73               	incfsz	___aldiv@divisor+3,w
  2054  061C  02F7               	subwf	___aldiv@dividend+3,f
  2055  061D  1422               	bsf	___aldiv@quotient,0
  2056  061E                     l994:	
  2057  061E  3001               	movlw	1
  2058  061F                     u635:	
  2059  061F  1003               	clrc
  2060  0620  0CF3               	rrf	___aldiv@divisor+3,f
  2061  0621  0CF2               	rrf	___aldiv@divisor+2,f
  2062  0622  0CF1               	rrf	___aldiv@divisor+1,f
  2063  0623  0CF0               	rrf	___aldiv@divisor,f
  2064  0624  3EFF               	addlw	-1
  2065  0625  1D03               	skipz
  2066  0626  2E1F               	goto	u635
  2067  0627  3001               	movlw	1
  2068  0628  02A0               	subwf	___aldiv@counter,f
  2069  0629  1D03               	btfss	3,2
  2070  062A  2DF6               	goto	l986
  2071  062B                     l998:	
  2072  062B  0821               	movf	___aldiv@sign,w
  2073  062C  1903               	btfsc	3,2
  2074  062D  2E39               	goto	l1002
  2075  062E  09A2               	comf	___aldiv@quotient,f
  2076  062F  09A3               	comf	___aldiv@quotient+1,f
  2077  0630  09A4               	comf	___aldiv@quotient+2,f
  2078  0631  09A5               	comf	___aldiv@quotient+3,f
  2079  0632  0AA2               	incf	___aldiv@quotient,f
  2080  0633  1903               	skipnz
  2081  0634  0AA3               	incf	___aldiv@quotient+1,f
  2082  0635  1903               	skipnz
  2083  0636  0AA4               	incf	___aldiv@quotient+2,f
  2084  0637  1903               	skipnz
  2085  0638  0AA5               	incf	___aldiv@quotient+3,f
  2086  0639                     l1002:	
  2087  0639  0825               	movf	___aldiv@quotient+3,w
  2088  063A  00F3               	movwf	?___aldiv+3
  2089  063B  0824               	movf	___aldiv@quotient+2,w
  2090  063C  00F2               	movwf	?___aldiv+2
  2091  063D  0823               	movf	___aldiv@quotient+1,w
  2092  063E  00F1               	movwf	?___aldiv+1
  2093  063F  0822               	movf	___aldiv@quotient,w
  2094  0640  00F0               	movwf	?___aldiv
  2095  0641  0008               	return
  2096  0642                     __end_of___aldiv:	
  2097                           
  2098                           	psect	text9
  2099  0536                     __ptext9:	
  2100 ;; *************** function _I2C_init *****************
  2101 ;; Defined at:
  2102 ;;		line 225 in file "Lifitrial1.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;		None               void
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         0       0       0       0       0
  2117 ;;      Locals:         0       0       0       0       0
  2118 ;;      Temps:          1       0       0       0       0
  2119 ;;      Totals:         1       0       0       0       0
  2120 ;;Total ram usage:        1 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function _I2C_init
  2131  0536                     _I2C_init:	
  2132                           
  2133                           ;Lifitrial1.c: 227: TRISCbits.TRISC3 = 1;
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in _I2C_init: [wreg+status,2+status,0]
  2137  0536  1683               	bsf	3,5	;RP0=1, select bank1
  2138  0537  1303               	bcf	3,6	;RP1=0, select bank1
  2139  0538  1587               	bsf	7,3	;volatile
  2140                           
  2141                           ;Lifitrial1.c: 228: TRISCbits.TRISC4 = 1;
  2142  0539  1607               	bsf	7,4	;volatile
  2143                           
  2144                           ;Lifitrial1.c: 229: SSPIF=0;
  2145  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2146  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2147  053C  118C               	bcf	12,3	;volatile
  2148                           
  2149                           ;Lifitrial1.c: 230: SSPCON2=0x00;
  2150  053D  1683               	bsf	3,5	;RP0=1, select bank1
  2151  053E  1303               	bcf	3,6	;RP1=0, select bank1
  2152  053F  0191               	clrf	17	;volatile
  2153                           
  2154                           ;Lifitrial1.c: 231: SSPSTAT|=0x00;
  2155  0540  0814               	movf	20,w	;volatile
  2156                           
  2157                           ;Lifitrial1.c: 232: SSPADD=29;
  2158  0541  301D               	movlw	29
  2159  0542  0093               	movwf	19	;volatile
  2160                           
  2161                           ;Lifitrial1.c: 233: SSPCON|=0x28;
  2162  0543  3028               	movlw	40
  2163  0544  00F0               	movwf	??_I2C_init
  2164  0545  0870               	movf	??_I2C_init,w
  2165  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0547  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0548  0494               	iorwf	20,f	;volatile
  2168  0549  0008               	return
  2169  054A                     __end_of_I2C_init:	
  2170  007E                     btemp	set	126	;btemp
  2171  007E                     wtemp	set	126
  2172  007E                     wtemp0	set	126
  2173  0080                     wtemp1	set	128
  2174  0082                     wtemp2	set	130
  2175  0084                     wtemp3	set	132
  2176  0086                     wtemp4	set	134
  2177  0088                     wtemp5	set	136
  2178  007F                     wtemp6	set	127
  2179  007E                     ttemp	set	126
  2180  007E                     ttemp0	set	126
  2181  0081                     ttemp1	set	129
  2182  0084                     ttemp2	set	132
  2183  0087                     ttemp3	set	135
  2184  007F                     ttemp4	set	127
  2185  007E                     ltemp	set	126
  2186  007E                     ltemp0	set	126
  2187  0082                     ltemp1	set	130
  2188  0086                     ltemp2	set	134
  2189  0080                     ltemp3	set	128


Data Sizes:
    Strings     455
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      74
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Read_Text@a	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 97
		 -> NULL(NULL[0]), UART_Read_Text@string(BANK0[20]), STR_15(CODE[12]), STR_14(CODE[20]), 
		 -> STR_13(CODE[33]), STR_12(CODE[24]), STR_5(CODE[19]), STR_4(CODE[19]), 
		 -> STR_3(CODE[20]), STR_2(CODE[97]), STR_1(CODE[24]), 

    sp__UART_Read_Text	PTR unsigned char  size(1) Largest target is 20
		 -> UART_Read_Text@string(BANK0[20]), 

    is	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), UART_Read_Text@string(BANK0[20]), 

    main@msgm	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_13(CODE[33]), 

    main@fin	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_12(CODE[24]), 

    main@err	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_11(CODE[52]), 

    main@msg5	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    main@msg4	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_9(CODE[15]), 

    main@msg3	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_8(CODE[36]), 

    main@msg2	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_7(CODE[36]), 

    main@msg1	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_6(CODE[36]), 

    main@arr5	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_5(CODE[19]), 

    main@arr4	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), 

    main@arr3	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[20]), 

    main@arr2	PTR const unsigned char  size(2) Largest target is 97
		 -> STR_2(CODE[97]), 

    main@arr1	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 


Critical Paths under _main in COMMON

    _main->_UART_Read_Text
    _delay_ms->_delay1ms
    _UART_Read_Text->_UART_Write_Text
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    2475
                                             13 COMMON     1     1      0
                                             22 BANK0     27    27      0
                           _I2C_init
                          _UART_Init
                          _UART_Read
                     _UART_Read_Text
                         _UART_Write
                    _UART_Write_Text
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     144
                                              2 COMMON     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (2) _delay1ms                                             2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read_Text                                       5     5      0     734
                                              8 COMMON     5     5      0
                          _UART_Read
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     642
                                              1 COMMON     7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     743
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
   _UART_Init
     ___aldiv
   _UART_Read
   _UART_Read_Text
     _UART_Read
     _UART_Write_Text
       _UART_Write
   _UART_Write
   _UART_Write_Text
     _UART_Write
   _delay_ms
     _delay1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      58       3        0.0%
BITBANK0            50      0       1       4        1.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     31      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      58      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Jan 17 18:38:46 2016

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l69 067C                        _is 0054                        fsr 0004  
                     l161 050E                       l158 050A                       l353 05C5  
                     l179 04FB                       l948 0578                       l984 05E6  
                     l976 05D6                       l994 061E                       l986 05F6  
                     l998 062B              __CFG_CPD$OFF 0000                       u615 05F8  
                     u720 07B6                       u625 060D                       u721 07B7  
                     u705 077B                       u722 07BC                       u635 061F  
                     u723 07BD                       u715 079C                       u680 074D  
                     u681 074E                       u665 0712                       u682 0753  
                     u595 05EA                       u683 0754                       u675 0733  
                     fsr0 0004                       indf 0000              __CFG_LVP$OFF 0000  
                    l1002 0639                      l1024 07DF                      l1070 0568  
                    l1068 054F                      STR_1 0922                      STR_2 0800  
                    STR_3 0952                      STR_4 098D                      STR_5 097A  
                    STR_6 0895                      STR_7 08B9                      STR_8 08DD  
                    STR_9 09A0                      _BRGH 04C2                      _CREN 00C4  
                    _RCIF 0065                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _TXIF 0064                      _SYNC 04C4  
            __CFG_WRT$OFF 0000                      _main 0642                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E          __end_of_I2C_init 054A  
                    start 0000                      ttemp 007E                      wtemp 007E  
           __CFG_IESO$OFF 0000      I2C_address_send1@con 0051      I2C_address_send2@con 0052  
           __CFG_MCLRE$ON 0000   __end_of_UART_Write_Text 05B3           __end_of___aldiv 0642  
                   ?_main 0070                     STR_10 09BB                     STR_11 0861  
                   STR_12 093A                     STR_13 0901                     STR_14 0966  
                   STR_15 09AF             __CFG_WDTE$OFF 0000                     _RCREG 001A  
                   _SPBRG 0099                     _SSPIF 0063                     _TXREG 0019  
          __CFG_FCMEN$OFF 0000               ?_UART_Write 0070        __size_of_UART_Init 00ED  
      __size_of_UART_Read 0006      UART_Read_Text@string 0055                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 07F4  
            __end_of_main 0707                    ??_main 007D                    _INTCON 000B  
                  _SSPADD 0093                    _SSPCON 0014                    _SSPBUF 0013  
        __end_of_delay1ms 0526          __end_of_delay_ms 0536            __CFG_PWRTE$OFF 0000  
       __end_of_UART_Init 07F4         __end_of_UART_Read 0501       __size_of_UART_Write 000E  
               ??___aldiv 0078          ?_UART_Write_Text 0071   __size_of_UART_Read_Text 002C  
               ?_I2C_init 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
              ??_I2C_init 0070                __pbssBANK0 0051                __pmaintext 0642  
                 _IC2_ack 0348                 ?_delay1ms 0070                 ?_delay_ms 0072  
            ??_UART_Write 0070                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 0003                   ___aldiv 05B3        __end_of_UART_Write 0517  
          _UART_Read_Text 054A                   __ptext1 0526                   __ptext2 0517  
                 __ptext3 054A                   __ptext4 0576                   __ptext5 0509  
                 __ptext6 04FB                   __ptext7 0707                   __ptext8 05B3  
                 __ptext9 0536                ??_delay1ms 0070          ___aldiv@dividend 0074  
              ??_delay_ms 0074                   main@fin 004C                   main@err 0040  
                 clrloop0 0502      end_of_initialization 07FC    __end_of_UART_Read_Text 0576  
        ___aldiv@quotient 0022              __pstringtext 0800                 _UART_Init 0707  
               _UART_Read 04FB            UART_Write@data 0070                 _TRISCbits 0087  
       __size_of_I2C_init 0014                main@choice 0050       I2C_address_send@con 0053  
         ?_UART_Read_Text 0070                ?_UART_Init 0026                ?_UART_Read 0070  
           __pbitbssBANK0 0348  __size_of_UART_Write_Text 003D       start_initialization 07F4  
__CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002             __pcstackBANK0 0020  
       __size_of_delay1ms 000F         __size_of_delay_ms 0010                  ?___aldiv 0070  
             ??_UART_Init 002A               ??_UART_Read 0070                 __pstrings 0003  
                _I2C_init 0536                UART_Init@x 0079                 delay1ms@j 0070  
       ??_UART_Write_Text 0073           ___aldiv@divisor 0070           ___aldiv@counter 0020  
               delay_ms@i 0072           UART_Read_Text@a 0079           UART_Read_Text@i 007C  
         UART_Read_Text@x 007B                 clear_ram0 0501                  _PIR1bits 000C  
       UART_Init@baudrate 0026               __stringbase 0015          ??_UART_Read_Text 0078  
        __size_of___aldiv 008F        __end_of__stringtab 0015                  _delay1ms 0517  
                _delay_ms 0526         __CFG_BOR4V$BOR40V 0000       UART_Write_Text@text 0071  
           __size_of_main 00C5                  main@arr1 0042                  main@arr2 0044  
                main@arr3 0046                  main@arr4 0048                  main@arr5 004A  
                main@msg1 0036                  main@msg2 0038                  main@msg3 003A  
                main@msg4 003C                  main@msg5 003E                  main@msgm 004E  
               stringcode 000D                _OSCCONbits 008F           _UART_Write_Text 0576  
                stringtab 0003              ___aldiv@sign 0021                _UART_Write 0509  
             _SSPCON2bits 0091          UART_Write_Text@i 0076  
